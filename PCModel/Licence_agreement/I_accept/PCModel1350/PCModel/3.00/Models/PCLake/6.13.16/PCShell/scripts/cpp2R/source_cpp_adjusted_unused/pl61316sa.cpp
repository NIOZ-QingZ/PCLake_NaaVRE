sTime = time + DayStart;
MassHyp = IF CalcMass EQ TRUE THEN sDepthWHyp ELSE 1.0 ENDIF;
MassEpi = IF CalcMass EQ TRUE THEN sDepthWEpi ELSE 1.0 ENDIF;
MassWM = IF CalcMass EQ TRUE THEN sDepthWM ELSE 1.0 ENDIF;
oNH4WHyp = sNH4WHyp / MassHyp;
oNO3WHyp = sNO3WHyp / MassHyp;
oPO4WHyp = sPO4WHyp / MassHyp;
oPAIMWHyp = sPAIMWHyp / MassHyp;
oSiO2WHyp = sSiO2WHyp / MassHyp;
oO2WHyp = sO2WHyp / MassHyp;
oDDetWHyp = sDDetWHyp / MassHyp;
oNDetWHyp = sNDetWHyp / MassHyp;
oPDetWHyp = sPDetWHyp / MassHyp;
oSiDetWHyp = sSiDetWHyp / MassHyp;
oDIMWHyp = sDIMWHyp / MassHyp;
oDDiatWHyp = sDDiatWHyp / MassHyp;
oNDiatWHyp = sNDiatWHyp / MassHyp;
oPDiatWHyp = sPDiatWHyp / MassHyp;
oDGrenWHyp = sDGrenWHyp / MassHyp;
oNGrenWHyp = sNGrenWHyp / MassHyp;
oPGrenWHyp = sPGrenWHyp / MassHyp;
oDBlueWHyp = sDBlueWHyp / MassHyp;
oNBlueWHyp = sNBlueWHyp / MassHyp;
oPBlueWHyp = sPBlueWHyp / MassHyp;
oDZooHyp = sDZooHyp / MassHyp;
oNZooHyp = sNZooHyp / MassHyp;
oPZooHyp = sPZooHyp / MassHyp;
oNH4WM = sNH4WM / MassWM;
oNO3WM = sNO3WM / MassWM;
oPO4WM = sPO4WM / MassWM;
oPAIMWM = sPAIMWM / MassWM;
oSiO2WM = sSiO2WM / MassWM;
oO2WM = sO2WM / MassWM;
oDDetWM = sDDetWM / MassWM;
oNDetWM = sNDetWM / MassWM;
oPDetWM = sPDetWM / MassWM;
oSiDetWM = sSiDetWM / MassWM;
oDIMWM = sDIMWM / MassWM;
oDDiatWM = sDDiatWM / MassWM;
oNDiatWM = sNDiatWM / MassWM;
oPDiatWM = sPDiatWM / MassWM;
oDGrenWM = sDGrenWM / MassWM;
oNGrenWM = sNGrenWM / MassWM;
oPGrenWM = sPGrenWM / MassWM;
oDBlueWM = sDBlueWM / MassWM;
oNBlueWM = sNBlueWM / MassWM;
oPBlueWM = sPBlueWM / MassWM;
oDZooM = sDZooM / MassWM;
oNZooM = sNZooM / MassWM;
oPZooM = sPZooM / MassWM;
oNH4WEpi = sNH4WEpi / MassEpi;
oNO3WEpi = sNO3WEpi / MassEpi;
oPO4WEpi = sPO4WEpi / MassEpi;
oPAIMWEpi = sPAIMWEpi / MassEpi;
oSiO2WEpi = sSiO2WEpi / MassEpi;
oO2WEpi = sO2WEpi / MassEpi;
oDDetWEpi = sDDetWEpi / MassEpi;
oNDetWEpi = sNDetWEpi / MassEpi;
oPDetWEpi = sPDetWEpi / MassEpi;
oSiDetWEpi = sSiDetWEpi / MassEpi;
oDIMWEpi = sDIMWEpi / MassEpi;
oDDiatWEpi = sDDiatWEpi / MassEpi;
oNDiatWEpi = sNDiatWEpi / MassEpi;
oPDiatWEpi = sPDiatWEpi / MassEpi;
oDGrenWEpi = sDGrenWEpi / MassEpi;
oNGrenWEpi = sNGrenWEpi / MassEpi;
oPGrenWEpi = sPGrenWEpi / MassEpi;
oDBlueWEpi = sDBlueWEpi / MassEpi;
oNBlueWEpi = sNBlueWEpi / MassEpi;
oPBlueWEpi = sPBlueWEpi / MassEpi;
oDZooEpi = sDZooEpi / MassEpi;
oNZooEpi = sNZooEpi / MassEpi;
oPZooEpi = sPZooEpi / MassEpi;
TimeYears = sTime / DaysPerYear;
Day = sTime - FLOOR(TimeYears) * DaysPerYear;
Years = YearZero + TimeYears;
uDepthMix =IF ( calcMixDepth EQ TRUE ) THEN cAMix * POW ( cFetch , (cBMix) ) ELSE cDepthMix ENDIF;
aInclStrat =IF ( InclStrat EQ FALSE ) THEN 0.0 ELSE 1.0 ENDIF;
uDepthW =IF ( aInclStrat EQ TRUE ) THEN sDepthWHyp + sDepthWEpi ELSE sDepthWEpi ENDIF;
uVegHeight = IF ( cVegHeight LT uDepthW ) THEN cVegHeight ELSE uDepthW ENDIF;
uVegHeightHyp = IF ( aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uVegHeight GT sDepthWHyp ) THEN sDepthWHyp ELSE uVegHeight ENDIF;
uVegHeightEpi = IF ( aInclStrat EQ FALSE AND uVegHeight LT sDepthWEpi ) THEN uVegHeight ELSEIF ( aInclStrat EQ FALSE AND uVegHeight GE sDepthWEpi ) THEN sDepthWEpi ELSEIF (uVegHeight GT sDepthWHyp ) THEN uVegHeight -sDepthWHyp ELSE 0.0 ENDIF;
uVegHeightLight = cVegL *LN( 1.0 + uVegHeight );
uVegHeightLightEpi = IF (  uVegHeightLight GT uVegHeightEpi ) THEN uVegHeightEpi ELSE uVegHeightLight ENDIF;
uVegHeightLightHyp =  uVegHeightLight - uVegHeightLightEpi  ;
uDVegHyp = uVegHeightHyp / uVegHeight * sDVeg;
uDVegEpi = uVegHeightEpi / uVegHeight * sDVeg;
uVegShade = IF ( ReadVegShade  EQ  TRUE) THEN mVegShade ELSE fVegShade ENDIF;
aExtPhytHyp = cExtSpDiat * oDDiatWHyp + cExtSpGren * oDGrenWHyp + cExtSpBlue * oDBlueWHyp;
aExtDetHyp = cExtSpDet * oDDetWHyp;
aExtIMHyp = cExtSpIM * oDIMWHyp;
aExtCoefOpenHyp = cExtWat + aExtIMHyp + aExtDetHyp + aExtPhytHyp;
aExtPhytEpi = cExtSpDiat * oDDiatWEpi + cExtSpGren * oDGrenWEpi + cExtSpBlue * oDBlueWEpi;
aExtDetEpi = cExtSpDet * oDDetWEpi;
aExtIMEpi = cExtSpIM * oDIMWEpi;
aExtCoefOpenEpi = cExtWat + aExtIMEpi + aExtDetEpi + aExtPhytEpi;
aExtSurf = cExtSpBlue * sDBlueSurf;
aTmEpi =  cTmAveEpi - cTmVarEpi * COS(2.0*Pi*(sTime + TenDays - cTimeLag) / DaysInYear) ;
aTmHyp =  cTmAveHyp - cTmVarHyp * COS(2.0*Pi*(sTime + TenDays - cTimeLag) / DaysInYear) ;
uTmEpi = IF (FALSE EQ InclSeason) THEN cTmAveEpi ELSEIF (ReadTemp EQ TRUE) THEN mTempEpi ELSEIF ( aTmEpi GT 0.0  ) THEN aTmEpi ELSE  0.0 ENDIF;
uTmHyp = IF (FALSE EQ InclSeason) THEN cTmAveHyp ELSEIF (ReadTemp EQ TRUE) THEN mTempHyp ELSEIF ( aTmHyp GT 0.0  ) THEN aTmHyp ELSE  0.0 ENDIF;
uTmBot = IF (aInclStrat EQ TRUE ) THEN uTmHyp ELSE uTmEpi ENDIF;
uTmSurf = uTmEpi;
uLAT= cLAT*2*Pi/360;
uSolDecAng= IF(InclLat EQ TRUE) THEN cPhiR*COS(2*Pi*(Day-cDayR)/DaysInYear) ELSE 0.0 ENDIF;
uSunRise = IF(InclLat EQ TRUE) THEN HoursInDay/(2*Pi)*ACOS((SIN(uLAT)*SIN(uSolDecAng))/(COS(uLAT)*COS(uSolDecAng))) ELSE 0.0 ENDIF;
uSunSet=HoursInDay-uSunRise;
uSunPath= IF(InclLat EQ TRUE) THEN SIN(uLAT)*SIN( uSolDecAng )*( uSunSet-uSunRise)- COS(uLAT) * COS (uSolDecAng) * HoursInDay / (2*Pi) * ( SIN (2*Pi*uSunSet/HoursInDay ) -SIN(2*Pi*uSunRise /HoursInDay )) ELSE 0.0 ENDIF;
uTrans=IF((InclLat EQ TRUE) AND (ConstTrans EQ FALSE)) THEN (0.6-0.2*(uSunPath/(uSunSet - uSunRise)))*(1-0.4*fCloudH) *(1-0.7* fCloudM) *(1-0.4*fCloudL)ELSEIF ((InclLat EQ TRUE) AND (ConstTrans EQ TRUE)) THEN cTrans ELSE 0.0 ENDIF;
ufDay = IF (FALSE EQ InclSeason) THEN cfDayAve ELSEIF (InclLat EQ TRUE) THEN (uSunSet -uSunRise )/ HoursInDay ELSE cfDayAve - cfDayVar * COS( 2.0 *Pi*(sTime+TenDays) / DaysInYear) ENDIF;
uLDay = IF (FALSE EQ InclSeason) THEN cLDayAve ELSEIF (ReadLOut EQ TRUE) THEN 0.0 ELSEIF (InclLat EQ TRUE) THEN cSolar*uTrans*uSunPath * SecsPerDay /HoursInDay ELSE cLDayAve - cLDayVar * COS(2.0*Pi*(sTime+TenDays) / DaysInYear) ENDIF;
uLOut = IF (FALSE EQ InclSeason) THEN uLDay / SecsPerDay / ufDay ELSEIF (ReadLOut EQ TRUE) THEN mLOut / ufDay ELSE uLDay / SecsPerDay / ufDay ENDIF;
uLPARSurf = fPAR * (1.0 - fRefl) * uLOut;
aDepth2VegHyp = IF ( aInclStrat EQ TRUE ) THEN sDepthWHyp ELSE 0.0 ENDIF;
aDepth1VegHyp = IF ( aInclStrat EQ TRUE ) THEN sDepthWHyp - uVegHeightHyp ELSE 0.0 ENDIF;
aDepth1VegEpi = IF ( aInclStrat EQ TRUE ) THEN sDepthWEpi - uVegHeightEpi ELSE fDepth1Veg * uDepthW ENDIF;
aDepth2VegEpi = IF ( aInclStrat EQ TRUE ) THEN sDepthWEpi ELSE fDepth2Veg * uDepthW ENDIF;
aDayInitVeg = IF (Day LT 1.0 OR sTime LT BeginTime + 1.0) THEN 367 ELSEIF (uTmBot GE cTmInitVeg AND aDayInitVeg GT 366) THEN Day ELSE aDayInitVeg ENDIF;
aLPARBotSurf = IF (InclSurf EQ TRUE) THEN uLPARSurf * EXP(- aExtSurf) ELSE uLPARSurf ENDIF;
aLPARBotEpiOpen = aLPARBotSurf * EXP(- aExtCoefOpenEpi * sDepthWEpi);
aLPARBotHypOpen = aLPARBotEpiOpen * EXP(- aExtCoefOpenHyp * sDepthWEpi);
aLPAR1VegEpi = aLPARBotSurf * EXP(- aExtCoefOpenEpi * aDepth1VegEpi) * ( 1 - uVegShade );
aLPAR1VegHyp = aLPAR1VegEpi * EXP(- aExtCoefOpenHyp * aDepth1VegHyp);
aLPARVegLight =  IF  ( aInclStrat EQ TRUE AND  uVegHeight LE sDepthWHyp ) THEN aLPAR1VegHyp *   EXP(- aExtCoefOpenHyp * uVegHeightLightEpi) ELSE aLPAR1VegEpi *  EXP(- aExtCoefOpenEpi * uVegHeightLightEpi)  *  EXP(- aExtCoefOpenHyp * uVegHeightLightEpi) ENDIF;
uTmVegAve = ( uVegHeightHyp * uTmHyp + uVegHeightEpi * uTmEpi ) / uVegHeight;
uFunTmVeg = EXP(-0.5/(cSigTmVeg*cSigTmVeg) *((uTmVegAve-cTmOptVeg)*(uTmVegAve-cTmOptVeg) - (cTmRef-cTmOptVeg)*(cTmRef-cTmOptVeg)));
uFunTmProdVeg = IF ( UsePowerVeg LT NearZero ) THEN uFunTmVeg ELSE POW ( cQ10ProdVeg , (0.1 * (uTmVegAve - cTmRef))) ENDIF;
uhLVeg = hLRefVeg * uFunTmProdVeg;
aLPIVeg = IF ( aInclStrat EQ TRUE AND  uVegHeight GT sDepthWHyp ) THEN cPMax*(aLPAR1VegEpi- aLPARVegLight + uhLVeg*LN((1.0 +aLPARVegLight/ uhLVeg)  /(1.0 +aLPAR1VegEpi  / uhLVeg) + NearZero  ) )ELSEIF  ( aInclStrat EQ TRUE AND  uVegHeight LE sDepthWHyp ) THEN cPMax*( aLPAR1VegHyp- aLPARVegLight + uhLVeg* LN((1.0 +aLPARVegLight/ uhLVeg)  / (1.0 +aLPAR1VegHyp  / uhLVeg) ) ) ELSE cPMax * (aLPAR1VegEpi- aLPARVegLight + uhLVeg*LN((1.0 +aLPARVegLight/ uhLVeg)  /(1.0 +aLPAR1VegEpi  / uhLVeg) + NearZero  ) )ENDIF;
uDayWinVeg = IF UseLWinVeg LE NearZero THEN cDayWinVeg ELSEIF (Day LT 1.0 OR sTime LT BeginTime + 1.0) THEN 367 ELSEIF (( aLPIVeg / uVegHeightLight )LE cLAlloVeg AND uDayWinVeg GT 366 AND Day GT 183 ) THEN Day ELSE uDayWinVeg ENDIF;
bfRootVeg = IF (FALSE EQ InclSeason) THEN fRootVegSum ELSEIF (Day LT aDayInitVeg) THEN fRootVegWin ELSEIF (Day LT aDayInitVeg + cLengAllo) THEN 0.5*(fRootVegWin + fRootVegSum) + 0.5*(fRootVegWin - fRootVegSum) * COS(Pi/cLengAllo * (Day - aDayInitVeg)) ELSEIF (Day LT uDayWinVeg) THEN fRootVegSum ELSEIF (Day LT uDayWinVeg + cLengAllo) THEN 0.5*(fRootVegWin + fRootVegSum) - 0.5*(fRootVegWin - fRootVegSum) * COS(Pi/cLengAllo * (Day - uDayWinVeg)) ELSE fRootVegWin ENDIF;
bfShootVeg = 1.0 - bfRootVeg;
aDShootVeg = bfShootVeg * sDVeg;
aDEmergVeg = fEmergVeg * aDShootVeg;
aDFloatVeg = fFloatVeg * aDShootVeg;
bfSubVeg = 1.0 - fFloatVeg - fEmergVeg;
aDSubVeg = bfSubVeg * aDShootVeg;
aExtVegHyp = cExtSpVeg * aDSubVeg / sDepthWHyp * (uVegHeightHyp /uDepthW );
aExtCoefHyp = aExtCoefOpenHyp + aExtVegHyp;
aExtVegEpi = cExtSpVeg * aDSubVeg / sDepthWEpi * (uVegHeightEpi /uDepthW ) ;
aExtCoefEpi = aExtCoefOpenEpi + aExtVegEpi;
aLPARBotEpi = aLPARBotSurf * EXP(- aExtCoefEpi * sDepthWEpi);
uLPARSurfHyp = IF ( aInclStrat EQ TRUE ) THEN aLPARBotEpi ELSE 0.0 ENDIF;
aLPAR2VegEpi = aLPAR1VegEpi * EXP(- aExtCoefEpi * (aDepth2VegEpi - aDepth1VegEpi));
aLPAR2VegHyp = aLPAR1VegHyp * EXP(- aExtCoefHyp * (aDepth2VegHyp - aDepth1VegHyp));
uVWind = IF (ReadVWind EQ TRUE)THEN mVWind ELSE cVWind ENDIF;
aStrat = IF (ReadStrat EQ TRUE) THEN mStrat ELSEIF ((uTmEpi -uTmHyp) GT  cStratTm OR (uTmHyp -uTmEpi) GT  cStratTm) THEN 1.0  ELSE 0.0 ENDIF;
uQInSeason = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cQInWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cQInWin + cQInSum) + 0.5*(cQInWin - cQInSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cQInSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cQInWin + cQInSum) - 0.5*(cQInWin - cQInSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cQInWin ENDIF;
uQEvSinus = cQEvAve - cQEvVar * COS(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysInYear);
aQEv = IF (10 *uTmEpi /cHeath) LE NearZero THEN 16 * 2*ufDay * 1 / 30 * POW ( NearZero , (cAlpha) ) ELSE 16 * 2*ufDay * 1 / 30 * POW ( 10 *uTmEpi /cHeath , (cAlpha) ) ENDIF;
uQEv = IF (FALSE EQ InclSeason) THEN cQEvAve ELSEIF (ReadQEv EQ TRUE) THEN mQEv ELSEIF (calcQEv EQ TRUE ) THEN aQEv ELSE uQEvSinus ENDIF;
uQInExtra = IF ((Day GE cDayApril1 - 0.5*cLengChange) AND (Day LT cDayApril1 + 0.5*cLengChange)) THEN cQInExtraApril1 ELSEIF ( (Day GE cDayOct1 - 0.5*cLengChange) AND (Day LT cDayOct1 + 0.5*cLengChange) ) THEN cQInExtraOct1 ELSE 0.0 ENDIF;
uQIn = IF (ReadQIn EQ TRUE) THEN mQIn ELSEIF (UseSeasonLoad EQ TRUE) THEN uQInSeason + uQInExtra ELSE cQIn + uQInExtra ENDIF;
uQOutExtra = IF ((Day GE cDayApril1 - 0.5*cLengChange) AND (Day LT cDayApril1 + 0.5*cLengChange)) THEN cQOutExtraApril1 ELSEIF ( (Day GE cDayOct1 - 0.5*cLengChange) AND (Day LT cDayOct1 + 0.5*cLengChange) ) THEN cQOutExtraOct1 ELSE 0.0 ENDIF;
uQOutEpi = IF (FALSE EQ ConstDepth) THEN 0.0 ELSEIF (ReadQOut EQ TRUE) THEN MAX(mQOut, (sDepthWEpi - cDepthWMax) * cMaxWOut * mmPerm) ELSEIF (FALSE EQ aInclStrat) THEN MAX(0.0, (uQIn - uQInExtra) - uQEv - cQInf ) + uQOutExtra ELSE MAX(0.0, (uQIn - uQInExtra) - uQEv - cQInf ) + uQOutExtra ENDIF;
uQOutHyp = 0.0;
uQDilEpi = uQOutEpi;
uQDilHyp = uQOutHyp;
ukDilEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQDilEpi / mmPerm / sDepthWEpi ENDIF;
ukDilHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQDilHyp / mmPerm / sDepthWHyp ENDIF;
ukDilWatEpi = uQIn / mmPerm / sDepthWEpi;
ukDilWatHyp = 0.0;
ukOutEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQOutEpi / mmPerm / sDepthWEpi ENDIF;
ukOutHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQOutHyp / mmPerm / sDepthWHyp ENDIF;
uTauWatEpi = IF ( aInclStrat EQ FALSE AND cQInf LT 0.0 ) THEN 1.0 / ((uQIn - cQInf) / mmPerm / sDepthWEpi +NearZero) ELSE 1.0 / ((uQIn ) / mmPerm / sDepthWEpi +NearZero) ENDIF;
uTauWatHyp = IF ( aInclStrat EQ FALSE )THEN -9999 ELSEIF (cQInf LT 0.0 ) THEN 1.0 / ((- cQInf ) / mmPerm / sDepthWHyp +NearZero) ELSE 1.0 / ( cQInf / mmPerm / sDepthWHyp +NearZero) ENDIF;
uTauWat = IF ( cQInf GT 0.0 ) THEN 1.0 / (uQIn / mmPerm / uDepthW +NearZero) ELSE 1.0 / ((uQIn - cQInf ) / mmPerm / uDepthW +NearZero) ENDIF;
uTauSubstHyp = 1.0 / (ukDilHyp+NearZero);
uFiJvMortHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvMortHyp ELSE 0.0 ENDIF;
uFiJvEgesHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvEgesHyp ELSE 0.0 ENDIF;
uFiJvExcrHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvExcrHyp ELSE 0.0 ENDIF;
uFiAdMortHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdMortHyp ELSE 0.0 ENDIF;
uFiAdEgesHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdEgesHyp ELSE 0.0 ENDIF;
uFiAdExcrHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdExcrHyp ELSE 0.0 ENDIF;
uPiscMortHyp = IF (aInclStrat EQ TRUE ) THEN fPiscMortHyp ELSE 0.0 ENDIF;
uPiscEgesHyp = IF (aInclStrat EQ TRUE ) THEN fPiscEgesHyp ELSE 0.0 ENDIF;
uPiscExcrHyp = IF (aInclStrat EQ TRUE ) THEN fPiscExcrHyp ELSE 0.0 ENDIF;
vTranDepthW = IF ( ConstDepth EQ TRUE) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN (uQIn - uQEv - cQInf - uQOutHyp - uQOutEpi) / mmPerm ELSE ((uQIn - uQEv - cQInf - uQOutHyp - uQOutEpi) / mmPerm) / (1.0 + fMarsh) ENDIF;
vTranHypEpiW = IF (InclStrat EQ FALSE) THEN 0.0 ELSEIF ( uDepthW -uDepthMix LT cMinDepthHypEpi ) THEN ( uDepthW - cMinDepthHypEpi -sDepthWEpi ) * kExchW ELSEIF ( uDepthMix LT cMinDepthHypEpi ) THEN ( cMinDepthHypEpi -sDepthWEpi ) * kExchW ELSE ( uDepthMix -sDepthWEpi ) * kExchW ENDIF;
vDeltaWHyp = IF ( ConstDepth EQ TRUE OR FALSE EQ aInclStrat ) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero ) THEN ( - cQInf - uQOutHyp) / mmPerm ELSE ( - cQInf - uQOutHyp) / mmPerm / (1.0 + fMarsh ) ENDIF;
vDeltaWEpi = IF (ConstDepth EQ TRUE ) THEN 0.0 ELSEIF ( FALSE EQ InclMarsh OR fMarsh LE NearZero ) THEN (uQIn - uQEv - uQOutEpi - cQInf ) / mmPerm ELSE (uQIn - uQEv - uQOutEpi - cQInf ) / mmPerm / (1.0 + fMarsh ) ENDIF;
afVolHypEpi= IF (aInclStrat EQ TRUE AND sDepthWHyp GT NearZero) THEN  sDepthWHyp / sDepthWEpi ELSE 0.0 ENDIF;
wDAdvIMW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDIMWHyp ELSE vTranHypEpiW * oDIMWEpi ENDIF;
wPAdvPO4W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPO4WHyp ELSE vTranHypEpiW * oPO4WEpi ENDIF;
wPAdvAIMW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPAIMWHyp ELSE vTranHypEpiW * oPAIMWEpi ENDIF;
wNAdvNH4W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNH4WHyp ELSE vTranHypEpiW * oNH4WEpi ENDIF;
wNAdvNO3W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNO3WHyp ELSE vTranHypEpiW * oNO3WEpi ENDIF;
wSiAdvSiO2W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oSiO2WHyp ELSE vTranHypEpiW * oSiO2WEpi ENDIF;
wO2AdvW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oO2WHyp ELSE vTranHypEpiW * oO2WEpi ENDIF;
wDAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDDetWHyp ELSE vTranHypEpiW * oDDetWEpi ENDIF;
wPAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPDetWHyp ELSE vTranHypEpiW * oPDetWEpi ENDIF;
wNAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNDetWHyp ELSE vTranHypEpiW * oNDetWEpi ENDIF;
wSiAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oSiDetWHyp ELSE vTranHypEpiW * oSiDetWEpi ENDIF;
wDAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDDiatWHyp ELSE vTranHypEpiW * oDDiatWEpi ENDIF;
wPAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPDiatWHyp ELSE vTranHypEpiW * oPDiatWEpi ENDIF;
wNAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNDiatWHyp ELSE vTranHypEpiW * oNDiatWEpi ENDIF;
wSiAdvDiatW = vTranHypEpiW * cSiDDiat;
wDAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDGrenWHyp ELSE vTranHypEpiW * oDGrenWEpi ENDIF;
wPAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPGrenWHyp ELSE vTranHypEpiW * oPGrenWEpi ENDIF;
wNAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNGrenWHyp ELSE vTranHypEpiW * oNGrenWEpi ENDIF;
wDAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDBlueWHyp ELSE vTranHypEpiW * oDBlueWEpi ENDIF;
wPAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPBlueWHyp ELSE vTranHypEpiW * oPBlueWEpi ENDIF;
wNAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNBlueWHyp ELSE vTranHypEpiW * oNBlueWEpi ENDIF;
wDAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDZooHyp ELSE vTranHypEpiW * oDZooEpi ENDIF;
wPAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPZooHyp ELSE vTranHypEpiW * oPZooEpi ENDIF;
wNAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNZooHyp ELSE vTranHypEpiW * oNZooEpi ENDIF;
tDAdvTotWEpi = wDAdvIMW + wDAdvDetW + wDAdvDiatW + wDAdvGrenW + wDAdvBlueW + wDAdvZooW;
tDAdvTotWHyp = sDepthWHyp * (wDAdvIMW + wDAdvDetW + wDAdvDiatW + wDAdvGrenW + wDAdvBlueW + wDAdvZooW) / sDepthWHyp;
wDAdvIMWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDIMWEpi ELSE vTranDepthW *  oDIMWM ENDIF;
wPAdvPO4WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPO4WEpi ELSE vTranDepthW *  oPO4WM ENDIF;
wPAdvAIMWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPAIMWEpi ELSE vTranDepthW *  oPAIMWM ENDIF;
wNAdvNH4WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNH4WEpi ELSE vTranDepthW *  oNH4WM ENDIF;
wNAdvNO3WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNO3WEpi ELSE vTranDepthW *  oNO3WM ENDIF;
wSiAdvSiO2WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oSiO2WEpi ELSE vTranDepthW *  oSiO2WM ENDIF;
wO2AdvWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oO2WEpi ELSE vTranDepthW *  oO2WM ENDIF;
wDAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDDetWEpi ELSE vTranDepthW *  oDDetWM ENDIF;
wPAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPDetWEpi ELSE vTranDepthW *  oPDetWM ENDIF;
wNAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNDetWEpi ELSE vTranDepthW *  oNDetWM ENDIF;
wSiAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oSiDetWEpi ELSE vTranDepthW *  oSiDetWM ENDIF;
wDAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDDiatWEpi ELSE vTranDepthW *  oDDiatWM ENDIF;
wPAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPDiatWEpi ELSE vTranDepthW *  oPDiatWM ENDIF;
wNAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNDiatWEpi ELSE vTranDepthW *  oNDiatWM ENDIF;
wDAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDGrenWEpi ELSE vTranDepthW *  oDGrenWM ENDIF;
wPAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPGrenWEpi ELSE vTranDepthW *  oPGrenWM ENDIF;
wNAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNGrenWEpi ELSE vTranDepthW *  oNGrenWM ENDIF;
wDAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDBlueWEpi ELSE vTranDepthW *  oDBlueWM ENDIF;
wPAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPBlueWEpi ELSE vTranDepthW *  oPBlueWM ENDIF;
wNAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNBlueWEpi ELSE vTranDepthW *  oNBlueWM ENDIF;
wDAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDZooEpi ELSE vTranDepthW *  oDZooM ENDIF;
wPAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPZooEpi ELSE vTranDepthW *  oPZooM ENDIF;
wNAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNZooEpi ELSE vTranDepthW *  oNZooM ENDIF;
afVolMarshEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fMarsh * sDepthWM / sDepthWEpi ELSE 0.0 ENDIF;
tDAdvTotWMEpi = (wDAdvIMWM + wDAdvDetWM + wDAdvDiatWM + wDAdvGrenWM + wDAdvBlueWM + wDAdvZooWM) * afVolMarshEpi;
uExchMaxW =   IF ( aInclStrat EQ TRUE) THEN kExchMaxW /( aStrat* fMeta * uDepthW + cDepthMetaMin ) ELSE 0.0 ENDIF;
akExchWHyp= IF (aInclStrat EQ TRUE AND sDepthWHyp GT NearZero) THEN  ( uExchMaxW ) / sDepthWHyp ELSE 0.0 ENDIF;
akExchWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWHyp * afVolHypEpi ELSE 0.0 ENDIF;
wDExchIMWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDIMWHyp - oDIMWEpi) ELSE 0.0 ENDIF;
wPExchPO4WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPO4WHyp - oPO4WEpi) ELSE 0.0 ENDIF;
wPExchAIMWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPAIMWHyp - oPAIMWEpi) ELSE 0.0 ENDIF;
wNExchNH4WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNH4WHyp - oNH4WEpi) ELSE 0.0 ENDIF;
wNExchNO3WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNO3WHyp - oNO3WEpi) ELSE 0.0 ENDIF;
wSiExchSiO2WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oSiO2WHyp - oSiO2WEpi) ELSE 0.0 ENDIF;
wO2ExchWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oO2WHyp - oO2WEpi) ELSE 0.0 ENDIF;
wDExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDDetWHyp - oDDetWEpi) ELSE 0.0 ENDIF;
wPExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPDetWHyp - oPDetWEpi) ELSE 0.0 ENDIF;
wNExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNDetWHyp - oNDetWEpi) ELSE 0.0 ENDIF;
wSiExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oSiDetWHyp - oSiDetWEpi) ELSE 0.0 ENDIF;
wDExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDDiatWHyp - oDDiatWEpi) ELSE 0.0 ENDIF;
wPExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPDiatWHyp - oPDiatWEpi) ELSE 0.0 ENDIF;
wNExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNDiatWHyp - oNDiatWEpi) ELSE 0.0 ENDIF;
wSiExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN cSiDDiat * wDExchDiatWHyp ELSE 0.0 ENDIF;
wDExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDGrenWHyp - oDGrenWEpi) ELSE 0.0 ENDIF;
wPExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPGrenWHyp - oPGrenWEpi) ELSE 0.0 ENDIF;
wNExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNGrenWHyp - oNGrenWEpi) ELSE 0.0 ENDIF;
wDExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDBlueWHyp - oDBlueWEpi) ELSE 0.0 ENDIF;
wPExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPBlueWHyp - oPBlueWEpi) ELSE 0.0 ENDIF;
wNExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNBlueWHyp - oNBlueWEpi) ELSE 0.0 ENDIF;
wDExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDZooHyp - oDZooEpi) ELSE 0.0 ENDIF;
wPExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPZooHyp - oPZooEpi) ELSE 0.0 ENDIF;
wNExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNZooHyp - oNZooEpi) ELSE 0.0 ENDIF;
wDExchIMWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDIMWHyp - oDIMWEpi) ELSE 0.0 ENDIF;
wPExchPO4WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPO4WHyp - oPO4WEpi) ELSE 0.0 ENDIF;
wPExchAIMWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPAIMWHyp - oPAIMWEpi) ELSE 0.0 ENDIF;
wNExchNH4WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNH4WHyp - oNH4WEpi) ELSE 0.0 ENDIF;
wNExchNO3WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNO3WHyp - oNO3WEpi) ELSE 0.0 ENDIF;
wSiExchSiO2WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oSiO2WHyp - oSiO2WEpi) ELSE 0.0 ENDIF;
wO2ExchWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oO2WHyp - oO2WEpi) ELSE 0.0 ENDIF;
wDExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDDetWHyp - oDDetWEpi) ELSE 0.0 ENDIF;
wPExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPDetWHyp - oPDetWEpi) ELSE 0.0 ENDIF;
wNExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNDetWHyp - oNDetWEpi) ELSE 0.0 ENDIF;
wSiExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oSiDetWHyp - oSiDetWEpi) ELSE 0.0 ENDIF;
wDExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDDiatWHyp - oDDiatWEpi) ELSE 0.0 ENDIF;
wPExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPDiatWHyp - oPDiatWEpi) ELSE 0.0 ENDIF;
wNExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNDiatWHyp - oNDiatWEpi) ELSE 0.0 ENDIF;
wSiExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN cSiDDiat * wDExchDiatWEpi ELSE 0.0 ENDIF;
wDExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDGrenWHyp - oDGrenWEpi) ELSE 0.0 ENDIF;
wPExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPGrenWHyp - oPGrenWEpi) ELSE 0.0 ENDIF;
wNExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNGrenWHyp - oNGrenWEpi) ELSE 0.0 ENDIF;
wDExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDBlueWHyp - oDBlueWEpi) ELSE 0.0 ENDIF;
wPExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPBlueWHyp - oPBlueWEpi) ELSE 0.0 ENDIF;
wNExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNBlueWHyp - oNBlueWEpi) ELSE 0.0 ENDIF;
wDExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDZooHyp - oDZooEpi) ELSE 0.0 ENDIF;
wPExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPZooHyp - oPZooEpi) ELSE 0.0 ENDIF;
wNExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNZooHyp - oNZooEpi) ELSE 0.0 ENDIF;
tDExchTotWEpi = (wDExchIMWEpi+wDExchDetWEpi +wDExchDiatWEpi  +wDExchGrenWEpi +wDExchBlueWEpi +wDExchZooWEpi) * sDepthWEpi;
tDExchTotWHyp = (wDExchIMWHyp+wDExchDetWHyp +wDExchDiatWHyp  +wDExchGrenWHyp +wDExchBlueWHyp +wDExchZooWHyp) * sDepthWHyp;
akExchMHyp = 0.0;
akExchLHyp = 0.0;
oDPhytWHyp = oDDiatWHyp + oDGrenWHyp + oDBlueWHyp;
oPPhytWHyp = oPDiatWHyp + oPGrenWHyp + oPBlueWHyp;
oNPhytWHyp = oNDiatWHyp + oNGrenWHyp + oNBlueWHyp;
aDPhytS = sDDiatS + sDGrenS + sDBlueS ;
aPPhytS = sPDiatS + sPGrenS + sPBlueS ;
aNPhytS = sNDiatS + sNGrenS + sNBlueS;
oDPhytWEpi = oDDiatWEpi + oDGrenWEpi + oDBlueWEpi;
oDOMWEpi = oDDetWEpi + oDPhytWEpi;
oDOMWHyp = oDDetWHyp + oDPhytWHyp;
oTDOMW = oDOMWEpi + oDOMWHyp;
oDSestWHyp = oDOMWHyp + oDIMWHyp;
oPOMWHyp = oPPhytWHyp + oPDetWHyp;
oPSestWHyp = oPPhytWHyp + oPDetWHyp + oPAIMWHyp;
oPInorgWHyp = oPO4WHyp + oPAIMWHyp;
oPTotWHyp = oPSestWHyp + oPO4WHyp;
oNDissWEpi = oNO3WEpi + oNH4WEpi;
oNDissWHyp = oNO3WHyp + oNH4WHyp;
oNOMWHyp = oNPhytWHyp + oNDetWHyp;
oNSestWHyp = oNOMWHyp;
oNkjWHyp = oNSestWHyp + oNH4WHyp;
oNTotWHyp = oNkjWHyp + oNO3WHyp;
bPorS = (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat / ( fDTotS0 + (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat );
bPorCorS = POW(bPorS , (bPorS + 1.0));
aDTotS = sDIMS + sDHumS + sDDetS;
aRhoTotS = aDTotS / cDepthS;
aRhoSolidS = (sDIMS * cRhoIM + (sDHumS + sDDetS) * cRhoOM) / aDTotS;
afDTotS = 1.0 / (1.0 + bPorS/(1.0-bPorS) * cRhoWat / aRhoSolidS);
afDOrgS = (sDHumS + sDDetS) / aDTotS;
afDetS = sDDetS / (sDHumS + sDDetS);
afDetTotS = sDDetS / (sDIMS + sDHumS + sDDetS);
aPInorgS = sPO4S + sPAIMS;
aPTotAvailS = sPDetS + aPInorgS + aPPhytS;
aPTotS = aPTotAvailS + sPHumS;
afPInorgS = aPInorgS / aDTotS;
afPTotS = aPTotS / aDTotS;
afPO4S = sPO4S / (aPTotAvailS + NearZero);
oPO4S = sPO4S / cDepthS / bPorS;
aNDissS = sNH4S + sNO3S;
aNkjAvailS = sNDetS + aNPhytS + sNH4S;
aNkjS = aNkjAvailS + sNHumS;
aNTotAvailS = aNkjAvailS + sNO3S;
aNTotS = aNkjS + sNO3S;
afNInorgS = aNDissS / aDTotS;
afNTotS = aNTotS / aDTotS;
oNO3S = sNO3S / cDepthS / bPorS;
oNH4S = sNH4S / cDepthS / bPorS;
oNDissS = aNDissS / cDepthS / bPorS;
rPDIMWHyp = oPAIMWHyp / oDIMWHyp;
rPDIMS = sPAIMS / sDIMS;
rPDDetWHyp = oPDetWHyp / (oDDetWHyp+NearZero);
rNDDetWHyp = oNDetWHyp / (oDDetWHyp+NearZero);
rSiDDetWHyp = oSiDetWHyp / (oDDetWHyp+NearZero);
rPDHumS = sPHumS / (sDHumS+NearZero);
rNDHumS = sNHumS / (sDHumS+NearZero);
rPDDetS = sPDetS / (sDDetS+NearZero);
rNDDetS = sNDetS / (sDDetS+NearZero);
rSiDDetS = sSiDetS / (sDDetS+NearZero);
oDPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDDiatWM + oDGrenWM + oDBlueWM ELSE 0.0 ENDIF;
oPPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPDiatWM + oPGrenWM + oPBlueWM ELSE 0.0 ENDIF;
oNPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNDiatWM + oNGrenWM + oNBlueWM ELSE 0.0 ENDIF;
oSiDiatWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * oDDiatWM ELSE 0.0 ENDIF;
oDOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDDetWM + oDPhytWM ELSE 0.0 ENDIF;
oDSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDOMWM + oDIMWM ELSE 0.0 ENDIF;
oPOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPPhytWM + oPDetWM ELSE 0.0 ENDIF;
oPSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPPhytWM + oPDetWM + oPAIMWM ELSE 0.0 ENDIF;
oPInorgWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPO4WM + oPAIMWM ELSE 0.0 ENDIF;
oPTotWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPSestWM + oPO4WM ELSE 0.0 ENDIF;
oNDissWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3WM + oNH4WM ELSE 0.0 ENDIF;
oNOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNPhytWM + oNDetWM ELSE 0.0 ENDIF;
oNSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNOMWM ELSE 0.0 ENDIF;
oNkjWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNSestWM + oNH4WM ELSE 0.0 ENDIF;
oNTotWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNkjWM + oNO3WM ELSE 0.0 ENDIF;
bPorSM = (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat /(fDTotSM0 + (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat);
bPorCorSM = POW(bPorSM , (bPorSM + 1.0));
aDTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDIMSM + sDHumSM + sDDetSM ELSE 0.0 ENDIF;
aRhoTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDTotSM / cDepthSM ELSE 0.0 ENDIF;
aRhoSolidSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (sDIMSM * cRhoIM +(sDHumSM + sDDetSM) * cRhoOM) / aDTotSM ELSE 0.0 ENDIF;
afDTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 1.0 /(1.0 + bPorSM/(1.0-bPorSM) * cRhoWat / aRhoSolidSM) ELSE 0.0 ENDIF;
afDOrgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (sDHumSM + sDDetSM) / aDTotSM ELSE 0.0 ENDIF;
afDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDDetSM /(sDHumSM + sDDetSM) ELSE 0.0 ENDIF;
afDetTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDDetSM /(sDIMSM + sDHumSM + sDDetSM) ELSE 0.0 ENDIF;
aPInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPO4SM + sPAIMSM ELSE 0.0 ENDIF;
aPTotAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPDetSM + aPInorgSM ELSE 0.0 ENDIF;
aPTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPTotAvailSM + sPHumSM ELSE 0.0 ENDIF;
afPInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPInorgSM / aDTotSM ELSE 0.0 ENDIF;
afPTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPTotSM / aDTotSM ELSE 0.0 ENDIF;
afPO4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPO4SM /(aPTotAvailSM + NearZero) ELSE 0.0 ENDIF;
oPO4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPO4SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
aNDissSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNH4SM + sNO3SM ELSE 0.0 ENDIF;
aNkjAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNDetSM + sNH4SM ELSE 0.0 ENDIF;
aNkjSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjAvailSM + sNHumSM ELSE 0.0 ENDIF;
aNTotAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjAvailSM + sNO3SM ELSE 0.0 ENDIF;
aNTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjSM + sNO3SM ELSE 0.0 ENDIF;
afNInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDissSM / aDTotSM ELSE 0.0 ENDIF;
afNTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNTotSM / aDTotSM ELSE 0.0 ENDIF;
oNO3SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNO3SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
oNH4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNH4SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
oNDissSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDissSM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
rPDIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPAIMWM / oDIMWM ELSE 0.0 ENDIF;
rPDIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPAIMSM / sDIMSM ELSE 0.0 ENDIF;
rPDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rNDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rSiDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oSiDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rPDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPHumSM /(sDHumSM+NearZero) ELSE 0.0 ENDIF;
rNDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNHumSM /(sDHumSM+NearZero) ELSE 0.0 ENDIF;
rPDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPDetSM /(sDDetSM+NearZero) ELSE 0.0 ENDIF;
rNDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNDetSM /(sDDetSM+NearZero) ELSE 0.0 ENDIF;
rSiDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sSiDetSM /(sDDetSM+NearZero) ELSE 0.0 ENDIF;
aDTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oDIMWM + oDDetWM + oDPhytWM + oDZooM) * sDepthWM + sDIMSM + sDHumSM + sDDetSM + sDShootPhra + sDRootPhra) * fMarsh ELSE 0.0 ENDIF;
aPTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oPO4WM + oPDetWM + oPAIMWM + oPPhytWM + oPZooM) * sDepthWM + sPO4SM + sPHumSM + sPDetSM + sPAIMSM + sPShootPhra + sPRootPhra) * fMarsh ELSE 0.0 ENDIF;
aNTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oNH4WM + oNO3WM + oNDetWM + oNPhytWM + oNZooM) * sDepthWM + sNH4SM + sNO3SM + sNHumSM + sNDetSM + sNShootPhra + sNRootPhra) * fMarsh ELSE 0.0 ENDIF;
aSiTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oSiO2WM + oSiDetWM + oSiDiatWM) * sDepthWM + sSiDetSM) * fMarsh ELSE 0.0 ENDIF;
aO2TotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oO2WM) * sDepthWM ) * fMarsh ELSE 0.0 ENDIF;
uPLoadSeason = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cPLoadWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cPLoadWin + cPLoadSum) + 0.5*(cPLoadWin - cPLoadSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cPLoadSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cPLoadWin + cPLoadSum) - 0.5*(cPLoadWin - cPLoadSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cPLoadWin ENDIF;
uPLoad = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (ReadPLoad EQ TRUE AND ReadNutFrac EQ TRUE) THEN mPLoadPO4 + mPLoadOrg ELSEIF (ReadPLoad EQ TRUE AND FALSE EQ ReadNutFrac) THEN mPLoad ELSEIF (UsePulseLoad EQ TRUE) THEN 0.0 ELSEIF (UseSeasonLoad EQ TRUE) THEN uPLoadSeason ELSE cPLoad ENDIF;
uPLoadPO4 = IF (FALSE EQ ReadPLoad) THEN fPO4In * uPLoad ELSEIF (ReadNutFrac EQ TRUE) THEN mPLoadPO4 ELSE fPO4In * uPLoad ENDIF;
uPLoadOrg = IF (FALSE EQ ReadPLoad) THEN (1.0 - fPO4In) * uPLoad ELSEIF (ReadNutFrac EQ TRUE) THEN mPLoadOrg ELSE (1.0 - fPO4In) * uPLoad ENDIF;
uPLoadPhytTot = IF (FALSE EQ InclSeason) THEN (((fPhytInSum + fPhytInWin)/2)*uPLoadOrg) ELSEIF (ReadPLoadPhyt EQ TRUE) THEN mPLoadPhytTot ELSE ((fPhytInSum+fPhytInWin)/2.0 - (fPhytInSum-fPhytInWin)/2.0 * COS(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysInYear)) * uPLoadOrg ENDIF;
uPLoadDet = uPLoadOrg - uPLoadPhytTot;
uPLoadAIM = 0.0;
uNLoadSeason = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cNLoadWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cNLoadWin + cNLoadSum) + 0.5*(cNLoadWin - cNLoadSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cNLoadSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cNLoadWin + cNLoadSum) - 0.5*(cNLoadWin - cNLoadSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cNLoadWin ENDIF;
uNLoadPhytTot = cNPPhytIn * uPLoadPhytTot;
uNLoad = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (ReadNLoad EQ TRUE AND ReadNutFrac EQ TRUE) THEN mNLoadNH4 + mNLoadNO3 + mNLoadOrg ELSEIF (ReadNLoad EQ TRUE AND FALSE EQ ReadNutFrac) THEN mNLoad ELSEIF (UsePulseLoad EQ TRUE) THEN 0.0 ELSEIF (ReadPLoad EQ TRUE) THEN cNPLoadMeas * uPLoad ELSEIF (UseSeasonLoad EQ TRUE) THEN uNLoadSeason ELSE cNLoad ENDIF;
uNLoadDet = IF (FALSE EQ ReadNLoad) THEN MIN(cNPDetIn * uPLoadDet, uNLoad - uNLoadPhytTot) ELSEIF (ReadNutFrac EQ TRUE) THEN 0.0 ELSE MIN(cNPDetIn * uPLoadDet, uNLoad - uNLoadPhytTot) ENDIF;
uNLoadOrg = IF (FALSE EQ ReadNLoad) THEN uNLoadPhytTot + uNLoadDet ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadOrg ELSE uNLoadPhytTot + uNLoadDet ENDIF;
uNLoadDiss = IF (FALSE EQ ReadNLoad) THEN uNLoad - uNLoadOrg ELSEIF (ReadNutFrac EQ TRUE) THEN 0.0 ELSE uNLoad - uNLoadOrg ENDIF;
uNLoadNH4 = IF (FALSE EQ ReadNLoad) THEN fNH4DissIn * uNLoadDiss ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadNH4 ELSE fNH4DissIn * uNLoadDiss ENDIF;
uNLoadNO3 = IF (FALSE EQ ReadNLoad) THEN (1.0 - fNH4DissIn) * uNLoadDiss ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadNO3 ELSE (1.0 - fNH4DissIn) * uNLoadDiss ENDIF;
uNBackLoadHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSE cNBackLoad ENDIF;
uPBackLoadHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSE cPBackLoad ENDIF;
uNTotIn = uNLoad / (uQIn / mmPerm + NearZero);
uDLoadDet = IF (ReadDLoadDet EQ TRUE) THEN mDLoadDet ELSE uNLoadDet / cNDDetIn ENDIF;
uDLoadPhytTot = uNLoadPhytTot / cNDPhytIn;
uDLoadIM = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (ReadDLoadIM EQ TRUE) THEN mDLoadIM ELSE cDIMIn * uQIn / mmPerm ENDIF;
uDLoad = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadIM + uDLoadDet + uDLoadPhytTot ENDIF;
uPTotIn = uPLoad / (uQIn / mmPerm + NearZero);
uDLoadDiat = fDiatPhytIn * uDLoadPhytTot;
uPLoadDiat = fDiatPhytIn * uPLoadPhytTot;
uNLoadDiat = fDiatPhytIn * uNLoadPhytTot;
uDLoadGren = fGrenPhytIn * uDLoadPhytTot;
uPLoadGren = fGrenPhytIn * uPLoadPhytTot;
uNLoadGren = fGrenPhytIn * uNLoadPhytTot;
uDLoadBlue = fBluePhytIn * uDLoadPhytTot;
uPLoadBlue = fBluePhytIn * uPLoadPhytTot;
uNLoadBlue = fBluePhytIn * uNLoadPhytTot;
wDDilIMHyp = ukDilHyp * oDIMWHyp;
wDDilDetHyp = ukDilHyp * oDDetWHyp;
wDDilGrenHyp = ukDilHyp * oDGrenWHyp;
wDDilBlueHyp = ukDilHyp * oDBlueWHyp;
wDDilDiatHyp = ukDilHyp * oDDiatWHyp;
wDDilZooHyp = ukDilHyp * oDZooHyp;
wDDilPhytHyp = wDDilDiatHyp + wDDilGrenHyp + wDDilBlueHyp;
wPDilZooHyp = ukDilHyp * oPZooHyp;
wNDilZooHyp = ukDilHyp * oNZooHyp;
wPDilPO4Hyp = ukDilHyp * oPO4WHyp;
wPDilDetHyp = ukDilHyp*oPDetWHyp;
wPDilAIMHyp = ukDilHyp * oPAIMWHyp;
wNDilNH4Hyp = ukDilHyp * oNH4WHyp;
wNDilNO3Hyp = ukDilHyp * oNO3WHyp;
wNDilDetHyp = ukDilHyp * oNDetWHyp;
wO2InflowHyp = ukDilWatHyp * cO2In;
wO2OutflHyp = ukDilHyp * oO2WHyp;
wPDilDiatHyp = ukDilHyp * oPDiatWHyp;
wNDilDiatHyp = ukDilHyp * oNDiatWHyp;
wPDilGrenHyp = ukDilHyp * oPGrenWHyp;
wNDilGrenHyp = ukDilHyp * oNGrenWHyp;
wPDilBlueHyp = ukDilHyp * oPBlueWHyp;
wNDilBlueHyp = ukDilHyp * oNBlueWHyp;
wPDilPhytHyp = wPDilDiatHyp + wPDilGrenHyp + wPDilBlueHyp;
wNDilPhytHyp = wNDilDiatHyp + wNDilGrenHyp + wNDilBlueHyp;
wDOutflTotHyp = ukOutHyp * oDSestWHyp;
wPOutflTotHyp = ukOutHyp * oPTotWHyp;
wNOutflTotHyp = ukOutHyp * oNTotWHyp;
wDTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilDiatHyp ENDIF;
wPTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilDiatHyp ENDIF;
wNTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilDiatHyp ENDIF;
wDTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilGrenHyp ENDIF;
wPTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilGrenHyp ENDIF;
wNTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilGrenHyp ENDIF;
wDTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilBlueHyp ENDIF;
wPTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilBlueHyp ENDIF;
wNTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilBlueHyp ENDIF;
wDTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wDTranDiatHyp + wDTranGrenHyp + wDTranBlueHyp ENDIF;
wPTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wPTranDiatHyp + wPTranGrenHyp + wPTranBlueHyp ENDIF;
wNTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wNTranDiatHyp + wNTranGrenHyp + wNTranBlueHyp ENDIF;
uSiLoadSiO2 = cSiO2In * uQIn / mmPerm;
uSiLoadDet = cSiDDetIn * uDLoadDet;
uSiLoadDiat = cSiDDiat * uDLoadDiat;
uSiLoad = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadSiO2 + uSiLoadDet + uSiLoadDiat ENDIF;
wSiDilSiO2Hyp = ukDilHyp * oSiO2WHyp;
wSiDilDetHyp = ukDilHyp * oSiDetWHyp;
wSiDilDiatHyp = cSiDDiat * wDDilDiatHyp;
wSiOutflTotHyp = ukOutHyp * (oSiO2WHyp + oSiDetWHyp + cSiDDiat * oDDiatWHyp);
wSiTranSiO2Hyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wSiDilSiO2Hyp ENDIF;
wSiTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wSiDilDetHyp ENDIF;
tSiTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - (wSiDilDetHyp + wSiDilSiO2Hyp + wSiDilDiatHyp) * sDepthWHyp ENDIF;
wDTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE( - wDDilZooHyp) ENDIF;
wPTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE( - wPDilZooHyp) ENDIF;
wNTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE( - wNDilZooHyp) ENDIF;
wDTranIMWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilIMHyp ENDIF;
wDTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilDetHyp ENDIF;
wO2TranWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wO2OutflHyp ENDIF;
wPTranPO4WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilPO4Hyp ENDIF;
wPTranAIMWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilAIMHyp ENDIF;
wPTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wPDilDetHyp ENDIF;
wNTranNH4WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilNH4Hyp ENDIF;
wNTranNO3WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilNO3Hyp ENDIF;
wNTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wNDilDetHyp ENDIF;
wDDilTotHyp = wDDilIMHyp + wDDilDetHyp + wDDilPhytHyp;
wPDilTotHyp = wPDilDetHyp + wPDilPO4Hyp + wPDilAIMHyp + wPDilPhytHyp;
wNDilTotHyp = wNDilDetHyp + wNDilNO3Hyp + wNDilNH4Hyp + wNDilPhytHyp;
wSiDilTotHyp = wSiDilDetHyp + wSiDilSiO2Hyp + wSiDilDiatHyp;
tDTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE - wDDilTotHyp * sDepthWHyp ENDIF;
tPTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoad - wPDilTotHyp * sDepthWHyp ENDIF;
tNTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoad - wNDilTotHyp * sDepthWHyp ENDIF;
wDExchIMMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDIMWHyp - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPO4WHyp - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPAIMWHyp - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNH4WHyp - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNO3WHyp - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oSiO2WHyp - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oO2WHyp - oO2WM) ELSE 0.0 ENDIF;
wDExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDDetWHyp - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPDetWHyp - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNDetWHyp - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oSiDetWHyp - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDDiatWHyp - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPDiatWHyp - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNDiatWHyp - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatMHyp ELSE 0.0 ENDIF;
wDExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDGrenWHyp - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPGrenWHyp - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNGrenWHyp - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDBlueWHyp - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPBlueWHyp - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNBlueWHyp - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDZooHyp - oDZooM) ELSE 0.0 ENDIF;
wPExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPZooHyp - oPZooM) ELSE 0.0 ENDIF;
wNExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNZooHyp - oNZooM) ELSE 0.0 ENDIF;
wDExchIMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDIMWHyp - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPO4WHyp - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPAIMWHyp - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNH4WHyp - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNO3WHyp - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oSiO2WHyp - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oO2WHyp - oO2WM) ELSE 0.0 ENDIF;
wDExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDDetWHyp - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPDetWHyp - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNDetWHyp - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oSiDetWHyp - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDDiatWHyp - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPDiatWHyp - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNDiatWHyp - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatHyp ELSE 0.0 ENDIF;
wDExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDGrenWHyp - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPGrenWHyp - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNGrenWHyp - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDBlueWHyp - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPBlueWHyp - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNBlueWHyp - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDZooHyp - oDZooM) ELSE 0.0 ENDIF;
wPExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPZooHyp - oPZooM) ELSE 0.0 ENDIF;
wNExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNZooHyp - oNZooM) ELSE 0.0 ENDIF;
tPInfPO4WHyp = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oPO4WHyp ELSE cQInf / mmPerm * oPO4S ENDIF;
tNInfNH4WHyp = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oNH4WHyp ELSE cQInf / mmPerm * oNH4S ENDIF;
tNInfNO3WHyp = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oNO3WHyp ELSE cQInf / mmPerm * oNO3S ENDIF;
tPInfPO4S = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oPO4S ELSE cQInf / mmPerm * cPO4Ground ENDIF;
tNInfNH4S = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oNH4S ELSE cQInf / mmPerm * cNH4Ground ENDIF;
tNInfNO3S = IF (cQInf GE 0.0) THEN cQInf / mmPerm * oNO3S ELSE cQInf / mmPerm * cNO3Ground ENDIF;
tNH4LoadS = fNH4LoadS * cNLoadS;
tNO3LoadS = cNLoadS - tNH4LoadS;
uDErosIM = (1.0 - fDOrgSoil) * cDErosTot;
uDErosIMS = fSedErosIM * uDErosIM;
uDErosIMW = uDErosIM - uDErosIMS;
uDErosOM = fDOrgSoil * cDErosTot;
uPErosOM = cPDSoilOM * uDErosOM;
uNErosOM = cNDSoilOM * uDErosOM;
uO2SatEpi = 14.652 - 0.41022 * uTmEpi + 0.007991 * uTmEpi*uTmEpi - 0.000077774 * uTmEpi*uTmEpi*uTmEpi;
uO2SatHyp = 14.652 - 0.41022 * uTmHyp + 0.007991 * uTmHyp*uTmHyp- 0.000077774 *uTmHyp*uTmHyp*uTmHyp;
kAer = cAerRoot * POW(uVWind , (0.5)) + cAerLin * uVWind + cAerSquare * uVWind*uVWind;
uFunTmAerEpi = POW(cThetaAer , (uTmEpi-cTmRef));
uFunTmAerHyp = POW(cThetaAer , (uTmHyp-cTmRef));
aFunLemnAer = 1.0;
aFunBlueSurfAer = MAX(0.0, 1.0 - (kBlueSurfAer * sDBlueSurf));
tO2BubHyp = IF (uO2SatHyp LT oO2WHyp ) THEN kBub * uFunTmAerHyp * (uO2SatHyp - oO2WHyp) ELSE 0 ENDIF;
uFunTmFish = IF (InclWeb EQ TRUE) THEN EXP( -0.5/(cSigTmFish*cSigTmFish) * (( MAX (uTmEpi, uTmHyp * aInclStrat) - cTmOptFish)*( MAX (uTmEpi, uTmHyp * aInclStrat) - cTmOptFish) - (cTmRef - cTmOptFish)*(cTmRef - cTmOptFish))) ELSE 0.0 ENDIF;
tDTurbFish = IF (InclWeb EQ TRUE) THEN (kTurbFish * uFunTmFish * sDFiAd) ELSE 0.0 ENDIF;
aFunVegResus = MAX(1.0 - kVegResus * sDVeg, 0.0);
aFunDimSusp = IF (uTmEpi GE 0.1) THEN cSuspRef * ((cSuspMin + cSuspMax / (1.0 + EXP(cSuspSlope * (uDepthW - hDepthSusp)))) * POW(((cFetch +NearZero)/ cFetchRef) , (0.5))) ELSE 0.0 ENDIF;
tDResusTauDead = MIN(aFunDimSusp, POW(aFunDimSusp +NearZero , (0.5))) * POW(fLutum / fLutumRef , (0.5)) * bPorS;
tDResusBareDead = tDResusTauDead + tDTurbFish;
tDResusDead = tDResusBareDead * aFunVegResus;
tDResusIM = fLutum * sDIMS / (fLutum * sDIMS + sDDetS) * tDResusDead;
tDResusDet = sDDetS / (fLutum * sDIMS + sDDetS) * tDResusDead;
akResusPhytRef = kResusPhytMax * (1.0 - EXP(cResusPhytExp * tDResusDead));
tDResusPhytTot = akResusPhytRef * aDPhytS;
tPResusDet = rPDDetS * tDResusDet;
tPResusPO4 = sPO4S / sDDetS * tDResusDet;
tPResusAIM = sPAIMS / sDIMS * tDResusIM;
tNResusNO3 = sNO3S / sDDetS * tDResusDet;
tNResusNH4 = sNH4S / sDDetS * tDResusDet;
tNResusDet = rNDDetS * tDResusDet;
tSiResusDet = rSiDDetS * tDResusDet;
aFunTauSetOMHyp = MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0);
aFunTauSetIMHyp = aFunTauSetOMHyp;
uFunTmSetEpi = POW(cThetaSet , (uTmEpi-cTmRef));
uFunTmSetHyp = POW(cThetaSet , (uTmHyp-cTmRef));
uCorVSetIMHyp = aFunTauSetIMHyp * POW((fLutumRef/fLutum) , (0.5)) * uFunTmSetHyp * cVSetIM;
tDSetIMHyp = uCorVSetIMHyp * oDIMWHyp;
tPSetAIMHyp = oPAIMWHyp / oDIMWHyp * tDSetIMHyp;
uCorVSetDetHyp = cVSetDet * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetDetHyp = uCorVSetDetHyp * oDDetWHyp;
tPSetDetHyp = uCorVSetDetHyp * oPDetWHyp;
tNSetDetHyp = uCorVSetDetHyp * oNDetWHyp;
tSiSetDetHyp = uCorVSetDetHyp * oSiDetWHyp;
kPMinDetW = kDMinDetW;
kNMinDetW = kDMinDetW;
kSiMinDetW = kDMinDetW;
uFunTmMinWEpi = POW(cThetaMinW , (uTmEpi-cTmRef));
uFunTmMinWHyp = POW(cThetaMinW , (uTmEpi-cTmRef));
wDMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kDMinDetW * uFunTmMinWHyp * oDDetWHyp ENDIF;
wPMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kPMinDetW * uFunTmMinWHyp * oPDetWHyp ENDIF;
wNMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNMinDetW * uFunTmMinWHyp * oNDetWHyp ENDIF;
wSiMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kSiMinDetW * uFunTmMinWHyp * oSiDetWHyp ENDIF;
aCorO2BODHyp = oO2WHyp / (hO2BOD + oO2WHyp);
wO2MinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE molO2molC * cCPerDW * aCorO2BODHyp * wDMinDetWHyp ENDIF;
wDDenitWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE oNO3WHyp*oNO3WHyp / (hNO3Denit*hNO3Denit + oNO3WHyp*oNO3WHyp) * (1.0 - aCorO2BODHyp) * wDMinDetWHyp ENDIF;
wNDenitWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE NO3PerC * molNmolC * cCPerDW * wDDenitWHyp ENDIF;
uFunTmNitrHyp = POW(cThetaNitr , (uTmHyp-cTmRef));
uFunTmNitrEpi = POW(cThetaNitr , (uTmEpi-cTmRef));
uFunTmNitrS = POW(cThetaNitr , (uTmBot-cTmRef));
aCorO2NitrWHyp = oO2WHyp*oO2WHyp / (hO2Nitr*hO2Nitr + oO2WHyp*oO2WHyp);
wNNitrWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNitrW * uFunTmNitrHyp * aCorO2NitrWHyp * oNH4WHyp ENDIF;
wO2NitrWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE O2PerNH4 * molO2molN * wNNitrWHyp ENDIF;
kPMinDetS = kDMinDetS;
kNMinDetS = kDMinDetS;
kSiMinDetS = kDMinDetS;
uFunTmMinS = POW(cThetaMinS , (uTmBot-cTmRef));
tDMinDetS = kDMinDetS * uFunTmMinS * sDDetS;
tPMinDetS = kPMinDetS * uFunTmMinS * sPDetS;
tNMinDetS = kNMinDetS * uFunTmMinS * sNDetS;
tSiMinDetS = kSiMinDetS * uFunTmMinS * sSiDetS;
uFunTmDif = POW(cThetaDif , (uTmEpi-cTmRef));
akO2DifCor = kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorS;
tSOD = (molO2molC * cCPerDW * (1.0 - fRefrDetS) * tDMinDetS + O2PerNH4 * molO2molN * kNitrS * uFunTmNitrS * sNH4S) / cDepthS;
aDepthDif = fDepthDifS * cDepthS;
tPDifPO4Hyp = IF ( aInclStrat EQ TRUE ) THEN kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorS * (oPO4S - oPO4WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tNDifNO3Hyp = IF ( aInclStrat EQ TRUE ) THEN kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorS * (oNO3S - oNO3WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tNDifNH4Hyp = IF ( aInclStrat EQ TRUE ) THEN kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorS * (oNH4S - oNH4WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tO2DifHyp = IF ( aInclStrat EQ TRUE ) THEN kO2Dif / aDepthDif * uFunTmDif * cTurbDifO2 * bPorCorS * oO2WHyp ELSE 0.0 ENDIF ;
tPDifGroundPO4 = 0.0;
tNDifGroundNO3 = 0.0;
tNDifGroundNH4 = 0.0;
aPAdsMaxWHyp = cRelPAdsD + aCorO2BODHyp * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsWHyp = (1.0 - fRedMax * (1.0-aCorO2BODHyp)) * cKPAdsOx;
aPIsoAdsWHyp = aPAdsMaxWHyp * aKPAdsWHyp * oPO4WHyp / (1.0 + aKPAdsWHyp * oPO4WHyp);
aPEqIMWHyp = aPIsoAdsWHyp * oDIMWHyp;
wPSorpIMWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kPSorp * (aPEqIMWHyp - oPAIMWHyp) ENDIF;
tPChemPO4 = MAX( 0.0, kPChemPO4 * (oPO4S - coPO4Max) );
tSiAbioTotT = - fRefrDetS * tSiMinDetS;
uQEvPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEv ELSE 0.0 ENDIF;
tPEvPO4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oPO4WM ELSE 0.0 ENDIF;
tNEvNH4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oNH4WM ELSE 0.0 ENDIF;
tNEvNO3WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oNO3WM ELSE 0.0 ENDIF;
tPInfPO4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oPO4WM ELSE cQInf / mmPerm * oPO4SM ENDIF;
tNInfNH4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNH4WM ELSE cQInf / mmPerm * oNH4SM ENDIF;
tNInfNO3WM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNO3WM ELSE cQInf / mmPerm * oNO3SM ENDIF;
tPInfPO4SM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oPO4SM ELSE cQInf / mmPerm * cPO4Ground ENDIF;
tNInfNH4SM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNH4SM ELSE cQInf / mmPerm * oNH4SM ENDIF;
tNInfNO3SM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNO3SM ELSE cQInf / mmPerm * oNO3SM ENDIF;
tO2AerM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kAer * uFunTmAerEpi *(uO2SatEpi - oO2WM) ELSE 0.0 ENDIF;
tDSetIMM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetIM * uFunTmSetEpi * oDIMWM ELSE 0.0 ENDIF;
tPSetAIMM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetIM * uFunTmSetEpi * oPAIMWM ELSE 0.0 ENDIF;
tDSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDet * uFunTmSetEpi * oDDetWM ELSE 0.0 ENDIF;
tPSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDet * uFunTmSetEpi* oPDetWM ELSE 0.0 ENDIF;
tNSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDet * uFunTmSetEpi* oNDetWM ELSE 0.0 ENDIF;
tSiSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDet * uFunTmSetEpi * oSiDetWM ELSE 0.0 ENDIF;
tDSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDiat * uFunTmSetEpi * oDDiatWM ELSE 0.0 ENDIF;
tPSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDiat * uFunTmSetEpi* oPDiatWM ELSE 0.0 ENDIF;
tNSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDiat * uFunTmSetEpi* oNDiatWM ELSE 0.0 ENDIF;
tSiSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetDiat * uFunTmSetEpi * oSiDiatWM ELSE 0.0 ENDIF;
tDSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetGren * uFunTmSetEpi * oDGrenWM ELSE 0.0 ENDIF;
tPSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetGren * uFunTmSetEpi* oPGrenWM ELSE 0.0 ENDIF;
tNSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetGren * uFunTmSetEpi* oNGrenWM ELSE 0.0 ENDIF;
tDSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetBlue * uFunTmSetEpi * oDBlueWM ELSE 0.0 ENDIF;
tPSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetBlue * uFunTmSetEpi* oPBlueWM ELSE 0.0 ENDIF;
tNSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cVSetBlue * uFunTmSetEpi* oNBlueWM ELSE 0.0 ENDIF;
tDSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetDiatM + tDSetGrenM + tDSetBlueM ELSE 0.0 ENDIF;
tPSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tPSetDiatM + tPSetGrenM + tPSetBlueM ELSE 0.0 ENDIF;
tNSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNSetDiatM + tNSetGrenM + tNSetBlueM ELSE 0.0 ENDIF;
tDSetTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetIMM + tDSetDetM + tDSetPhytM ELSE 0.0 ENDIF;
wDMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinDetW * uFunTmMinWEpi * oDDetWM ELSE 0.0 ENDIF;
wPMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPMinDetW * uFunTmMinWEpi * oPDetWM ELSE 0.0 ENDIF;
wNMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNMinDetW * uFunTmMinWEpi * oNDetWM ELSE 0.0 ENDIF;
wSiMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kSiMinDetW * uFunTmMinWEpi * oSiDetWM ELSE 0.0 ENDIF;
aCorO2BODM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oO2WM /(hO2BOD + oO2WM) ELSE 0.0 ENDIF;
wO2MinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * aCorO2BODM * wDMinDetWM ELSE 0.0 ENDIF;
wDDenitWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3WM*oNO3WM /(hNO3Denit*hNO3Denit + oNO3WM*oNO3WM) *(1.0 - aCorO2BODM) * wDMinDetWM ELSE 0.0 ENDIF;
wNDenitWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN NO3PerC * molNmolC * cCPerDW * wDDenitWM ELSE 0.0 ENDIF;
aCorO2NitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oO2WM * oO2WM /(hO2Nitr * hO2Nitr + oO2WM * oO2WM) ELSE 0.0 ENDIF;
wNNitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNitrW * uFunTmNitrEpi * aCorO2NitrWM * oNH4WM ELSE 0.0 ENDIF;
wO2NitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN O2PerNH4 * molO2molN * wNNitrWM ELSE 0.0 ENDIF;
tDMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinDetS * uFunTmMinS * sDDetSM ELSE 0.0 ENDIF;
tPMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPMinDetS * uFunTmMinS * sPDetSM ELSE 0.0 ENDIF;
tNMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNMinDetS * uFunTmMinS * sNDetSM ELSE 0.0 ENDIF;
tSiMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kSiMinDetS * uFunTmMinS * sSiDetSM ELSE 0.0 ENDIF;
akO2DifCorM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorSM ELSE 0.0 ENDIF;
tSODM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(molO2molC * cCPerDW *(1.0 - fRefrDetS) * tDMinDetSM + O2PerNH4 * molO2molN * kNitrS * uFunTmNitrEpi * sNH4SM) / cDepthSM ELSE 0.0 ENDIF;
aDepthOxySedM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (2.0 * oO2WM * akO2DifCorM / tSODM) LE NearZero THEN POW( NearZero , (0.5)) ELSE POW((2.0 * oO2WM * akO2DifCorM / tSODM) , (0.5)) ENDIF ;
afOxySedM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDepthOxySedM / cDepthSM ELSE 0.0 ENDIF;
tDMinOxyDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afOxySedM *(1.0 - fRefrDetS) * tDMinDetSM ELSE 0.0 ENDIF;
tO2MinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * tDMinOxyDetSM ELSE 0.0 ENDIF;
tDDenitSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3SM*oNO3SM /(hNO3Denit*hNO3Denit + oNO3SM*oNO3SM) *(1.0 - afOxySedM) *(1.0 - fRefrDetS) * tDMinDetSM ELSE 0.0 ENDIF;
tNDenitSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN NO3PerC * molNmolC * cCPerDW * tDDenitSM ELSE 0.0 ENDIF;
tNNitrSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afOxySedM * kNitrS * uFunTmNitrEpi * sNH4SM ELSE 0.0 ENDIF;
tO2NitrSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN O2PerNH4 * molO2molN * tNNitrSM ELSE 0.0 ENDIF;
tDMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * sDHumSM ELSE 0.0 ENDIF;
tPMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * sPHumSM ELSE 0.0 ENDIF;
tNMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * sNHumSM ELSE 0.0 ENDIF;
aDepthDifM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fDepthDifS * cDepthSM ELSE 0.0 ENDIF;
tPDifPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oPO4SM - oPO4WM) / aDepthDifM ELSE 0.0 ENDIF;
tNDifNO3M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNO3SM - oNO3WM) / aDepthDifM ELSE 0.0 ENDIF;
tNDifNH4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNH4SM - oNH4WM) / aDepthDifM ELSE 0.0 ENDIF;
tO2DifM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kO2Dif / aDepthDifM * uFunTmDif * cTurbDifO2 * bPorCorSM * oO2WM ELSE 0.0 ENDIF;
tPDifGroundPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
tNDifGroundNO3M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
tNDifGroundNH4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
aPAdsMaxWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cRelPAdsD + aCorO2BODM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM ELSE 0.0 ENDIF;
aKPAdsWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(1.0 - fRedMax *(1.0-aCorO2BODM)) * cKPAdsOx ELSE 0.0 ENDIF;
aPIsoAdsWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPAdsMaxWM * aKPAdsWM * oPO4WM /(1.0 + aKPAdsWM * oPO4WM) ELSE 0.0 ENDIF;
aPEqIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPIsoAdsWM * oDIMWM ELSE 0.0 ENDIF;
wPSorpIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPSorp *(aPEqIMWM - oPAIMWM) ELSE 0.0 ENDIF;
aPAdsMaxSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cRelPAdsD + afOxySedM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM ELSE 0.0 ENDIF;
aKPAdsSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(1.0 - fRedMax *(1.0-afOxySedM)) * cKPAdsOx ELSE 0.0 ENDIF;
aPIsoAdsSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPAdsMaxSM * aKPAdsSM * oPO4SM /(1.0 + aKPAdsSM * oPO4SM) ELSE 0.0 ENDIF;
aPEqIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPIsoAdsSM * sDIMSM ELSE 0.0 ENDIF;
tPSorpIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPSorp *(aPEqIMSM - sPAIMSM) ELSE 0.0 ENDIF;
tPChemPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,kPChemPO4 *(oPO4SM - coPO4Max)) ELSE 0.0 ENDIF;
aDRootVeg = bfRootVeg * sDVeg;
bfSubVegEpi = bfSubVeg * ( uVegHeightEpi / uDepthW );
bfSubVegHyp = bfSubVeg * ( uVegHeightHyp / uDepthW );
afCovSurfVeg = MIN(1.0, MAX(aDFloatVeg / (cDLayerVeg + NearZero), aDEmergVeg / (fEmergVeg * cDCarrVeg + NearZero) ) ) ;
afCovEmergVeg = MIN(1.0, PerCent * cCovSpVeg * aDEmergVeg);
aCovVeg = MIN(100.0, cCovSpVeg * aDShootVeg);
aDVeg = sDVeg;
aPVeg = sPVeg;
aNVeg = sNVeg;
aLPARBotHyp = uLPARSurfHyp * EXP(- aExtCoefHyp * sDepthWHyp);
rPDVeg = sPVeg / (sDVeg+NearZero);
rNDVeg = sNVeg / (sDVeg+NearZero);
tDMigrVeg = kMigrVeg * (cDVegIn - sDVeg);
tPMigrVeg = kMigrVeg * (cPDVeg0* cDVegIn - sPVeg);
tNMigrVeg = kMigrVeg * (cNDVeg0* cDVegIn - sNVeg);
uFunTmRespVeg = IF ( UsePowerVeg LT NearZero ) THEN uFunTmVeg ELSE POW(cQ10RespVeg , (0.1 * (uTmVegAve - cTmRef))) ENDIF;
afPUptVegS = IF (FALSE EQ UseEmpUpt) THEN 0.0 ELSEIF (bfRootVeg LE NearZero) THEN 0.0 ELSEIF (fFloatVeg + bfSubVeg LE NearZero) THEN 1.0 ELSEIF (aInclStrat EQ TRUE AND ((oPO4S+NearZero) / (oPO4WHyp+NearZero)) GT NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oPO4S+NearZero) / (oPO4WHyp+NearZero)) , fSedUptVegExp)) ELSEIF (aInclStrat EQ TRUE AND ((oPO4S+NearZero) / (oPO4WHyp+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW( NearZero , fSedUptVegExp)) ELSEIF (((oPO4S+NearZero) / (oPO4WEpi+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW (NearZero , fSedUptVegExp)) ELSE fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oPO4S+NearZero) / (oPO4WEpi+NearZero)) , fSedUptVegExp)) ENDIF;
afNUptVegS = IF (FALSE EQ UseEmpUpt) THEN 0.0 ELSEIF (bfRootVeg LE NearZero) THEN 0.0 ELSEIF (fFloatVeg + bfSubVeg LE NearZero) THEN 1.0 ELSEIF ( aInclStrat EQ TRUE AND ((oNDissS+NearZero) / (oNDissWHyp+NearZero)) GT NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oNDissS+NearZero) / (oNDissWHyp+NearZero)) , fSedUptVegExp)) ELSEIF ( aInclStrat EQ TRUE AND ((oNDissS+NearZero) / (oNDissWHyp+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(NearZero , fSedUptVegExp)) ELSEIF ( ((oNDissS+NearZero) / (oNDissWEpi+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(NearZero , fSedUptVegExp)) ELSE fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oNDissS+NearZero) / (oNDissWEpi+NearZero)) , fSedUptVegExp)) ENDIF;
aVPUptMaxCrVeg = IF (FALSE EQ UseEmpUpt) THEN MAX( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) ELSE MAX( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) ENDIF;
aVPUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oPO4WHyp * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WHyp) ELSE 0.0 ENDIF;
aVPUptVegS = IF (FALSE EQ UseEmpUpt) THEN oPO4S * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) ELSE 0.0 ENDIF;
aVPUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oPO4WEpi * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WEpi) ELSE 0.0 ENDIF;
tPUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegWEpi * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afPUptVegS) * aVPUptMaxCrVeg * oPO4WEpi / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WEpi) * uDVegEpi ENDIF;
tPUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegWHyp * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afPUptVegS) * aVPUptMaxCrVeg * oPO4WHyp / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WHyp) * uDVegHyp ENDIF;
tPUptVegS = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegS * aDRootVeg ELSE afPUptVegS * aVPUptMaxCrVeg * oPO4S / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) * sDVeg ENDIF;
tPUptVegEpi = IF (aInclStrat EQ TRUE ) THEN tPUptVegWEpi + tPUptVegS * uDVegEpi / sDVeg ELSEIF (aInclStrat EQ FALSE AND FALSE EQ UseEmpUpt) THEN tPUptVegWEpi + tPUptVegS ELSE tPUptVegWEpi + tPUptVegS ENDIF;
tPUptVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (FALSE EQ UseEmpUpt) THEN tPUptVegWHyp + tPUptVegS * uDVegHyp / sDVeg ELSE tPUptVegWHyp + tPUptVegS * uDVegHyp / sDVeg ENDIF ;
aVNUptMaxCrVeg = IF (FALSE EQ UseEmpUpt) THEN MAX( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) ELSE MAX( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) ENDIF;
ahNUptVeg = IF (FALSE EQ UseEmpUpt) THEN aVNUptMaxCrVeg / cAffNUptVeg ELSE aVNUptMaxCrVeg / cAffNUptVeg ENDIF;
aVNUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oNDissWEpi * aVNUptMaxCrVeg / (ahNUptVeg + oNDissWEpi) ELSE 0.0 ENDIF;
aVNUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oNDissWHyp * aVNUptMaxCrVeg / (ahNUptVeg + oNDissWHyp) ELSE 0.0 ENDIF;
afNH4UptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oNH4WEpi * oNO3WEpi / ((ahNUptVeg + oNH4WEpi) * (ahNUptVeg + oNO3WEpi + NearZero)) + oNH4WEpi * ahNUptVeg / ((oNH4WEpi + oNO3WEpi + NearZero) * (ahNUptVeg + oNO3WEpi + NearZero)) ELSE oNH4WEpi * oNO3WEpi / ((ahNUptVeg + oNH4WEpi) * (ahNUptVeg + oNO3WEpi + NearZero)) + oNH4WEpi * ahNUptVeg / ((oNH4WEpi + oNO3WEpi + NearZero) * (ahNUptVeg + oNO3WEpi + NearZero)) ENDIF;
afNH4UptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oNH4WHyp * oNO3WHyp / ((ahNUptVeg + oNH4WHyp) * (ahNUptVeg + oNO3WHyp + NearZero)) + oNH4WHyp * ahNUptVeg / ((oNH4WHyp + oNO3WHyp + NearZero) * (ahNUptVeg + oNO3WHyp + NearZero)) ELSE oNH4WHyp * oNO3WHyp / ((ahNUptVeg + oNH4WHyp) * (ahNUptVeg + oNO3WHyp + NearZero)) + oNH4WHyp * ahNUptVeg / ((oNH4WHyp + oNO3WHyp + NearZero) * (ahNUptVeg + oNO3WHyp + NearZero)) ENDIF;
tNUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegWEpi * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afNUptVegS) * aVNUptMaxCrVeg * oNDissWEpi / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissWEpi) * uDVegEpi ENDIF;
tNUptVegWHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSEIF (FALSE EQ UseEmpUpt) THEN aVNUptVegWHyp * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afNUptVegS) * aVNUptMaxCrVeg * oNDissWHyp / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissWHyp) * uDVegHyp ENDIF;
tNUptNH4VegWEpi = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegWEpi * tNUptVegWEpi ELSE afNH4UptVegWEpi * tNUptVegWEpi ENDIF;
tNUptNO3VegWEpi = IF (FALSE EQ UseEmpUpt) THEN tNUptVegWEpi - tNUptNH4VegWEpi ELSE tNUptVegWEpi - tNUptNH4VegWEpi ENDIF;
tNUptNH4VegWHyp = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegWHyp * tNUptVegWHyp ELSE afNH4UptVegWHyp * tNUptVegWHyp ENDIF;
tNUptNO3VegWHyp = IF (FALSE EQ UseEmpUpt) THEN tNUptVegWHyp - tNUptNH4VegWHyp ELSE tNUptVegWHyp - tNUptNH4VegWHyp ENDIF;
aVNUptVegS = IF (FALSE EQ UseEmpUpt) THEN oNDissS * aVNUptMaxCrVeg / (ahNUptVeg + oNDissS) ELSE 0.0 ENDIF;
tNUptVegS = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegS * aDRootVeg ELSE afNUptVegS * aVNUptMaxCrVeg * oNDissS / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissS) * sDVeg ENDIF;
afNH4UptVegS = IF (FALSE EQ UseEmpUpt) THEN oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) ELSE oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) ENDIF;
tNUptNH4VegS = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegS * tNUptVegS ELSE afNH4UptVegS * tNUptVegS ENDIF;
tNUptVegSEpi = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegS * aDRootVeg ELSE afNUptVegS * aVNUptMaxCrVeg * oNDissS / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissS) * sDVeg ENDIF;
tNUptNO3VegS = IF (FALSE EQ UseEmpUpt) THEN tNUptVegS - tNUptNH4VegS ELSE tNUptVegS - tNUptNH4VegS ENDIF;
tNUptVeg =tNUptVegWEpi + tNUptVegWHyp + tNUptVegS;
aLLimShootVegEpi = fEmergVeg + fFloatVeg * (1.0 - afCovEmergVeg) + bfSubVegEpi * (1.0 - afCovSurfVeg) * 1.0 / (aExtCoefEpi * sDepthWEpi) * LN( (1.0 + aLPAR1VegEpi / uhLVeg) / (1.0 + aLPAR2VegEpi / uhLVeg));
aLLimShootVegHyp = fEmergVeg + fFloatVeg * (1.0 - afCovEmergVeg) + bfSubVegHyp * (1.0 - afCovSurfVeg) * 1.0 / (aExtCoefHyp * sDepthWHyp) * LN( (1.0 + aLPAR1VegHyp / uhLVeg) / (1.0 + aLPAR2VegHyp / uhLVeg));
aMuTmLVegHyp = ufDay * bfShootVeg * aLLimShootVegHyp * uFunTmProdVeg * cMuMaxVeg;
aPLimVeg = MAX(0.0, (1.0 - cPDVegMin / rPDVeg) * cPDVegMax / (cPDVegMax - cPDVegMin) );
aNLimVeg = MAX(0.0, (1.0 - cNDVegMin / rNDVeg) * cNDVegMax / (cNDVegMax - cNDVegMin) );
aNutLimVeg = MIN( aPLimVeg, aNLimVeg);
aMuVegHyp = aMuTmLVegHyp * aNutLimVeg;
bkMortVeg = IF (FALSE EQ InclSeason) THEN kMortVegSum ELSEIF (Day LT uDayWinVeg) THEN kMortVegSum ELSEIF (Day LT uDayWinVeg + cLengMort) THEN - LN(fWinVeg) / cLengMort ELSE kMortVegSum ENDIF;
akDIncrVegHyp = aMuTmLVegHyp - kDRespVeg * uFunTmRespVeg - bkMortVeg;
tDEnvVegHyp = MAX(0.0, akDIncrVegHyp / (cDCarrVeg+NearZero) * sDVeg*sDVeg);
tDEnvProdVegHyp = aMuVegHyp / cMuMaxVeg * tDEnvVegHyp;
tDProdVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE MAX(0.0, aMuVegHyp * uDVegHyp - tDEnvProdVegHyp) ENDIF;
tDProdSubVegHyp = bfSubVegHyp * tDProdVegHyp;
tDRespVeg = kDRespVeg * uFunTmRespVeg * sDVeg;
tDEnvMortVegHyp = tDEnvVegHyp - tDEnvProdVegHyp;
tDMortVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE bkMortVeg * uDVegHyp + tDEnvMortVegHyp ENDIF;
tDMortVegWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tDMortVegHyp;
tDGrazVegBird = IF ( (sTime GE cYearStartBirds * DaysPerYear) AND (Day GE cDayStartBirds) AND (Day LE cDayEndBirds) ) THEN cPrefVegBird * sDVeg / (hDVegBird + sDVeg) * cBirdsPerha / m2Perha * cDGrazPerBird ELSE 0.0 ENDIF;
bkManVeg = IF ((Day GE cDayManVeg1 AND Day LT cDayManVeg1 + cLengMan) OR (Day GE cDayManVeg2 AND Day LT cDayManVeg2 + cLengMan)) THEN -LN(1.0 - fManVeg) / cLengMan ELSE 0.0 ENDIF;
tDManVeg = bkManVeg * sDVeg;
tPManVeg = rPDVeg * tDManVeg;
tNManVeg = rNDVeg * tDManVeg;
tO2ProdVegHyp = molO2molC * cCPerDW * tDProdVegHyp;
tO2RespVegWHyp = molO2molC * cCPerDW * bfSubVegHyp * tDRespVeg * aCorO2BODHyp;
aDepthOxySed = IF(aInclStrat EQ TRUE AND (2.0 * oO2WHyp * akO2DifCor / tSOD) GT NearZero ) THEN POW((2.0 * oO2WHyp * akO2DifCor / tSOD) , (0.5)) ELSEIF ( aInclStrat EQ TRUE AND (2.0 * oO2WHyp * akO2DifCor / tSOD) LE NearZero ) THEN POW ( NearZero , (0.5)) ELSEIF ( aInclStrat EQ TRUE AND ( 2.0 * oO2WEpi * akO2DifCor / tSOD ) LE NearZero ) THEN POW ( NearZero , (0.5)) ELSE POW ( ( 2.0 * oO2WEpi * akO2DifCor / tSOD ) , (0.5)) ENDIF;
afOxySed = aDepthOxySed / cDepthS;
tO2RespVegS = molO2molC * cCPerDW * bfRootVeg * tDRespVeg * afOxySed;
tO2ProdVegSHyp = MIN (tO2RespVegS, tO2ProdVegHyp);
tO2ProdVegWHyp = MIN( tO2ProdVegHyp - tO2ProdVegSHyp, bfSubVeg * tO2ProdVegHyp);
tO2UptNO3VegWHyp = O2PerNO3 * molO2molN * bfSubVeg * tNUptNO3VegWHyp;
tO2UptNO3VegS = O2PerNO3 * molO2molN * tNUptNO3VegS;
tPExcrVeg = (rPDVeg *2.0)/ (cPDVegMax + rPDVeg) * rPDVeg * tDRespVeg;
tPExcrVegS = bfRootVeg * tPExcrVeg;
tPExcrVegW = tPExcrVeg - tPExcrVegS;
tPMortVegHyp = rPDVeg * tDMortVegHyp;
tPMortVegPO4Hyp = fDissMortVeg * tPMortVegHyp;
tPMortVegPO4SHyp = bfRootVeg * tPMortVegPO4Hyp;
tPMortVegPO4WHyp = tPMortVegPO4Hyp - tPMortVegPO4SHyp;
tPMortVegDetHyp = tPMortVegHyp - tPMortVegPO4Hyp;
tPMortVegDetWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tPMortVegDetHyp;
tPMortVegDetSHyp = tPMortVegDetHyp - tPMortVegDetWHyp;
tPGrazVegBird = rPDVeg * tDGrazVegBird;
tNExcrVeg = (2.0 * rNDVeg) / (cNDVegMax + rNDVeg) * rNDVeg * tDRespVeg;
tNExcrVegS = bfRootVeg * tNExcrVeg;
tNExcrVegW = tNExcrVeg - tNExcrVegS;
tNMortVegHyp = rNDVeg * tDMortVegHyp;
tNMortVegNH4Hyp = fDissMortVeg * tNMortVegHyp;
tNMortVegNH4SHyp = IF (aInclStrat EQ TRUE ) THEN bfRootVeg * tNMortVegNH4Hyp ELSE 0.0 ENDIF;
tNMortVegNH4WHyp = tNMortVegNH4Hyp - tNMortVegNH4SHyp;
tNMortVegDetHyp = tNMortVegHyp - tNMortVegNH4Hyp;
tNMortVegDetWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tNMortVegDetHyp;
tNMortVegDetSHyp = tNMortVegDetHyp - tNMortVegDetWHyp;
tNGrazVegBird = rNDVeg * tDGrazVegBird;
tDAssVegBird = fDAssBird * tDGrazVegBird;
tDEgesBird = tDGrazVegBird - tDAssVegBird;
tPAssVegBird = fDAssBird * tPGrazVegBird;
tPEgesBird = tPGrazVegBird - tPAssVegBird;
tPEgesBirdPO4 = fDissEgesBird * tPEgesBird;
tPEgesBirdDet = tPEgesBird - tPEgesBirdPO4;
tNAssVegBird = fDAssBird * tNGrazVegBird;
tNEgesBird = tNGrazVegBird - tNAssVegBird;
tNEgesBirdNH4 = fDissEgesBird * tNEgesBird;
tNEgesBirdDet = tNEgesBird - tNEgesBirdNH4;
wDBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tDMortVegWHyp) / sDepthWHyp ELSE 0.0 ENDIF;
aMuTmLVegEpi = ufDay * bfShootVeg * aLLimShootVegEpi * uFunTmProdVeg * cMuMaxVeg;
akDIncrVegEpi = aMuTmLVegEpi - kDRespVeg * uFunTmRespVeg - bkMortVeg;
tDEnvVegEpi = MAX(0.0, akDIncrVegEpi / (cDCarrVeg+NearZero) * sDVeg*sDVeg);
aMuVegEpi = aMuTmLVegEpi * aNutLimVeg;
tDEnvProdVegEpi = aMuVegEpi / cMuMaxVeg * tDEnvVegEpi;
tDProdVegEpi = MAX(0.0, aMuVegEpi * uDVegEpi - tDEnvProdVegEpi);
tDEnvMortVegEpi = tDEnvVegEpi - tDEnvProdVegEpi;
tDMortVegEpi = bkMortVeg * uDVegEpi + tDEnvMortVegEpi;
tNMortVegEpi = rNDVeg * tDMortVegEpi;
tNMortVegNH4Epi = fDissMortVeg * tNMortVegEpi;
tNMortVegNH4SEpi = bfRootVeg * tNMortVegNH4Epi;
wPBedPO4WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN (- tPUptVegWHyp + tPExcrVegW * uVegHeightHyp / uVegHeight + tPMortVegPO4WHyp ) /sDepthWHyp ELSE 0.0 ENDIF;
wPBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tPMortVegDetWHyp ) / sDepthWHyp ELSE 0.0 ENDIF;
wNBedNH4WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN (- tNUptNH4VegWHyp + tNExcrVegW * (uVegHeightHyp /uVegHeight ) + tNMortVegNH4WHyp ) / sDepthWHyp ELSE 0.0 ENDIF;
wNBedNO3WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN - tNUptNO3VegWHyp / sDepthWHyp ELSE 0.0 ENDIF;
wNBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tNMortVegDetWHyp ) / sDepthWHyp ELSE 0.0 ENDIF;
tDMortVegSHyp = tDMortVegHyp - tDMortVegWHyp;
tDBedDetSHyp = IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN tDMortVegSHyp ELSE 0.0 ENDIF;
tO2BedWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN tO2ProdVegWHyp - tO2RespVegWHyp + tO2UptNO3VegWHyp ELSE 0.0 ENDIF;
UseLoss = IF (InclWeb EQ TRUE) THEN 0.0 ELSE 1.0 ENDIF;
uFunTmLossHyp = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmHyp-cTmOptLoss)*(uTmHyp-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
uFunTmLossEpi = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmEpi-cTmOptLoss)*(uTmEpi-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
rPDBlueWHyp = oPBlueWHyp /(oDBlueWHyp+NearZero);
rNDBlueWHyp = oNBlueWHyp /(oDBlueWHyp+NearZero);
rPDBlueS = sPBlueS /(sDBlueS+NearZero);
rNDBlueS = sNBlueS /(sDBlueS+NearZero);
uFunTmBlueHyp = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmHyp-cTmOptBlue)*(uTmHyp-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueHyp = uFunTmBlueHyp;
uFunTmRespBlueHyp = uFunTmBlueHyp;
uFunTmBlueEpi = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmEpi-cTmOptBlue)*(uTmEpi-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueEpi = uFunTmBlueEpi;
uFunTmRespBlueEpi = uFunTmBlueEpi;
uFunTmBlueS = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmBot-cTmOptBlue)*(uTmBot-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmRespBlueS = uFunTmBlueS;
uFunTmBlueSurf = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmSurf-cTmOptBlue)*(uTmSurf-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueSurf = uFunTmBlueSurf;
uFunTmRespBlueSurf = uFunTmBlueSurf;
aLPARAveSurf = MAX(0.0,(uLPARSurf - aLPARBotSurf)/aExtSurf);
aLPARAveEpi = (aLPARBotSurf - aLPARBotEpi)/ (aExtCoefOpenEpi * sDepthWEpi);
aLPARAveHyp = (aLPARBotEpiOpen -aLPARBotHyp)/ (aExtCoefOpenHyp * sDepthWEpi);
aAuxNfixLSurf = cAlphNfix * aLPARAveSurf ;
aAuxNfixLEpi = cAlphNfix * aLPARAveEpi;
aAuxNfixLHyp = cAlphNfix * aLPARAveHyp;
rNfixBlueSurf = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLSurf) + cNfixDarkBlue;
rNfixBlueEpi = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLEpi) + cNfixDarkBlue;
rNfixBlueHyp = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLHyp) + cNfixDarkBlue;
aVPUptMaxCrBlueHyp = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueHyp *(cPDBlueMax - rPDBlueWHyp) /(cPDBlueMax - cPDBlueMin));
aVPUptBlueHyp = oPO4WHyp * aVPUptMaxCrBlueHyp /(aVPUptMaxCrBlueHyp / cAffPUptBlue + oPO4WHyp);
wPUptBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptBlueHyp * oDBlueWHyp ENDIF;
aVNUptMaxCrBlueHyp = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueHyp * (cNDBlueMax - rNDBlueWHyp) /(cNDBlueMax - cNDBlueMin));
ahNUptBlueHyp = aVNUptMaxCrBlueHyp / cAffNUptBlue;
aVNUptBlueHyp = oNDissWHyp * aVNUptMaxCrBlueHyp /(ahNUptBlueHyp + oNDissWHyp);
wNUptBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptBlueHyp * oDBlueWHyp ENDIF;
tNUptBlueHyp = wNUptBlueHyp * sDepthWHyp;
uMuMaxTmBlueHyp = cMuMaxBlue * uFunTmProdBlueHyp;
uMuMaxTmBlueEpi = cMuMaxBlue * uFunTmProdBlueEpi;
aPLimBlueHyp = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueWHyp) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueHyp = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueWHyp) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueHyp = oSiO2WHyp /(hSiAssBlue + oSiO2WHyp);
aLLimBlueHyp = UseSteeleBlue *(EXP(1.0) /(aExtCoefHyp * sDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefBlue * uFunTmProdBlueHyp)) - EXP(- uLPARSurfHyp /(cLOptRefBlue * uFunTmProdBlueHyp)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtCoefHyp * sDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefBlue * uFunTmProdBlueHyp)) / (1.0 + aLPARBotHyp /(hLRefBlue * uFunTmProdBlueHyp))));
aMuTmLBlueHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimBlueHyp * uMuMaxTmBlueHyp;
aNutLimBlueHyp = MIN(aPLimBlueHyp,(MIN(aNLimBlueHyp,aSiLimBlueHyp)));
aMuBlueHyp = aNutLimBlueHyp * aMuTmLBlueHyp;
wDAssBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuBlueHyp*oDBlueWHyp ENDIF;
rChDBlueHyp = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueHyp;
oChlaBlueHyp = mgPerg * rChDBlueHyp * oDBlueWHyp;
aChlaBlueHyp = mgPerg * rChDBlueHyp * sDBlueWHyp;
aExtChBlueHyp = cExtSpBlue / rChDBlueHyp;
aNfixBlueHyp  = rNfixBlueHyp *aChlaBlueHyp /ugPerg;
tNUptBlueAirHyp = IF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueHyp ENDIF;
tNUptBlueWHyp = IF (InclNfix EQ FALSE) THEN tNUptBlueHyp ELSE tNUptBlueHyp - tNUptBlueAirHyp ENDIF;
wNUptBlueWHyp = tNUptBlueWHyp / sDepthWHyp;
afNH4UptBlueHyp = oNH4WHyp * oNO3WHyp /((ahNUptBlueHyp + oNH4WHyp) *(ahNUptBlueHyp + oNO3WHyp)) + oNH4WHyp * ahNUptBlueHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptBlueHyp + oNO3WHyp));
wNUptNH4BlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptBlueHyp * wNUptBlueWHyp ENDIF;
wNUptNO3BlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptBlueWHyp - wNUptNH4BlueHyp ENDIF;
ukDRespTmBlueHyp = kDRespBlue * uFunTmRespBlueHyp;
ukDRespTmBlueEpi = kDRespBlue * uFunTmRespBlueEpi;
ukDRespTmBlueS = kDRespBlue * uFunTmRespBlueS;
ukDRespTmBlueSurf = kDRespBlue * uFunTmRespBlueSurf;
wDRespBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmBlueHyp * oDBlueWHyp ENDIF;
ukLossTmBlueHyp = UseLoss * kLossBlue * uFunTmLossHyp;
ukLossTmBlueEpi = UseLoss * kLossBlue * uFunTmLossEpi;
wDLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmBlueHyp * oDBlueWHyp ENDIF;
wDMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oDBlueWHyp ENDIF;
uCorVSetBlueHyp = cVSetBlue * aFunTauSetOMHyp * uFunTmSetHyp;
aLLimBlueEpi = UseSteeleBlue *(EXP(1.0) /(aExtCoefEpi * sDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefBlue * uFunTmProdBlueEpi)) - EXP(- aLPARBotSurf /(cLOptRefBlue * uFunTmProdBlueEpi)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtCoefEpi * sDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefBlue * uFunTmProdBlueEpi)) / (1.0 + aLPARBotEpi /(hLRefBlue * uFunTmProdBlueEpi))));
rChDBlueEpi = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueEpi;
oChlaBlueEpi = mgPerg * rChDBlueEpi * oDBlueWEpi;
aChlaBlueEpi = mgPerg * rChDBlueEpi * sDBlueWEpi;
aLLimBlueSurf = MAX(0.0,UseSteeleBlue *(EXP(1.0) /(aExtSurf) *(EXP(- aLPARBotSurf/(cLOptRefBlue *  uFunTmProdBlueSurf)) - EXP(- uLPARSurf /(cLOptRefBlue *  uFunTmProdBlueSurf)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtSurf) * LN((1.0 + uLPARSurf / (hLRefBlue * uFunTmProdBlueSurf)) / (1.0 + aLPARBotSurf /(hLRefBlue * uFunTmProdBlueSurf)))));
aRepLLimBlue = (aLLimBlueSurf* sDBlueSurf + aLLimBlueEpi* sDBlueWEpi) / (sDBlueSurf + sDBlueWEpi);
rChDBlueSurf = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueSurf;
aChlaBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE mgPerg * rChDBlueSurf * sDBlueSurf ENDIF;
oChlaBlueW = IF ( aInclStrat EQ TRUE ) THEN (oChlaBlueEpi * sDepthWEpi + oChlaBlueHyp * sDepthWHyp) / uDepthW ELSE (oChlaBlueEpi * sDepthWEpi) / uDepthW ENDIF;
aChlaLimFloBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW ((aChlaBlueSurf / cDepthSurf) , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW ((aChlaBlueSurf / cDepthSurf) , (-cStepPow)))));
aChlaLimFloBlueEpi = IF (InclSurf EQ FALSE  OR sDBlueWEpi LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW (oChlaBlueEpi , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW (oChlaBlueEpi , (-cStepPow)))));
aChlaLimFloBlueHyp = IF (aInclStrat EQ FALSE OR sDBlueWHyp LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (oChlaBlueHyp , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW (oChlaBlueHyp , (-cStepPow)))));
aVWLimFloBlue = IF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (uVWind , cStepPow)) / ((POW (cVWindThrBlue , cStepPow)) + (POW (uVWind , cStepPow))));
aTmLimFloBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW (uTmSurf , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmSurf , (-cStepPow)))));
aTmLimFloBlueEpi = IF (InclSurf EQ FALSE) THEN 0.0 ELSE (1.0 - (POW (uTmEpi , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmEpi , (-cStepPow)))));
aTmLimFloBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (uTmHyp , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmHyp , (-cStepPow)))));
aTrigFloBlueSurf =  aVWLimFloBlue * aTmLimFloBlueSurf * aChlaLimFloBlueSurf;
aTrigFloBlueEpi =  aVWLimFloBlue * aTmLimFloBlueEpi * aChlaLimFloBlueEpi;
aTrigFloBlueHyp =   aTmLimFloBlueHyp * aChlaLimFloBlueHyp;
uVFloTest = IF (InclSurf EQ FALSE) THEN 0.0 ELSEIF (Day LT 150) THEN 0.0 ELSEIF (Day LT 210) THEN cVFloBlueW ELSE 0.0 ENDIF;
uVFloBlueSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (TestSurf EQ TRUE) THEN uVFloTest ELSE aTrigFloBlueSurf * cVFloMaxBlueW ENDIF;
uVFloBlueEpi = IF (InclSurf EQ FALSE) THEN 0.0 ELSEIF (TestSurf EQ TRUE) THEN uVFloTest ELSE aTrigFloBlueEpi * cVFloMaxBlueW ENDIF;
uVFloBlueHyp =  IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSEIF (TestSurf EQ TRUE) THEN uVFloTest ELSE aTrigFloBlueHyp * cVFloMaxBlueW ENDIF;
uVBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN  - uCorVSetBlueHyp ELSE  uVFloBlueHyp - uCorVSetBlueHyp  ENDIF;
tDSetBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (uVBlueHyp LT 0.0) THEN - uVBlueHyp * oDBlueWHyp ELSE 0.0 ENDIF;
tDFloBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (uVBlueHyp GE 0.0) THEN uVBlueHyp * oDBlueWHyp ELSE 0.0 ENDIF;
tPFloBlueHyp =  tDFloBlueHyp  * rPDBlueWHyp;
tNFloBlueHyp =  tDFloBlueHyp  * rNDBlueWHyp;
tDResusBlue = sDBlueS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespBlueS = ukDRespTmBlueS * sDBlueS;
tDMortBlueS = kMortBlueS * sDBlueS;
ukDDecBlueHyp = ukDRespTmBlueHyp + ukLossTmBlueHyp + kMortBlueW +(uCorVSetBlueHyp * uFunTmSetHyp) / sDepthWHyp;
wPExcrBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (rPDBlueWHyp * 2.0 )/(cPDBlueMax + rPDBlueWHyp) * rPDBlueWHyp * wDRespBlueWHyp ENDIF;
wPLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDBlueWHyp * wDLossBlueHyp ENDIF;
wPMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oPBlueWHyp ENDIF;
tPSetBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDBlueWHyp * tDSetBlueHyp ENDIF;
tPResusBlue = rPDBlueS * tDResusBlue;
tPExcrBlueS = (rPDBlueS *2.0)/(cPDBlueMax + rPDBlueS) * rPDBlueS * tDRespBlueS;
tPMortBlueS = kMortBlueS * sPBlueS;
wNExcrBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (rNDBlueWHyp *2.0)/(cNDBlueMax + rNDBlueWHyp) * rNDBlueWHyp * wDRespBlueWHyp ENDIF;
wNLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDBlueWHyp * wDLossBlueHyp ENDIF;
wNMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oNBlueWHyp ENDIF;
tNSetBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDBlueWHyp * tDSetBlueHyp ENDIF;
tNResusBlue = rNDBlueS * tDResusBlue;
tNExcrBlueS = (2.0 * rNDBlueS) /(cNDBlueMax + rNDBlueS) * rNDBlueS * tDRespBlueS;
tNMortBlueS = kMortBlueS * sNBlueS;
aFunTauSetOMEpi = MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0);
aFunTauSetIMEpi = aFunTauSetOMEpi;
uCorVSetBlueEpi = cVSetBlue * aFunTauSetOMEpi * uFunTmSetEpi;
uVBlueEpi = IF (InclSurf EQ TRUE) THEN uVFloBlueEpi - uCorVSetBlueEpi ELSE - uCorVSetBlueEpi ENDIF;
tDSetBlueEpi = IF (uVBlueEpi LT 0.0) THEN - uVBlueEpi * oDBlueWEpi ELSE 0.0 ENDIF;
tDFloBlueEpi = IF (uVBlueEpi GE 0.0) THEN uVBlueEpi * oDBlueWEpi ELSE 0.0 ENDIF;
rNDBlueWEpi = oNBlueWEpi /(oDBlueWEpi+NearZero);
tNSetBlueEpi = rNDBlueWEpi * tDSetBlueEpi;
tNFloBlueEpi =  tDFloBlueEpi  * rNDBlueWEpi;
rPDBlueWEpi = oPBlueWEpi /(oDBlueWEpi+NearZero);
tPSetBlueEpi = rPDBlueWEpi * tDSetBlueEpi;
tPFloBlueEpi =  tDFloBlueEpi  * rPDBlueWEpi;
aFunTauSetOMSurf =MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0);
uFunTmSetSurf = POW(cThetaSet , (uTmSurf-cTmRef));
uCorVSetBlueSurf = cVSetBlue * aFunTauSetOMSurf * uFunTmSetSurf;
uVBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN - uCorVSetBlueSurf ELSE uVFloBlueSurf - uCorVSetBlueSurf ENDIF;
tDSetBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (uVBlueSurf LT 0.0) THEN sDBlueSurf  / cDepthSurf * (- uVBlueSurf) ELSE 0.0 ENDIF;
rNDBlueSurf = sNBlueSurf / (sDBlueSurf + NearZero);
tNSetBlueSurf = rNDBlueSurf * tDSetBlueSurf;
rPDBlueSurf = sPBlueSurf / (sDBlueSurf + NearZero);
tPSetBlueSurf = rPDBlueSurf * tDSetBlueSurf;
wDPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssBlueHyp - wDRespBlueWHyp - wDLossBlueHyp - wDMortBlueWHyp + (tDResusBlue + tDSetBlueEpi - tDSetBlueHyp - tDFloBlueHyp) / sDepthWHyp ENDIF;
wPPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptBlueHyp - wPExcrBlueWHyp - wPLossBlueHyp - wPMortBlueWHyp+ (tPResusBlue + tPSetBlueEpi - tPSetBlueHyp - tPFloBlueHyp) / sDepthWHyp ENDIF;
wNPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptBlueHyp - wNExcrBlueWHyp - wNLossBlueHyp - wNMortBlueWHyp+ (tNResusBlue + tNSetBlueEpi - tNSetBlueHyp - tNFloBlueHyp) / sDepthWHyp ENDIF;
rPDGrenWHyp = oPGrenWHyp /(oDGrenWHyp+NearZero);
rNDGrenWHyp = oNGrenWHyp /(oDGrenWHyp+NearZero);
rPDGrenS = sPGrenS /(sDGrenS+NearZero);
rNDGrenS = sNGrenS /(sDGrenS+NearZero);
uFunTmGrenHyp = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmHyp-cTmOptGren)*(uTmHyp-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmGrenEpi = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmEpi-cTmOptGren)*(uTmEpi-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmGrenS = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmBot-cTmOptGren)*(uTmBot-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmProdGrenHyp = uFunTmGrenHyp;
uFunTmRespGrenHyp = uFunTmGrenHyp;
uFunTmProdGrenEpi = uFunTmGrenEpi;
uFunTmRespGrenEpi = uFunTmGrenEpi;
uFunTmRespGrenS = uFunTmGrenS;
aVPUptMaxCrGrenHyp = MAX(0.0,cVPUptMaxGren * uFunTmProdGrenHyp *(cPDGrenMax - rPDGrenWHyp) /(cPDGrenMax - cPDGrenMin));
aVPUptGrenHyp = oPO4WHyp * aVPUptMaxCrGrenHyp /(aVPUptMaxCrGrenHyp / cAffPUptGren + oPO4WHyp);
wPUptGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptGrenHyp * oDGrenWHyp ENDIF;
aVNUptMaxCrGrenHyp = MAX(0.0,cVNUptMaxGren * uFunTmProdGrenHyp * (cNDGrenMax - rNDGrenWHyp) /(cNDGrenMax - cNDGrenMin));
ahNUptGrenHyp = aVNUptMaxCrGrenHyp / cAffNUptGren;
aVNUptGrenHyp = oNDissWHyp * aVNUptMaxCrGrenHyp /(ahNUptGrenHyp + oNDissWHyp);
wNUptGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptGrenHyp * oDGrenWHyp ENDIF;
afNH4UptGrenHyp = oNH4WHyp * oNO3WHyp /((ahNUptGrenHyp + oNH4WHyp) *(ahNUptGrenHyp + oNO3WHyp)) + oNH4WHyp * ahNUptGrenHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptGrenHyp + oNO3WHyp));
wNUptNH4GrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptGrenHyp * wNUptGrenHyp ENDIF;
wNUptNO3GrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptGrenHyp - wNUptNH4GrenHyp ENDIF;
uMuMaxTmGrenHyp = cMuMaxGren * uFunTmProdGrenHyp;
uMuMaxTmGrenEpi = cMuMaxGren * uFunTmProdGrenEpi;
aPLimGrenHyp = MAX(0.0,(1.0 - cPDGrenMin / rPDGrenWHyp) * cPDGrenMax /(cPDGrenMax - cPDGrenMin));
aNLimGrenHyp = MAX(0.0,(1.0 - cNDGrenMin / rNDGrenWHyp) * cNDGrenMax /(cNDGrenMax - cNDGrenMin));
aSiLimGrenHyp = oSiO2WHyp /(hSiAssGren + oSiO2WHyp);
aLLimGrenHyp = UseSteeleGren *(EXP(1.0) /(aExtCoefHyp * sDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefGren * uFunTmProdGrenHyp)) - EXP(- uLPARSurfHyp /(cLOptRefGren * uFunTmProdGrenHyp)))) +(1.0 - UseSteeleGren) *(1.0 /(aExtCoefHyp * sDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefGren * uFunTmProdGrenHyp)) / (1.0 + aLPARBotHyp /(hLRefGren * uFunTmProdGrenHyp))));
aMuTmLGrenHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimGrenHyp * uMuMaxTmGrenHyp;
aNutLimGrenHyp = MIN(aPLimGrenHyp,(MIN(aNLimGrenHyp,aSiLimGrenHyp)));
aMuGrenHyp = aNutLimGrenHyp * aMuTmLGrenHyp;
wDAssGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuGrenHyp*oDGrenWHyp ENDIF;
rChDGrenHyp = cChDGrenMax -(cChDGrenMax - cChDGrenMin) * aLLimGrenHyp;
oChlaGrenHyp = mgPerg * rChDGrenHyp * oDGrenWHyp;
aExtChGrenHyp = cExtSpGren / rChDGrenHyp;
ukDRespTmGrenHyp = kDRespGren * uFunTmRespGrenHyp;
ukDRespTmGrenEpi = kDRespGren * uFunTmRespGrenEpi;
ukDRespTmGrenS = kDRespGren * uFunTmRespGrenS;
wDRespGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmGrenHyp * oDGrenWHyp ENDIF;
ukLossTmGrenHyp = UseLoss * kLossGren * uFunTmLossHyp;
ukLossTmGrenEpi = UseLoss * kLossGren * uFunTmLossEpi;
wDLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmGrenHyp * oDGrenWHyp ENDIF;
wDMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oDGrenWHyp ENDIF;
uCorVSetGrenHyp = cVSetGren * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE uCorVSetGrenHyp * oDGrenWHyp ENDIF;
tDResusGren = sDGrenS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespGrenS = ukDRespTmGrenS * sDGrenS;
tDMortGrenS = kMortGrenS * sDGrenS;
ukDDecGrenHyp = ukDRespTmGrenHyp + ukLossTmGrenHyp + kMortGrenW +(uCorVSetGrenHyp * uFunTmSetHyp) / sDepthWHyp;
wPExcrGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 *rPDGrenWHyp) /(cPDGrenMax + rPDGrenWHyp) * rPDGrenWHyp * wDRespGrenWHyp ENDIF;
wPLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDGrenWHyp * wDLossGrenHyp ENDIF;
wPMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oPGrenWHyp ENDIF;
tPSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDGrenWHyp * tDSetGrenHyp ENDIF;
tPResusGren = rPDGrenS * tDResusGren;
tPExcrGrenS = (2.0 * rPDGrenS) /(cPDGrenMax + rPDGrenS) * rPDGrenS * tDRespGrenS;
tPMortGrenS = kMortGrenS * sPGrenS;
wNExcrGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rNDGrenWHyp) /(cNDGrenMax + rNDGrenWHyp) * rNDGrenWHyp * wDRespGrenWHyp ENDIF;
wNLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDGrenWHyp * wDLossGrenHyp ENDIF;
wNMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oNGrenWHyp ENDIF;
tNSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDGrenWHyp * tDSetGrenHyp ENDIF;
tNResusGren = rNDGrenS * tDResusGren;
tNExcrGrenS = (2.0 * rNDGrenS) /(cNDGrenMax + rNDGrenS) * rNDGrenS * tDRespGrenS;
tNMortGrenS = kMortGrenS * sNGrenS;
uCorVSetGrenEpi = cVSetGren * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetGrenEpi = uCorVSetGrenEpi * oDGrenWEpi;
rNDGrenWEpi = oNGrenWEpi /(oDGrenWEpi+NearZero);
tNSetGrenEpi = rNDGrenWEpi * tDSetGrenEpi;
rPDGrenWEpi = oPGrenWEpi /(oDGrenWEpi+NearZero);
tPSetGrenEpi = rPDGrenWEpi * tDSetGrenEpi;
wDPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssGrenHyp - wDRespGrenWHyp - wDLossGrenHyp - wDMortGrenWHyp -(tDSetGrenHyp -tDSetGrenEpi - tDResusGren) / sDepthWHyp ENDIF;
wPPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptGrenHyp - wPExcrGrenWHyp - wPLossGrenHyp - wPMortGrenWHyp -(tPSetGrenHyp -tPSetGrenEpi - tPResusGren) / sDepthWHyp ENDIF;
wNPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptGrenHyp - wNExcrGrenWHyp - wNLossGrenHyp - wNMortGrenWHyp -(tNSetGrenHyp -tNSetGrenEpi - tNResusGren) / sDepthWHyp ENDIF;
rPDDiatWHyp = oPDiatWHyp /(oDDiatWHyp+NearZero);
rNDDiatWHyp = oNDiatWHyp /(oDDiatWHyp+NearZero);
rPDDiatS = sPDiatS /(sDDiatS+NearZero);
uFunTmDiatHyp = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmHyp-cTmOptDiat)*(uTmHyp-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
rNDDiatS = sNDiatS /(sDDiatS+NearZero);
uFunTmDiatEpi = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmEpi-cTmOptDiat)*(uTmEpi-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
uFunTmDiatS = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmBot-cTmOptDiat)*(uTmBot-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
uFunTmProdDiatHyp = uFunTmDiatHyp;
uFunTmRespDiatHyp = uFunTmDiatHyp;
uFunTmProdDiatEpi = uFunTmDiatEpi;
uFunTmRespDiatEpi = uFunTmDiatEpi;
uFunTmRespDiatS = uFunTmDiatS;
aVPUptMaxCrDiatHyp = MAX(0.0,cVPUptMaxDiat * uFunTmProdDiatHyp *(cPDDiatMax - rPDDiatWHyp) /(cPDDiatMax - cPDDiatMin));
aVPUptDiatHyp = oPO4WHyp * aVPUptMaxCrDiatHyp /(aVPUptMaxCrDiatHyp / cAffPUptDiat + oPO4WHyp);
wPUptDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptDiatHyp * oDDiatWHyp ENDIF;
aVNUptMaxCrDiatHyp = MAX(0.0,cVNUptMaxDiat * uFunTmProdDiatHyp * (cNDDiatMax - rNDDiatWHyp) /(cNDDiatMax - cNDDiatMin));
ahNUptDiatHyp = aVNUptMaxCrDiatHyp / cAffNUptDiat;
aVNUptDiatHyp = oNDissWHyp * aVNUptMaxCrDiatHyp /(ahNUptDiatHyp + oNDissWHyp);
wNUptDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptDiatHyp * oDDiatWHyp ENDIF;
afNH4UptDiatHyp = oNH4WHyp * oNO3WHyp /((ahNUptDiatHyp + oNH4WHyp) *(ahNUptDiatHyp + oNO3WHyp)) + oNH4WHyp * ahNUptDiatHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptDiatHyp + oNO3WHyp));
wNUptNH4DiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptDiatHyp * wNUptDiatHyp ENDIF;
wNUptNO3DiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptDiatHyp - wNUptNH4DiatHyp ENDIF;
uMuMaxTmDiatHyp = cMuMaxDiat * uFunTmProdDiatHyp;
uMuMaxTmDiatEpi = cMuMaxDiat * uFunTmProdDiatEpi;
aPLimDiatHyp = MAX(0.0,(1.0 - cPDDiatMin / rPDDiatWHyp) * cPDDiatMax /(cPDDiatMax - cPDDiatMin));
aNLimDiatHyp = MAX(0.0,(1.0 - cNDDiatMin / rNDDiatWHyp) * cNDDiatMax /(cNDDiatMax - cNDDiatMin));
aSiLimDiatHyp = oSiO2WHyp /(hSiAssDiat + oSiO2WHyp);
aLLimDiatHyp = UseSteeleDiat *(EXP(1.0) /(aExtCoefHyp * sDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefDiat * uFunTmProdDiatHyp)) - EXP(- uLPARSurfHyp /(cLOptRefDiat * uFunTmProdDiatHyp)))) +(1.0 - UseSteeleDiat) *(1.0 /(aExtCoefHyp * sDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefDiat * uFunTmProdDiatHyp)) / (1.0 + aLPARBotHyp /(hLRefDiat * uFunTmProdDiatHyp))));
aMuTmLDiatHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimDiatHyp * uMuMaxTmDiatHyp;
aNutLimDiatHyp = MIN(aPLimDiatHyp,(MIN(aNLimDiatHyp,aSiLimDiatHyp)));
aMuDiatHyp = aNutLimDiatHyp * aMuTmLDiatHyp;
wDAssDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuDiatHyp*oDDiatWHyp ENDIF;
rChDDiatHyp = cChDDiatMax -(cChDDiatMax - cChDDiatMin) * aLLimDiatHyp;
oChlaDiatHyp = mgPerg * rChDDiatHyp * oDDiatWHyp;
aExtChDiatHyp = cExtSpDiat / rChDDiatHyp;
ukDRespTmDiatHyp = kDRespDiat * uFunTmRespDiatHyp;
ukDRespTmDiatEpi = kDRespDiat * uFunTmRespDiatEpi;
ukDRespTmDiatS = kDRespDiat * uFunTmRespDiatS;
wDRespDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmDiatHyp * oDDiatWHyp ENDIF;
ukLossTmDiatHyp = UseLoss * kLossDiat * uFunTmLossHyp;
ukLossTmDiatEpi = UseLoss * kLossDiat * uFunTmLossEpi;
wDLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmDiatHyp * oDDiatWHyp ENDIF;
wDMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oDDiatWHyp ENDIF;
uCorVSetDiatHyp = cVSetDiat * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE uCorVSetDiatHyp * oDDiatWHyp ENDIF;
tDResusDiat = sDDiatS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespDiatS = ukDRespTmDiatS * sDDiatS;
tDMortDiatS = kMortDiatS * sDDiatS;
ukDDecDiatHyp = ukDRespTmDiatHyp + ukLossTmDiatHyp + kMortDiatW +(uCorVSetDiatHyp * uFunTmSetHyp) / sDepthWHyp;
wPExcrDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rPDDiatWHyp) /(cPDDiatMax + rPDDiatWHyp) * rPDDiatWHyp * wDRespDiatWHyp ENDIF;
wPLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDDiatWHyp * wDLossDiatHyp ENDIF;
wPMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oPDiatWHyp ENDIF;
tPSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDDiatWHyp * tDSetDiatHyp ENDIF;
tPResusDiat = rPDDiatS * tDResusDiat;
tPExcrDiatS = (2.0 * rPDDiatS) /(cPDDiatMax + rPDDiatS) * rPDDiatS * tDRespDiatS;
tPMortDiatS = kMortDiatS * sPDiatS;
wNExcrDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rNDDiatWHyp) /(cNDDiatMax + rNDDiatWHyp) * rNDDiatWHyp * wDRespDiatWHyp ENDIF;
wNLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDDiatWHyp * wDLossDiatHyp ENDIF;
wNMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oNDiatWHyp ENDIF;
tNSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDDiatWHyp * tDSetDiatHyp ENDIF;
tNResusDiat = rNDDiatS * tDResusDiat;
tNExcrDiatS = (2.0 * rNDDiatS) /(cNDDiatMax + rNDDiatS) * rNDDiatS * tDRespDiatS;
tNMortDiatS = kMortDiatS * sNDiatS;
uCorVSetDiatEpi = cVSetDiat * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetDiatEpi = uCorVSetDiatEpi * oDDiatWEpi;
rPDDiatWEpi = oPDiatWEpi /(oDDiatWEpi+NearZero);
tPSetDiatEpi = rPDDiatWEpi * tDSetDiatEpi;
rNDDiatWEpi = oNDiatWEpi /(oDDiatWEpi+NearZero);
tNSetDiatEpi = rNDDiatWEpi * tDSetDiatEpi;
wDPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssDiatHyp - wDRespDiatWHyp - wDLossDiatHyp - wDMortDiatWHyp -(tDSetDiatHyp - tDSetDiatEpi - tDResusDiat) / sDepthWHyp ENDIF;
wPPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptDiatHyp - wPExcrDiatWHyp - wPLossDiatHyp - wPMortDiatWHyp -(tPSetDiatHyp -tPSetDiatEpi - tPResusDiat) / sDepthWHyp ENDIF;
wNPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptDiatHyp - wNExcrDiatWHyp - wNLossDiatHyp - wNMortDiatWHyp -(tNSetDiatHyp - tNSetDiatEpi - tNResusDiat) / sDepthWHyp ENDIF;
oChlaHyp = oChlaDiatHyp + oChlaGrenHyp + oChlaBlueHyp;
wDAssPhytHyp = wDAssDiatHyp + wDAssGrenHyp + wDAssBlueHyp;
wDRespPhytWHyp = wDRespDiatWHyp + wDRespGrenWHyp + wDRespBlueWHyp;
wDMortPhytWHyp = wDMortDiatWHyp + wDMortGrenWHyp + wDMortBlueWHyp;
tDSetPhytHyp = tDSetDiatHyp + tDSetGrenHyp + tDSetBlueHyp;
wDLossPhytHyp = wDLossDiatHyp + wDLossGrenHyp + wDLossBlueHyp;
wDPrimPhytWHyp = wDPrimDiatWHyp + wDPrimGrenWHyp + wDPrimBlueWHyp;
wPUptPhytHyp = wPUptDiatHyp + wPUptGrenHyp + wPUptBlueHyp;
wPExcrPhytWHyp = wPExcrDiatWHyp + wPExcrGrenWHyp + wPExcrBlueWHyp;
wPMortPhytWHyp = wPMortDiatWHyp + wPMortGrenWHyp + wPMortBlueWHyp;
tPSetPhytHyp = tPSetDiatHyp + tPSetGrenHyp + tPSetBlueHyp;
tPResusPhyt = tPResusDiat + tPResusGren + tPResusBlue;
wPLossPhytHyp = wPLossDiatHyp + wPLossGrenHyp + wPLossBlueHyp;
wPPrimPhytWHyp = wPPrimDiatWHyp + wPPrimGrenWHyp + wPPrimBlueWHyp;
wNUptPhytHyp = wNUptDiatHyp + wNUptGrenHyp + wNUptBlueHyp;
wNUptNH4PhytHyp = wNUptNH4DiatHyp + wNUptNH4GrenHyp + wNUptNH4BlueHyp;
wNUptNO3PhytHyp = wNUptNO3DiatHyp + wNUptNO3GrenHyp + wNUptNO3BlueHyp;
wNExcrPhytWHyp = wNExcrDiatWHyp + wNExcrGrenWHyp + wNExcrBlueWHyp;
wNMortPhytWHyp = wNMortDiatWHyp + wNMortGrenWHyp + wNMortBlueWHyp;
tNSetPhytHyp = tNSetDiatHyp + tNSetGrenHyp + tNSetBlueHyp;
tNResusPhyt = tNResusDiat + tNResusGren + tNResusBlue;
wNLossPhytHyp = wNLossDiatHyp + wNLossGrenHyp + wNLossBlueHyp;
wNPrimPhytWHyp = wNPrimDiatWHyp + wNPrimGrenWHyp + wNPrimBlueWHyp;
tDRespPhytS = tDRespDiatS + tDRespGrenS + tDRespBlueS;
tDMortPhytS = tDMortDiatS + tDMortGrenS + tDMortBlueS;
tPExcrPhytS = tPExcrDiatS + tPExcrGrenS + tPExcrBlueS;
tPMortPhytS = tPMortDiatS + tPMortGrenS + tPMortBlueS;
tNExcrPhytS = tNExcrDiatS + tNExcrGrenS + tNExcrBlueS;
tNMortPhytS = tNMortDiatS + tNMortGrenS + tNMortBlueS;
wSiUptDiatHyp = cSiDDiat * wDAssDiatHyp;
wSiExcrDiatWHyp = cSiDDiat * wDRespDiatWHyp ;
wSiLossDiatHyp = cSiDDiat * wDLossDiatHyp;
wSiMortDiatWHyp = cSiDDiat * wDMortDiatWHyp;
tSiSetDiatHyp = cSiDDiat * tDSetDiatHyp;
tSiResusDiat = cSiDDiat * tDResusDiat ;
rCyDBlueHyp = cCyDBlueMax -(cCyDBlueMax - cCyDBlueMin) * aLLimBlueHyp;
oCyanHyp = rCyDBlueHyp * oDBlueWHyp * mgPerg;
fDDiatHyp = oDDiatWHyp /(oDDiatWHyp + oDGrenWHyp + oDBlueWHyp + NearZero);
wDPrimDetWHyp = wDMortPhytWHyp + wDLossPhytHyp;
wO2ProdPhytHyp = molO2molC * cCPerDW * wDAssPhytHyp;
wO2RespPhytWHyp = molO2molC * cCPerDW * wDRespPhytWHyp * aCorO2BODHyp;
wO2UptNO3PhytHyp = O2PerNO3 * molO2molN * wNUptNO3PhytHyp;
wO2PrimWHyp = wO2ProdPhytHyp - wO2RespPhytWHyp + wO2UptNO3PhytHyp;
wPMortPhytPO4WHyp = fDissMortPhyt * wPMortPhytWHyp;
wPMortPhytDetWHyp = wPMortPhytWHyp - wPMortPhytPO4WHyp;
wPLossPhytPO4Hyp = fDissLoss * wPLossPhytHyp;
wPLossPhytDetHyp = wPLossPhytHyp - wPLossPhytPO4Hyp;
wPPrimPO4WHyp = - wPUptPhytHyp + wPExcrPhytWHyp + wPLossPhytPO4Hyp + wPMortPhytPO4WHyp;
wPPrimDetWHyp = wPLossPhytDetHyp + wPMortPhytDetWHyp;
tPMortPhytPO4S = fDissMortPhyt * tPMortPhytS;
tPMortPhytDetS = tPMortPhytS - tPMortPhytPO4S;
tPPrimPO4S = tPExcrPhytS + tPMortPhytPO4S;
tPPrimTotT = 0.0;
wNMortPhytNH4WHyp = fDissMortPhyt * wNMortPhytWHyp;
wNMortPhytDetWHyp = wNMortPhytWHyp - wNMortPhytNH4WHyp;
wNLossPhytNH4Hyp = fDissLoss * wNLossPhytHyp;
wNLossPhytDetHyp = wNLossPhytHyp - wNLossPhytNH4Hyp;
wNPrimNH4WHyp = - wNUptNH4PhytHyp + wNExcrPhytWHyp + wNLossPhytNH4Hyp + wNMortPhytNH4WHyp;
wNPrimNO3WHyp = - wNUptNO3PhytHyp;
wNPrimDetWHyp = wNLossPhytDetHyp + wNMortPhytDetWHyp;
tNMortPhytNH4S = fDissMortPhyt * tNMortPhytS;
tNMortPhytDetS = tNMortPhytS - tNMortPhytNH4S;
tNPrimNH4S = tNExcrPhytS + tNMortPhytNH4S;
tNPrimNO3S = 0.0;
tNPrimTotT = 0.0;
tSiExcrDiatS = cSiDDiat * tDRespDiatS ;
tSiMortDiatS = cSiDDiat * tDMortDiatS;
wSiPrimSiO2WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wSiExcrDiatWHyp - wSiUptDiatHyp + tSiExcrDiatS / sDepthWHyp ENDIF;
wSiPrimDetWHyp = wSiMortDiatWHyp + wSiLossDiatHyp;
tSiPrimTotT = 0.0;
aPACoefEpi = cPACoefMin +(cPACoefMax - cPACoefMin) * hPACoef / (hPACoef + oDOMWEpi);
aPACoefHyp = cPACoefMin +(cPACoefMax - cPACoefMin) * hPACoef / (hPACoef + oDOMWHyp);
bSecchiMaxEpi = sDepthWEpi;
aSecchiEpi = MIN(bSecchiMaxEpi,aPACoefEpi / aExtCoefOpenEpi);
aTransparencyEpi = aSecchiEpi / sDepthWEpi;
bSecchiMaxHyp = sDepthWHyp + cSecchiPlus;
aSecchiHyp = IF ( aInclStrat EQ TRUE AND sDepthWEpi LE aPACoefEpi / aExtCoefOpenEpi ) THEN MIN(bSecchiMaxHyp,aPACoefHyp / aExtCoefOpenHyp - aSecchiEpi) ELSEIF ( aInclStrat EQ TRUE AND sDepthWEpi GT aPACoefEpi / aExtCoefOpenEpi) THEN 0.0 ELSE MIN(bSecchiMaxHyp,aPACoefHyp / aExtCoefOpenHyp) ENDIF;
aSecchiT = IF ( aInclStrat EQ TRUE ) THEN aSecchiEpi +aSecchiHyp ELSE aSecchiHyp ENDIF;
aTransparencyHyp = aSecchiHyp / sDepthWHyp;
aTransparencyT = IF ( aInclStrat EQ TRUE ) THEN aSecchiT / uDepthW ELSE aSecchiT / sDepthWHyp ENDIF;
aDepthEuphHyp = cEuph * aSecchiHyp;
aRelDepthEuphHyp = aDepthEuphHyp / sDepthWHyp;
aChlaHHyp = oChlaHyp * sDepthWHyp;
aCovPhytWHyp = cCovSpPhyt *(oDPhytWHyp * sDepthWHyp);
rExtChPhytHyp = aExtPhytHyp /(oChlaHyp / mgPerg + NearZero);
uFunTmZooHyp = EXP(-0.5/(cSigTmZoo*cSigTmZoo) *((uTmHyp-cTmOptZoo)*(uTmHyp-cTmOptZoo) -(cTmRef-cTmOptZoo)*(cTmRef-cTmOptZoo)));
uFunTmZooEpi = EXP(-0.5/(cSigTmZoo*cSigTmZoo) *((uTmEpi-cTmOptZoo)*(uTmEpi-cTmOptZoo) -(cTmRef-cTmOptZoo)*(cTmRef-cTmOptZoo)));
rPDZooHyp = oPZooHyp /(oDZooHyp+NearZero);
rNDZooHyp = oNZooHyp/(oDZooHyp+NearZero);
oDFoodZooHyp = cPrefDiat * oDDiatWHyp + cPrefGren * oDGrenWHyp + cPrefBlue * oDBlueWHyp + cPrefDet * oDDetWHyp;
aFiltHyp = cFiltMax * uFunTmZooHyp * hFilt /(hFilt + oDOMWHyp);
ukDAssTmZooHyp = fDAssZoo * cFiltMax * uFunTmZooHyp * hFilt;
ukDAssTmZooEpi = fDAssZoo * cFiltMax * uFunTmZooEpi * hFilt;
aDSatZooHyp = oDFoodZooHyp /(hFilt + oDOMWHyp);
ukDRespTmZooHyp = kDRespZoo * uFunTmZooHyp;
ukDRespTmZooEpi = kDRespZoo * uFunTmZooEpi;
ukDIncrZooHyp = ukDAssTmZooHyp - ukDRespTmZooHyp - kMortZoo;
ukDIncrZooEpi = ukDAssTmZooEpi - ukDRespTmZooEpi - kMortZoo;
wDEnvZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE MAX(0.0,ukDIncrZooHyp / cDCarrZoo * oDZooHyp*oDZooHyp) ENDIF;
wDAssZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aDSatZooHyp *(ukDAssTmZooHyp * oDZooHyp - wDEnvZooHyp) ENDIF;
wDConsZooHyp = wDAssZooHyp / fDAssZoo;
wDConsDetZooHyp = cPrefDet*oDDetWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsDiatZooHyp = cPrefDiat*oDDiatWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsGrenZooHyp = cPrefGren*oDGrenWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsBlueZooHyp = cPrefBlue*oDBlueWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsPhytZooHyp = wDConsDiatZooHyp + wDConsGrenZooHyp + wDConsBlueZooHyp;
wDEgesZooHyp = wDConsZooHyp - wDAssZooHyp;
aCorDRespZooHyp = MAX(cPDZooRef / rPDZooHyp,cNDZooRef / rNDZooHyp);
wDRespZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aCorDRespZooHyp * ukDRespTmZooHyp * oDZooHyp ENDIF;
wDMortZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortZoo * oDZooHyp +(1.0 - aDSatZooHyp) * wDEnvZooHyp ENDIF;
oPFoodZooHyp = cPrefDiat*oPDiatWHyp + cPrefGren*oPGrenWHyp + cPrefBlue*oPBlueWHyp + cPrefDet * oPDetWHyp;
rPDFoodZooHyp = oPFoodZooHyp /(oDFoodZooHyp+NearZero);
wPConsDiatZooHyp = rPDDiatWHyp * wDConsDiatZooHyp;
wPConsGrenZooHyp = rPDGrenWHyp * wDConsGrenZooHyp;
wPConsBlueZooHyp = rPDBlueWHyp * wDConsBlueZooHyp;
wPConsPhytZooHyp = wPConsDiatZooHyp + wPConsGrenZooHyp + wPConsBlueZooHyp;
wPConsDetZooHyp = rPDDetWHyp * wDConsDetZooHyp;
wPConsZooHyp = wPConsPhytZooHyp + wPConsDetZooHyp;
afPAssZooHyp = MIN(1.0,cPDZooRef / rPDFoodZooHyp * fDAssZoo);
wPAssZooHyp = afPAssZooHyp * wPConsZooHyp;
wPEgesZooHyp = wPConsZooHyp - wPAssZooHyp;
wPEgesZooPO4Hyp = fDissEgesZoo*wPEgesZooHyp;
wPEgesZooDetHyp = wPEgesZooHyp - wPEgesZooPO4Hyp;
akPExcrZooHyp = rPDZooHyp / cPDZooRef * kDRespZoo * uFunTmZooHyp;
wPExcrZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE akPExcrZooHyp*oPZooHyp ENDIF;
wPMortZooHyp = rPDZooHyp * wDMortZooHyp;
wPMortZooPO4Hyp = fDissMortZoo * wPMortZooHyp;
wPMortZooDetHyp = wPMortZooHyp - wPMortZooPO4Hyp;
oNFoodZooHyp = cPrefDiat*oNDiatWHyp + cPrefGren*oNGrenWHyp + cPrefBlue*oNBlueWHyp + cPrefDet*oNDetWHyp;
rNDFoodZooHyp = oNFoodZooHyp /(oDFoodZooHyp+NearZero);
wNConsDiatZooHyp = rNDDiatWHyp*wDConsDiatZooHyp;
wNConsGrenZooHyp = rNDGrenWHyp*wDConsGrenZooHyp;
wNConsBlueZooHyp = rNDBlueWHyp*wDConsBlueZooHyp;
wNConsPhytZooHyp = wNConsDiatZooHyp + wNConsGrenZooHyp + wNConsBlueZooHyp;
wNConsDetZooHyp = rNDDetWHyp*wDConsDetZooHyp;
wNConsZooHyp = wNConsPhytZooHyp + wNConsDetZooHyp;
afNAssZooHyp = MIN(1.0,cNDZooRef / rNDFoodZooHyp * fDAssZoo);
wNAssZooHyp = afNAssZooHyp*wNConsZooHyp;
wNEgesZooHyp = wNConsZooHyp - wNAssZooHyp;
wNEgesZooNH4Hyp = fDissEgesZoo*wNEgesZooHyp;
wNEgesZooDetHyp = wNEgesZooHyp - wNEgesZooNH4Hyp;
kNExcrZooHyp = rNDZooHyp / cNDZooRef * kDRespZoo * uFunTmZooHyp;
wNExcrZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNExcrZooHyp*oNZooHyp ENDIF;
wNMortZooHyp = rNDZooHyp*wDMortZooHyp;
wNMortZooNH4Hyp = fDissMortZoo*wNMortZooHyp;
wNMortZooDetHyp = wNMortZooHyp - wNMortZooNH4Hyp;
wSiConsDiatZooHyp = cSiDDiat * wDConsDiatZooHyp;
uFunTmBent = EXP(-0.5/(cSigTmBent*cSigTmBent) *((uTmBot-cTmOptBent)*(uTmBot-cTmOptBent) - (cTmRef-cTmOptBent)*(cTmRef-cTmOptBent)));
aDFoodBent = sDDetS + aDPhytS;
rPDBent = sPBent /(sDBent+NearZero);
rNDBent = sNBent /(sDBent+NearZero);
tDMigrBent = kMigrBent *(cDBentIn - sDBent);
aDSatBent = aDFoodBent /(hDFoodBent + aDFoodBent);
ukDIncrBent = (kDAssBent - kDRespBent) * uFunTmBent - kMortBent;
tDEnvBent = MAX(0.0,ukDIncrBent / cDCarrBent * sDBent*sDBent);
tDAssBent = aDSatBent *(kDAssBent * uFunTmBent * sDBent - tDEnvBent);
aDAssBentSp = tDAssBent / sDBent;
tDConsBent = tDAssBent / fDAssBent;
tDConsDetBent = sDDetS / aDFoodBent * tDConsBent;
tDConsDiatBent = sDDiatS / aDFoodBent * tDConsBent;
tDConsGrenBent = sDGrenS / aDFoodBent * tDConsBent;
tDConsBlueBent = sDBlueS / aDFoodBent * tDConsBent;
tDConsPhytBent = tDConsDiatBent + tDConsGrenBent + tDConsBlueBent;
tDEgesBent = tDConsBent - tDAssBent;
tDRespBent = (cPDBentRef / rPDBent) * kDRespBent * uFunTmBent * sDBent;
tDMortBent = kMortBent*sDBent +(1.0 - aDSatBent) * tDEnvBent;
aPFoodBent = sPDetS + aPPhytS;
rPDFoodBent = aPFoodBent /(aDFoodBent+NearZero);
tPConsDetBent = rPDDetS * tDConsDetBent;
tPConsDiatBent = rPDDiatS * tDConsDiatBent;
tPConsGrenBent = rPDGrenS * tDConsGrenBent;
tPConsBlueBent = rPDBlueS * tDConsBlueBent;
tPConsPhytBent = tPConsDiatBent + tPConsGrenBent + tPConsBlueBent;
tPConsBent = tPConsDetBent + tPConsPhytBent;
afPAssBent = MIN(1.0,cPDBentRef / rPDFoodBent * fDAssBent);
tPAssBent = afPAssBent * tPConsBent;
tPEgesBent = tPConsBent - tPAssBent;
tPEgesBentPO4 = fDissEgesBent * tPEgesBent;
tPEgesBentDet = (1.0 - fDissEgesBent) * tPEgesBent;
tPExcrBent = (rPDBent / cPDBentRef) * kDRespBent * uFunTmBent * sPBent;
tPMortBent = rPDBent * tDMortBent;
tPMortBentPO4 = fDissMortBent * tPMortBent;
tPMortBentDet = (1.0-fDissMortBent)*tPMortBent;
tPMigrBent = kMigrBent *(cPDBentRef*cDBentIn - sPBent);
aNFoodBent = sNDetS + aNPhytS;
rNDFoodBent = aNFoodBent /(aDFoodBent+NearZero);
tNMigrBent = kMigrBent *(cNDBentRef*cDBentIn - sNBent);
tNConsDetBent = rNDDetS * tDConsDetBent;
tNConsDiatBent = rNDDiatS * tDConsDiatBent;
tNConsGrenBent = rNDGrenS * tDConsGrenBent;
tNConsBlueBent = rNDBlueS * tDConsBlueBent;
tNConsPhytBent = tNConsDiatBent + tNConsGrenBent + tNConsBlueBent;
tNConsBent = tNConsDetBent + tNConsPhytBent;
afNAssBent = MIN(1.0,cNDBentRef / rNDFoodBent * fDAssBent);
tNAssBent = afNAssBent * tNConsBent;
tNEgesBent = tNConsBent - tNAssBent;
tNEgesBentNH4 = fDissEgesBent * tNEgesBent;
tNEgesBentDet = (1.0 - fDissEgesBent) * tNEgesBent;
tNExcrBent = (rNDBent / cNDBentRef) * kDRespBent * uFunTmBent * sNBent;
tNMortBent = rNDBent * tDMortBent;
tNMortBentNH4 = fDissMortBent*tNMortBent;
tNMortBentDet = (1.0-fDissMortBent)*tNMortBent;
tSiConsDiatBent = cSiDDiat * tDConsDiatBent;
aFunVegFish = MAX(0.0,1.0 - cRelVegFish * aCovVeg);
ukDIncrFiJv = (kDAssFiJv - kDRespFiJv) * uFunTmFish - kMortFiJv;
aDSatFiAd = (aFunVegFish * sDBent) *(aFunVegFish * sDBent) /(hDBentFiAd * hDBentFiAd + (aFunVegFish * sDBent) *(aFunVegFish * sDBent));
ukDIncrFiAd = (kDAssFiAd - kDRespFiAd) * uFunTmFish - kMortFiAd;
ukHarvFish = IF (COS(2.0 * Pi * sTime / DaysInYear) GT 0.1) THEN kHarvFishWin ELSE kHarvFishSum ENDIF;
afPAssFiAd = MIN(1.0,cPDFishRef / rPDBent * fDAssFiAd);
afNAssFiAd = MIN(1.0,cNDFishRef / rNDBent * fDAssFiAd);
uFunTmPisc = EXP(-0.5 /(cSigTmPisc*cSigTmPisc) *((uTmEpi - cTmOptPisc)*(uTmEpi - cTmOptPisc) - (cTmRef - cTmOptPisc)*(cTmRef - cTmOptPisc)));
aDCarrPisc = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,cDCarrPiscBare)) ELSEIF (sDShootPhra LT cDPhraMinPisc) THEN cDCarrPiscMin ELSEIF (aCovVeg LT cCovVegMin) THEN MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,fMarsh *(1.0/PerCent) * cRelPhraPisc)) ELSE MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,fMarsh *(1.0/PerCent) *(cRelPhraPisc + cRelVegPisc))) ENDIF;
aFunVegPisc = aDSubVeg /(hDVegPisc + aDSubVeg + NearZero);
akDIncrPisc = (kDAssPisc * aFunVegPisc - kDRespPisc) * uFunTmPisc - kMortPisc;
ukHarvPisc = IF (COS(2.0*Pi * sTime / DaysInYear) GT 0.1) THEN kHarvPiscWin ELSE kHarvPiscSum ENDIF;
tDWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsDetBent + tDEgesBent + tDMortBent ENDIF;
tDWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsDiatBent ENDIF;
tDWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsGrenBent ENDIF;
tDWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsBlueBent ENDIF;
tDWebPhytS = tDWebDiatS + tDWebGrenS + tDWebBlueS;
tPWebPO4S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPExcrBent + tPEgesBentPO4 + tPMortBentPO4 ENDIF;
tPWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsDetBent + tPEgesBentDet + tPMortBentDet ENDIF;
tPWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsDiatBent ENDIF;
tPWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsGrenBent ENDIF;
tPWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsBlueBent ENDIF;
tPWebPhytS = tPWebDiatS + tPWebGrenS + tPWebBlueS;
tNWebNH4S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNExcrBent + tNEgesBentNH4 + tNMortBentNH4 ENDIF;
tNWebNO3S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
tNWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsDetBent + tNEgesBentDet + tNMortBentDet ENDIF;
tNWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsDiatBent ENDIF;
tNWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsGrenBent ENDIF;
tNWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsBlueBent ENDIF;
tNWebPhytS = tNWebDiatS + tNWebGrenS + tNWebBlueS;
wSiWebSiO2W = 0.0;
wSiWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wSiConsDiatZooHyp ENDIF;
tSiWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tSiConsDiatBent ENDIF;
tSiWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
aPrefAveHyp = (cPrefDiat * oDDiatWHyp + cPrefGren * oDGrenWHyp + cPrefBlue * oDBlueWHyp + cPrefDet * oDDetWHyp) / oDOMWHyp;
wDConsZoo2Hyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aFiltHyp * aPrefAveHyp * oDOMWHyp * oDZooHyp ENDIF;
aDConsZooSpHyp = wDConsZooHyp / oDZooHyp;
aDAssZooSpHyp = wDAssZooHyp / oDZooHyp;
aDGrazSpHyp = wDConsZooHyp / oDOMWHyp;
aPConsZooSpHyp = wPConsZooHyp / oPZooHyp;
aPGrazSpHyp = wPConsZooHyp / oPOMWHyp;
aNConsZooSpHyp = wNConsZooHyp / oNZooHyp;
aNGrazSpHyp = wNConsZooHyp / oNOMWHyp;
afDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDShootPhra /(sDRootPhra + sDShootPhra) ELSE 0.0 ENDIF;
rDSRPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDShootPhra/sDRootPhra ELSE 0.0 ENDIF;
rPDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPShootPhra/sDShootPhra ELSE 0.0 ENDIF;
rNDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNShootPhra/sDShootPhra ELSE 0.0 ENDIF;
rPDRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sPRootPhra/sDRootPhra ELSE 0.0 ENDIF;
rNDRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNRootPhra/sDRootPhra ELSE 0.0 ENDIF;
aLengShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sDShootPhra / cDStemPhra / cDensStemPhra ELSE 0.0 ENDIF;
bDayInitPhra = IF (Day LT 1.0 OR sTime LT BeginTime + 1.0) THEN 367 ELSEIF (uTmEpi GE cTmInitPhra AND bDayInitPhra GT 366) THEN Day ELSE bDayInitPhra ENDIF;
aDAllPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayInitPhra) THEN 0.0 ELSEIF (Day LE bDayInitPhra + 1.0 / kDAllPhra) THEN fDAllPhra * sDRootPhra ELSE 0.0 ENDIF;
tDAllPhra = IF (FALSE EQ InclSeason) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayInitPhra) THEN 0.0 ELSEIF (Day LE bDayInitPhra + 1.0 / kDAllPhra) THEN kDAllPhra * aDAllPhra ELSE 0.0 ENDIF;
tNTransPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDRootPhra * tDAllPhra ELSE 0.0 ENDIF;
tPTransPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDRootPhra * tDAllPhra ELSE 0.0 ENDIF;
aVNUptPhraMaxCr = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,cVNUptPhraMax * POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) *(cNDPhraMax - rNDRootPhra) /(cNDPhraMax - cNDPhraMin)) ELSE 0.0 ENDIF;
ahNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraMaxCr / cAffNUptPhra ELSE 0.0 ENDIF;
aVNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraMaxCr * oNDissSM /(ahNUptPhraS + oNDissSM) ELSE 0.0 ENDIF;
tNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraS * sDRootPhra ELSE 0.0 ENDIF;
tNUptNH4PhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN sNH4SM / aNDissSM * tNUptPhraS ELSE 0.0 ENDIF;
tNUptNO3PhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNUptPhraS - tNUptNH4PhraS ELSE 0.0 ENDIF;
tNUptShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tNUptPhraS ELSE 0.0 ENDIF;
tNUptRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNUptPhraS - tNUptShootPhra ELSE 0.0 ENDIF;
aVPUptPhraMaxCr = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,cVPUptPhraMax * POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) *(cPDPhraMax - rPDRootPhra) /(cPDPhraMax - cPDPhraMin)) ELSE 0.0 ENDIF;
ahPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraMaxCr / cAffPUptPhra ELSE 0.0 ENDIF;
aVPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraMaxCr * oPO4SM /(ahPUptPhraS + oPO4SM) ELSE 0.0 ENDIF;
tPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraS * sDRootPhra ELSE 0.0 ENDIF;
tPUptShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tPUptPhraS ELSE 0.0 ENDIF;
tPUptRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tPUptPhraS - tPUptShootPhra ELSE 0.0 ENDIF;
uFunTmProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) ELSE 0.0 ENDIF;
ukDRespTmPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDRespPhra * POW(cQ10RespPhra , (0.1 *(uTmEpi - cTmRef))) ELSE 0.0 ENDIF;
aMuPhotPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (aLengShootPhra GE sDepthWM) THEN cMuPhraMax * uFunTmProdPhra * ufDay ELSE 0.0 ENDIF;
aNLimProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (1.0 - cNDPhraMin / rNDRootPhra) * cNDPhraMax /(cNDPhraMax - cNDPhraMin) ELSE 0.0 ENDIF;
aPLimProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (1.0 - cPDPhraMin / rPDRootPhra) * cPDPhraMax /(cPDPhraMax - cPDPhraMin) ELSE 0.0 ENDIF;
aNutLimPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MIN(aNLimProdPhra,aPLimProdPhra) ELSE 0.0 ENDIF;
aMuPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhotPhra * aNutLimPhra ELSE 0.0 ENDIF;
akDIncrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhotPhra - ukDRespTmPhra - kDMortShootPhra ELSE 0.0 ENDIF;
tDDensPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,akDIncrPhra / cDShootPhraMax * sDShootPhra * sDShootPhra) ELSE 0.0 ENDIF;
tDDensProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhra / cMuPhraMax * tDDensPhra ELSE 0.0 ENDIF;
tDProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhra * sDShootPhra - tDDensProdPhra ELSE 0.0 ENDIF;
tDProdShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tDProdPhra ELSE 0.0 ENDIF;
tDProdRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDProdPhra - tDProdShootPhra ELSE 0.0 ENDIF;
tDRespShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ukDRespTmPhra * sDShootPhra ELSE 0.0 ENDIF;
tDRespRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ukDRespTmPhra * sDRootPhra ELSE 0.0 ENDIF;
tO2RespRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * tDRespRootPhra * afOxySedM ELSE 0.0 ENDIF;
tO2FlowPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tO2RespRootPhra ELSE 0.0 ENDIF;
bDayRealPhra = IF (Day LT 180.0) THEN 367 ELSEIF (ufDay LE fDayWin AND bDayRealPhra GT 366) THEN Day ELSE bDayRealPhra ENDIF;
aDRealPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayRealPhra) THEN 0.0 ELSEIF (Day LE bDayRealPhra + 1.0 / kDRealPhra) THEN fDRealPhra * sDShootPhra ELSE 0.0 ENDIF;
tDRealPhra = IF (FALSE EQ InclSeason) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayRealPhra) THEN 0.0 ELSEIF (Day LE bDayRealPhra + 1.0 / kDRealPhra) THEN kDRealPhra * aDRealPhra ELSE 0.0 ENDIF;
tNRetrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDShootPhra * tDRealPhra ELSE 0.0 ENDIF;
tPRetrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDShootPhra * tDRealPhra ELSE 0.0 ENDIF;
tDMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMortShootPhra * sDShootPhra ELSE 0.0 ENDIF;
tNMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDShootPhra * tDMortShootPhra ELSE 0.0 ENDIF;
tPMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDShootPhra * tDMortShootPhra ELSE 0.0 ENDIF;
tDMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMortRootPhra * sDRootPhra ELSE 0.0 ENDIF;
tNMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDRootPhra * tDMortRootPhra ELSE 0.0 ENDIF;
tPMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDRootPhra * tDMortRootPhra ELSE 0.0 ENDIF;
tDManShootPhra = IF (FALSE EQ InclMarsh OR fMarsh GT NearZero) THEN 0.0 ELSEIF ((Day GE cDayManPhra) AND (Day LT cDayManPhra + 1.0)) THEN fManPhra * sDShootPhra ELSE 0.0 ENDIF;
tNManShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDManShootPhra * rNDShootPhra ELSE 0.0 ENDIF;
tPManShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDManShootPhra * rPDShootPhra ELSE 0.0 ENDIF;
tDIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetIMM ELSE 0.0 ENDIF;
tDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fRefrDetS * tDMinDetSM - tDMinHumSM ELSE 0.0 ENDIF;
tDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetDetM - tDMinDetSM + tDSetPhytM + tDMortRootPhra ELSE 0.0 ENDIF;
vDeltaSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (tDIMSM / cRhoIM +(tDHumSM + tDDetSM) / cRhoOM)/(1.0 - bPorS) ELSE 0.0 ENDIF;
tDBurIMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / ((sDHumSM + sDDetSM) / sDIMSM + cRhoOM / cRhoIM) ELSE ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) ENDIF;
tDBurOMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN (sDHumSM + sDDetSM) / sDIMSM * tDBurIMM ELSE fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIMM ENDIF;
tDBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN sDDetSM /(sDHumSM + sDDetSM) * tDBurOMM ELSE 0.0 ENDIF;
tDBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tDBurOMM - tDBurDetM ELSE tDBurOMM ENDIF;
tDBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tDBurIMM + tDBurOMM ELSE tDBurIMM + tDBurOMM ENDIF;
tPBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rPDHumSM * tDBurHumM ELSE cPDSoilOM * tDBurHumM ENDIF;
tPBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rPDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tPBurAIMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN sPAIMSM / sDIMSM * tDBurIMM ELSE 0.0 ENDIF;
tPBurPO4M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN sPO4SM *(vDeltaSM / cDepthSM) ELSE cPO4Ground *(bPorSM * vDeltaSM) ENDIF;
tPBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tPBurDetM + tPBurHumM + tPBurAIMM + tPBurPO4M ELSE tPBurHumM + tPBurAIMM + tPBurPO4M ENDIF;
tNBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rNDHumSM * tDBurHumM ELSE cNDSoilOM * tDBurHumM ENDIF;
tNBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rNDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tNBurNH4M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN sNH4SM *(vDeltaSM / cDepthSM) ELSE cNH4Ground *(bPorSM * vDeltaSM) ENDIF;
tNBurNO3M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN sNO3SM *(vDeltaSM / cDepthSM) ELSE cNO3Ground *(bPorSM * vDeltaSM) ENDIF;
tNBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tNBurDetM + tNBurHumM + tNBurNH4M + tNBurNO3M ELSE tNBurHumM + tNBurNH4M + tNBurNO3M ENDIF;
tSiBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rSiDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tSiBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tSiBurDetM ELSE 0.0 ENDIF;
vDeltaWM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (ConstDepth EQ TRUE) THEN 0.0 ELSE - vDeltaSM ENDIF;
aRelDeltaWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN vDeltaWM / sDepthWM ELSE 0.0 ENDIF;
tDSetTotHyp = tDSetIMHyp + tDSetDetHyp + tDSetPhytHyp;
tPSetTotHyp = tPSetAIMHyp + tPSetDetHyp + tPSetPhytHyp;
tNSetTotHyp = tNSetDetHyp + tNSetPhytHyp;
bTimeDred = IF (sTime GE cDredStart * DaysPerYear) THEN (FLOOR(TimeYears/cDredInterval) * cDredInterval) * DaysPerYear ELSE -9999.999 ENDIF;
bRhoSolidSoil = fDOrgSoil * cRhoOM +(1.0 - fDOrgSoil) * cRhoIM;
tDMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tDBurTotM - wDMinDetWM * sDepthWM -(1.0 - fRefrDetS) * tDMinDetSM - tDMinHumSM + tDProdPhra - tDRespShootPhra - tDRespRootPhra - tDManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tPMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tPInfPO4SM - tPDifGroundPO4M - tPBurTotM - tPChemPO4M - tPManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tNMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tNInfNH4SM - tNInfNO3SM - tNDifGroundNO3M - tNDifGroundNH4M - tNBurTotM - wNDenitWM * sDepthWM - tNDenitSM - tNManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tSiMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN - tSiBurDetM * fMarsh ELSE 0.0 ENDIF;
uTauSubstEpi = 1.0 / (ukDilEpi+NearZero);
akExchMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kExchMaxM * hfMarsh /(hfMarsh + fMarsh)  ELSE 0.0 ENDIF;
akExchLEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi * afVolMarshEpi ELSE 0.0 ENDIF;
oPPhytWEpi = oPDiatWEpi + oPGrenWEpi + oPBlueWEpi;
oNPhytWEpi = oNDiatWEpi + oNGrenWEpi + oNBlueWEpi;
oDSestWEpi = oDOMWEpi + oDIMWEpi;
oPOMWEpi = oPPhytWEpi + oPDetWEpi;
oPSestWEpi = oPPhytWEpi + oPDetWEpi + oPAIMWEpi;
oPInorgWEpi = oPO4WEpi + oPAIMWEpi;
oPTotWEpi = oPSestWEpi + oPO4WEpi;
oNOMWEpi = oNPhytWEpi + oNDetWEpi;
oNSestWEpi = oNOMWEpi;
oNkjWEpi = oNSestWEpi + oNH4WEpi;
oNTotWEpi = oNkjWEpi + oNO3WEpi;
rPDIMWEpi = oPAIMWEpi / oDIMWEpi;
rPDDetWEpi = oPDetWEpi / (oDDetWEpi+NearZero);
rNDDetWEpi = oNDetWEpi / (oDDetWEpi+NearZero);
rSiDDetWEpi = oSiDetWEpi / (oDDetWEpi+NearZero);
wDDilIMEpi = ukDilEpi * oDIMWEpi;
wDDilDetEpi = ukDilEpi * oDDetWEpi;
wDDilDiatEpi = ukDilEpi * oDDiatWEpi;
wDDilGrenEpi = ukDilEpi * oDGrenWEpi;
wDDilBlueEpi = ukDilEpi * oDBlueWEpi;
wDDilPhytEpi = wDDilDiatEpi + wDDilGrenEpi + wDDilBlueEpi;
wDDilZooEpi = ukDilEpi * oDZooEpi;
wPDilZooEpi = ukDilEpi * oPZooEpi;
wNDilZooEpi = ukDilEpi * oNZooEpi;
wPDilPO4Epi = ukDilEpi * oPO4WEpi;
wPDilDetEpi = ukDilEpi*oPDetWEpi;
wPDilAIMEpi = ukDilEpi * oPAIMWEpi;
wNDilNH4Epi = ukDilEpi * oNH4WEpi;
wNDilNO3Epi = ukDilEpi * oNO3WEpi;
wNDilDetEpi = ukDilEpi * oNDetWEpi;
wO2InflowEpi = ukDilWatEpi * cO2In;
wO2OutflEpi = ukDilEpi * oO2WEpi;
wPDilDiatEpi = ukDilEpi * oPDiatWEpi;
wNDilDiatEpi = ukDilEpi * oNDiatWEpi;
wPDilGrenEpi = ukDilEpi * oPGrenWEpi;
wNDilGrenEpi = ukDilEpi * oNGrenWEpi;
wPDilBlueEpi = ukDilEpi * oPBlueWEpi;
wNDilBlueEpi = ukDilEpi * oNBlueWEpi;
wPDilPhytEpi = wPDilDiatEpi + wPDilGrenEpi + wPDilBlueEpi;
wNDilPhytEpi = wNDilDiatEpi + wNDilGrenEpi + wNDilBlueEpi;
wDOutflTotEpi = ukOutEpi * oDSestWEpi;
wPOutflTotEpi = ukOutEpi * oPTotWEpi;
wNOutflTotEpi = ukOutEpi * oNTotWEpi;
wDTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDiat / sDepthWEpi - wDDilDiatEpi ENDIF;
wPTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDiat / sDepthWEpi - wPDilDiatEpi ENDIF;
wNTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDiat / sDepthWEpi - wNDilDiatEpi ENDIF;
wDTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadGren / sDepthWEpi - wDDilGrenEpi ENDIF;
wPTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadGren / sDepthWEpi - wPDilGrenEpi ENDIF;
wNTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadGren / sDepthWEpi - wNDilGrenEpi ENDIF;
wDTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadBlue / sDepthWEpi - wDDilBlueEpi ENDIF;
wPTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadBlue / sDepthWEpi - wPDilBlueEpi ENDIF;
wNTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadBlue / sDepthWEpi - wNDilBlueEpi ENDIF;
wDTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wDTranDiatEpi + wDTranGrenEpi + wDTranBlueEpi ENDIF;
wPTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wPTranDiatEpi + wPTranGrenEpi + wPTranBlueEpi ENDIF;
wNTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wNTranDiatEpi + wNTranGrenEpi + wNTranBlueEpi ENDIF;
wSiDilSiO2Epi = ukDilEpi * oSiO2WEpi;
wSiDilDetEpi = ukDilEpi * oSiDetWEpi;
wSiDilDiatEpi = cSiDDiat * wDDilDiatEpi;
wSiOutflTotEpi = ukOutEpi * (oSiO2WEpi + oSiDetWEpi + cSiDDiat * oDDiatWEpi);
wSiTranSiO2Epi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadSiO2 / sDepthWEpi - wSiDilSiO2Epi ENDIF;
wSiTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadDet / sDepthWEpi - wSiDilDetEpi ENDIF;
tSiTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadSiO2 + uSiLoadDet + uSiLoadDiat - (wSiDilDetEpi + wSiDilSiO2Epi + wSiDilDiatEpi) * sDepthWEpi ENDIF;
wDTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE( ukDilWatEpi * cDZooIn - wDDilZooEpi) ENDIF;
wPTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE(ukDilWatEpi * cPDZooRef*cDZooIn - wPDilZooEpi) ENDIF;
wNTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE(ukDilWatEpi * cNDZooRef*cDZooIn - wNDilZooEpi) ENDIF;
wDTranIMWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadIM / sDepthWEpi - wDDilIMEpi ENDIF;
wDTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDet / sDepthWEpi - wDDilDetEpi ENDIF;
wO2TranWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wO2InflowEpi - wO2OutflEpi ENDIF;
wPTranPO4WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadPO4 / sDepthWEpi - wPDilPO4Epi ENDIF;
wPTranAIMWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadAIM / sDepthWEpi - wPDilAIMEpi ENDIF;
wPTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDet / sDepthWEpi - wPDilDetEpi ENDIF;
wNTranNH4WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNH4 / sDepthWEpi - wNDilNH4Epi ENDIF;
wNTranNO3WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNO3 / sDepthWEpi - wNDilNO3Epi ENDIF;
wNTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDet / sDepthWEpi - wNDilDetEpi ENDIF;
wDDilTotEpi = wDDilIMEpi + wDDilDetEpi + wDDilPhytEpi;
wPDilTotEpi = wPDilDetEpi + wPDilPO4Epi + wPDilAIMEpi + wPDilPhytEpi;
wNDilTotEpi = wNDilDetEpi + wNDilNO3Epi + wNDilNH4Epi + wNDilPhytEpi;
wSiDilTotEpi = wSiDilDetEpi + wSiDilSiO2Epi + wSiDilDiatEpi;
tDTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoad - wDDilTotEpi * sDepthWEpi ENDIF;
tPTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoad - wPDilTotEpi * sDepthWEpi ENDIF;
tNTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoad - wNDilTotEpi * sDepthWEpi ENDIF;
tDTranTotWEpi = (wDTranIMWEpi + wDTranDetWEpi + wDTranDiatEpi + wDTranGrenEpi + wDTranBlueEpi + wDTranZooEpi) * sDepthWEpi;
tDTranTotWHyp = (wDTranIMWHyp + wDTranDetWHyp + wDTranDiatHyp + wDTranGrenHyp + wDTranBlueHyp + wDTranZooHyp) * sDepthWHyp;
tNTranTotW = (uNBackLoadHyp / sDepthWHyp + wNTranNH4WHyp + wNTranNO3WHyp + wNTranDetWHyp + wNTranDiatHyp + wNTranGrenHyp + wNTranBlueHyp + wNTranZooHyp) * sDepthWHyp + (wNTranNH4WEpi + cNBackLoad / sDepthWEpi + wNTranNO3WEpi + wNTranDetWEpi + wNTranDiatEpi + wNTranGrenEpi + wNTranBlueEpi + wNTranZooEpi) * sDepthWEpi;
wDExchIMMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDIMWEpi - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPO4WEpi - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPAIMWEpi - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNH4WEpi - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNO3WEpi - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oSiO2WEpi - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oO2WEpi - oO2WM) ELSE 0.0 ENDIF;
wDExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDDetWEpi - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPDetWEpi - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNDetWEpi - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oSiDetWEpi - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDDiatWEpi - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPDiatWEpi - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNDiatWEpi - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatMEpi ELSE 0.0 ENDIF;
wDExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDGrenWEpi - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPGrenWEpi - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNGrenWEpi - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDBlueWEpi - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPBlueWEpi - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNBlueWEpi - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDZooEpi - oDZooM) ELSE 0.0 ENDIF;
wPExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPZooEpi - oPZooM) ELSE 0.0 ENDIF;
wNExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNZooEpi - oNZooM) ELSE 0.0 ENDIF;
wDExchIMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDIMWEpi - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPO4WEpi - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPAIMWEpi - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNH4WEpi - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNO3WEpi - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oSiO2WEpi - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oO2WEpi - oO2WM) ELSE 0.0 ENDIF;
wDExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDDetWEpi - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPDetWEpi - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNDetWEpi - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oSiDetWEpi - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDDiatWEpi - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPDiatWEpi - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNDiatWEpi - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatEpi ELSE 0.0 ENDIF;
wDExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDGrenWEpi - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPGrenWEpi - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNGrenWEpi - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDBlueWEpi - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPBlueWEpi - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNBlueWEpi - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDZooEpi - oDZooM) ELSE 0.0 ENDIF;
wPExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPZooEpi - oPZooM) ELSE 0.0 ENDIF;
wNExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNZooEpi - oNZooM) ELSE 0.0 ENDIF;
tDExchTotW= - ((wDExchIMHyp + wDExchDetHyp+ wDExchDiatHyp + wDExchGrenHyp+ wDExchBlueHyp+ wDExchZooHyp) * sDepthWHyp+ (wDExchIMEpi + wDExchDetEpi+ wDExchDiatEpi + wDExchGrenEpi+ wDExchBlueEpi+ wDExchZooEpi) * sDepthWEpi) ;
tDExchTotEpi = (wDExchIMEpi + wDExchDetEpi + wDExchDiatEpi + wDExchGrenEpi + wDExchBlueEpi + wDExchZooEpi) * sDepthWEpi;
tDExchTotHyp = (wDExchIMHyp + wDExchDetHyp + wDExchDiatHyp + wDExchGrenHyp + wDExchBlueHyp + wDExchZooHyp) * sDepthWHyp;
tNExchTotW = (wNExchNH4Hyp + wNExchNO3Hyp + wNExchDetHyp + wNExchDiatHyp + wNExchGrenHyp + wNExchBlueHyp + wNExchZooHyp) * sDepthWHyp + (wNExchNH4Epi + wNExchNO3Epi + wNExchDetEpi + wNExchDiatEpi + wNExchGrenEpi + wNExchBlueEpi + wNExchZooEpi) * sDepthWEpi;
tPInfPO4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oPO4WEpi ELSE cQInf / mmPerm * oPO4S ENDIF;
tNInfNH4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNH4WEpi ELSE cQInf / mmPerm * oNH4S ENDIF;
tNInfNO3WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (cQInf GE 0.0) THEN cQInf / mmPerm * oNO3WEpi ELSE cQInf / mmPerm * oNO3S ENDIF;
tO2AerEpi = kAer * uFunTmAerEpi * (uO2SatEpi - oO2WEpi) * aFunLemnAer * aFunBlueSurfAer;
tDTurbFishIM = fLutum * sDIMS / (fLutum * sDIMS + sDDetS) * tDTurbFish;
uCorVSetIMEpi = aFunTauSetIMEpi * POW((fLutumRef/fLutum) , (0.5)) * uFunTmSetEpi * cVSetIM;
tDSetIMEpi = uCorVSetIMEpi * oDIMWEpi;
tPSetAIMEpi = oPAIMWEpi / oDIMWEpi * tDSetIMEpi;
uCorVSetDetEpi = cVSetDet * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetDetEpi = uCorVSetDetEpi * oDDetWEpi;
tPSetDetEpi = uCorVSetDetEpi * oPDetWEpi;
tNSetDetEpi = uCorVSetDetEpi * oNDetWEpi;
tSiSetDetEpi = uCorVSetDetEpi * oSiDetWEpi;
wDMinDetWEpi = kDMinDetW * uFunTmMinWEpi * oDDetWEpi;
wPMinDetWEpi = kPMinDetW * uFunTmMinWEpi * oPDetWEpi;
wNMinDetWEpi = kNMinDetW * uFunTmMinWEpi * oNDetWEpi;
wSiMinDetWEpi = kSiMinDetW * uFunTmMinWEpi * oSiDetWEpi;
aCorO2BODEpi = oO2WEpi / (hO2BOD + oO2WEpi);
wO2MinDetWEpi = molO2molC * cCPerDW * aCorO2BODEpi * wDMinDetWEpi;
wDDenitWEpi = oNO3WEpi*oNO3WEpi / (hNO3Denit*hNO3Denit + oNO3WEpi*oNO3WEpi) * (1.0 - aCorO2BODEpi) * wDMinDetWEpi;
wNDenitWEpi = NO3PerC * molNmolC * cCPerDW * wDDenitWEpi;
aCorO2NitrWEpi = oO2WEpi*oO2WEpi / (hO2Nitr*hO2Nitr + oO2WEpi*oO2WEpi);
wNNitrWEpi = kNitrW * uFunTmNitrEpi * aCorO2NitrWEpi * oNH4WEpi;
wO2NitrWEpi = O2PerNH4 * molO2molN * wNNitrWEpi;
tDMinOxyDetS = afOxySed * (1.0 - fRefrDetS) * tDMinDetS;
tO2MinDetS = molO2molC * cCPerDW * tDMinOxyDetS;
tDDenitS = oNO3S*oNO3S / (hNO3Denit*hNO3Denit + oNO3S*oNO3S) * (1.0 - afOxySed) * (1.0 - fRefrDetS) * tDMinDetS;
tNDenitS = NO3PerC * molNmolC * cCPerDW * tDDenitS;
tNNitrS = afOxySed * kNitrS * uFunTmNitrS * sNH4S;
tO2NitrS = O2PerNH4 * molO2molN * tNNitrS;
tDMinHumS = kDMinHum * uFunTmMinS * afOxySed * sDHumS;
tPMinHumS = kDMinHum * uFunTmMinS * afOxySed * sPHumS;
tNMinHumS = kDMinHum * uFunTmMinS * afOxySed * sNHumS;
tPDifPO4Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorS * (oPO4S - oPO4WEpi ) / aDepthDif ENDIF;
tNDifNO3Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorS * (oNO3S - oNO3WEpi ) / aDepthDif ENDIF;
tNDifNH4Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorS * (oNH4S - oNH4WEpi ) / aDepthDif ENDIF;
tO2DifEpi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kO2Dif / aDepthDif * uFunTmDif * cTurbDifO2 * bPorCorS * oO2WEpi ENDIF;
aPAdsMaxWEpi = cRelPAdsD + aCorO2BODEpi * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsWEpi = (1.0 - fRedMax * (1.0-aCorO2BODEpi)) * cKPAdsOx;
aPIsoAdsWEpi = aPAdsMaxWEpi * aKPAdsWEpi * oPO4WEpi / (1.0 + aKPAdsWEpi * oPO4WEpi);
aPEqIMWEpi = aPIsoAdsWEpi * oDIMWEpi;
wPSorpIMWEpi = kPSorp * (aPEqIMWEpi - oPAIMWEpi);
aPAdsMaxS = cRelPAdsD + afOxySed * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsS = (1.0 - fRedMax * (1.0-afOxySed)) * cKPAdsOx;
aPIsoAdsS = aPAdsMaxS * aKPAdsS * oPO4S / (1.0 + aKPAdsS * oPO4S);
aPEqIMS = aPIsoAdsS * sDIMS;
tPSorpIMS = kPSorp * (aPEqIMS - sPAIMS);
wO2AbioWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE tO2BubHyp / sDepthWHyp - wO2MinDetWHyp - wO2NitrWHyp - (tO2MinDetS + tO2NitrS) / sDepthWHyp ENDIF;
wPAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wPMinDetWHyp - (tPSetDetHyp - tPSetDetEpi - tPResusDet) / sDepthWHyp ENDIF;
wPAbioPO4WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPMinDetWHyp - wPSorpIMWHyp - tPInfPO4WHyp / sDepthWHyp + tPDifPO4Hyp / sDepthWHyp + tPResusPO4 / sDepthWHyp ENDIF;
wPAbioAIMWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (- tPSetAIMHyp +tPSetAIMEpi + tPResusAIM) / sDepthWHyp + wPSorpIMWHyp ENDIF;
tPAbioTotT = uPErosOM - tPChemPO4 - tPInfPO4S - tPDifGroundPO4;
wNAbioNH4WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNMinDetWHyp - wNNitrWHyp - tNInfNH4WHyp / sDepthWHyp + (tNDifNH4Hyp + tNResusNH4) / sDepthWHyp ENDIF;
wNAbioNO3WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNNitrWHyp - wNDenitWHyp + (tNDifNO3Hyp + tNResusNO3 - tNInfNO3WHyp) / sDepthWHyp ENDIF;
wNAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wNMinDetWHyp - (tNSetDetHyp -tNSetDetEpi - tNResusDet ) / sDepthWHyp ENDIF;
wSiAbioSiO2WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wSiMinDetWHyp + (1.0 - fRefrDetS) * tSiMinDetS / sDepthWHyp ENDIF;
wSiAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wSiMinDetWHyp - (tSiSetDetHyp -tSiSetDetEpi - tSiResusDet) / sDepthWHyp ENDIF;
wDAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (- tDSetDetHyp + tDSetDetEpi + tDResusDet ) / sDepthWHyp - wDMinDetWHyp ENDIF;
wDAbioIMWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (uDErosIMW * fHypErosIM - tDSetIMHyp+ tDSetIMEpi + tDResusIM) / sDepthWHyp ENDIF;
wDAbioIMWEpi = IF ( aInclStrat EQ TRUE ) THEN (uDErosIMW * (1- fHypErosIM) - tDSetIMEpi ) / sDepthWEpi ELSE (uDErosIMW * (1- fHypErosIM) - tDSetIMEpi + tDResusIM) / sDepthWEpi ENDIF;
wDAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN (- tDSetDetEpi ) / sDepthWEpi - wDMinDetWEpi ELSE (- tDSetDetEpi + tDResusDet ) / sDepthWEpi - wDMinDetWEpi ENDIF;
tDAbioIMS = IF ( aInclStrat EQ TRUE ) THEN uDErosIMS + tDSetIMHyp - tDResusIM ELSE uDErosIMS + tDSetIMEpi - tDResusIM ENDIF ;
tDAbioDetS = IF ( aInclStrat EQ TRUE ) THEN tDSetDetHyp - tDResusDet - tDMinDetS ELSE tDSetDetEpi - tDResusDet - tDMinDetS ENDIF ;
tDAbioHumS = uDErosOM + fRefrDetS * tDMinDetS - tDMinHumS;
tDAbioTotW = (wDAbioIMWHyp + wDAbioDetWHyp) * sDepthWHyp + (wDAbioIMWEpi + wDAbioDetWEpi) * sDepthWEpi;
tDAbioTotWEpi = (wDAbioIMWEpi + wDAbioDetWEpi) * sDepthWEpi;
tDAbioTotWHyp = (wDAbioIMWHyp + wDAbioDetWHyp) * sDepthWHyp;
tDAbioTotS =tDAbioIMS + tDAbioHumS + tDAbioDetS;
tDAbioTotT = cDErosTot - wDMinDetWEpi * sDepthWEpi - wDMinDetWHyp * sDepthWHyp - (1.0 - fRefrDetS) * tDMinDetS - tDMinHumS;
wO2AbioWEpi = IF (aInclStrat EQ FALSE) THEN tO2AerEpi / sDepthWEpi - wO2MinDetWEpi - wO2NitrWEpi - (tO2MinDetS + tO2NitrS) / sDepthWEpi ELSE tO2AerEpi / sDepthWEpi - wO2MinDetWEpi - wO2NitrWEpi ENDIF;
wO2AbioM = tO2AerM / sDepthWM - wO2MinDetWM - wO2NitrWM - (tO2MinDetSM + tO2NitrSM) / sDepthWM;
wPAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wPMinDetWEpi - (tPSetDetEpi ) / sDepthWEpi ELSE - wPMinDetWEpi - (tPSetDetEpi - tPResusDet) / sDepthWEpi ENDIF;
wPAbioPO4WEpi =IF (aInclStrat EQ TRUE ) THEN wPMinDetWEpi - wPSorpIMWEpi - tPInfPO4WEpi / sDepthWEpi + tPDifPO4Epi / sDepthWEpi ELSE wPMinDetWEpi - wPSorpIMWEpi - tPInfPO4WEpi / sDepthWEpi + tPDifPO4Epi / sDepthWEpi + tPResusPO4 / sDepthWEpi ENDIF;
wPAbioAIMWEpi = IF (aInclStrat EQ TRUE ) THEN (- tPSetAIMEpi ) / sDepthWEpi + wPSorpIMWEpi ELSE (- tPSetAIMEpi + tPResusAIM ) / sDepthWEpi + wPSorpIMWEpi ENDIF;
tPAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tPMinDetS + tPSetDetHyp - tPResusDet ELSE - tPMinDetS + tPSetDetEpi - tPResusDet ENDIF ;
tPAbioHumS = uPErosOM + fRefrDetS * tPMinDetS - tPMinHumS;
tPAbioPO4S = IF ( aInclStrat EQ TRUE ) THEN tPInfPO4WHyp - tPInfPO4S + (1.0-fRefrDetS) * tPMinDetS + tPMinHumS - tPSorpIMS - tPResusPO4 - tPDifPO4Hyp - tPDifGroundPO4 - tPChemPO4 ELSE tPInfPO4WEpi - tPInfPO4S + (1.0-fRefrDetS) * tPMinDetS + tPMinHumS - tPSorpIMS - tPResusPO4 - tPDifPO4Epi - tPDifGroundPO4 - tPChemPO4 ENDIF;
tPAbioAIMS = IF ( aInclStrat EQ TRUE ) THEN tPSetAIMHyp - tPResusAIM + tPSorpIMS ELSE tPSetAIMEpi - tPResusAIM + tPSorpIMS ENDIF;
wNAbioNH4WEpi = IF (aInclStrat EQ TRUE ) THEN wNMinDetWEpi - wNNitrWEpi - tNInfNH4WEpi / sDepthWEpi + (tNDifNH4Epi ) / sDepthWEpi ELSE wNMinDetWEpi - wNNitrWEpi - tNInfNH4WEpi / sDepthWEpi + (tNDifNH4Epi + tNResusNH4) / sDepthWEpi ENDIF;
wNAbioNO3WEpi = IF (aInclStrat EQ TRUE ) THEN wNNitrWEpi - wNDenitWEpi + (tNDifNO3Epi - tNInfNO3WEpi) / sDepthWEpi ELSE wNNitrWEpi - wNDenitWEpi + (tNDifNO3Epi + tNResusNO3 - tNInfNO3WEpi) / sDepthWEpi ENDIF;
wNAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wNMinDetWEpi - (tNSetDetEpi) / sDepthWEpi ELSE - wNMinDetWEpi - (tNSetDetEpi - tNResusDet ) / sDepthWEpi ENDIF;
tNAbioNH4S = IF ( aInclStrat EQ TRUE ) THEN tNInfNH4WHyp - tNInfNH4S + (1.0-fRefrDetS) * tNMinDetS + tNMinHumS - tNResusNH4 - tNDifNH4Hyp - tNDifGroundNH4 - tNNitrS ELSE tNInfNH4WEpi - tNInfNH4S + (1.0-fRefrDetS) * tNMinDetS + tNMinHumS - tNResusNH4 - tNDifNH4Epi - tNDifGroundNH4 - tNNitrS ENDIF;
tNAbioNO3S = IF ( aInclStrat EQ TRUE ) THEN tNInfNO3WHyp - tNInfNO3S + tNNitrS - tNDenitS - tNResusNO3 - tNDifNO3Hyp - tNDifGroundNO3 ELSE tNInfNO3WEpi - tNInfNO3S + tNNitrS - tNDenitS - tNResusNO3 - tNDifNO3Epi - tNDifGroundNO3 ENDIF;
tNAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tNMinDetS + tNSetDetHyp - tNResusDet ELSE - tNMinDetS + tNSetDetEpi - tNResusDet ENDIF ;
tNAbioHumS = uNErosOM + fRefrDetS * tNMinDetS - tNMinHumS;
tNAbioTotT = uNErosOM - tNDenitS - wNDenitWEpi * sDepthWEpi - wNDenitWHyp * sDepthWHyp - tNInfNH4S - tNInfNO3S - tNDifGroundNO3 - tNDifGroundNH4;
tNAbioTotW = (wNAbioNH4WHyp + wNAbioNO3WHyp + wNAbioDetWHyp) * sDepthWHyp + (wNAbioNH4WEpi +  wNAbioNO3WEpi + wNAbioDetWEpi) * sDepthWEpi;
tNAbioTotS = tNAbioNH4S + tNAbioNO3S + tNAbioDetS + tNAbioHumS;
wSiAbioSiO2WEpi = IF (aInclStrat EQ FALSE ) THEN wSiMinDetWEpi + (1.0 - fRefrDetS) * tSiMinDetS / sDepthWEpi ELSE wSiMinDetWEpi ENDIF;
wSiAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wSiMinDetWEpi - (tSiSetDetEpi ) / sDepthWEpi ELSE - wSiMinDetWEpi - (tSiSetDetEpi - tSiResusDet) / sDepthWEpi ENDIF;
tSiAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tSiMinDetS + tSiSetDetHyp - tSiResusDet ELSE - tSiMinDetS + tSiSetDetEpi - tSiResusDet ENDIF;
tDProdSubVegEpi = bfSubVegEpi * tDProdVegEpi;
tDMortVegWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tDMortVegEpi;
tDMortVegSEpi = tDMortVegEpi - tDMortVegWEpi;
tDBedVeg = IF InclVeg EQ TRUE THEN tDMigrVeg + tDProdVegEpi + tDProdVegHyp- tDRespVeg - tDMortVegEpi - tDMortVegHyp - tDGrazVegBird - tDManVeg ELSE 0.0 ENDIF;
tO2ProdVegEpi = molO2molC * cCPerDW * tDProdVegEpi;
tO2RespVegWEpi = molO2molC * cCPerDW * bfSubVegEpi * tDRespVeg * aCorO2BODEpi;
tO2ProdVegSEpi = MIN (tO2RespVegS, tO2ProdVegEpi);
tO2ProdVegWEpi = MIN ( tO2ProdVegEpi - tO2ProdVegSEpi, bfSubVeg * tO2ProdVegEpi) ;
tO2BedS = tO2ProdVegSHyp + tO2ProdVegSEpi - tO2RespVegS + tO2UptNO3VegS;
tO2UptNO3VegWEpi = O2PerNO3 * molO2molN * bfSubVeg * tNUptNO3VegWEpi;
tPMortVegEpi = rPDVeg * tDMortVegEpi;
tPMortVegPO4Epi = fDissMortVeg * tPMortVegEpi;
tPMortVegPO4SEpi = bfRootVeg * tPMortVegPO4Epi;
tPMortVegPO4WEpi = tPMortVegPO4Epi - tPMortVegPO4SEpi;
tPMortVegDetEpi = tPMortVegEpi - tPMortVegPO4Epi;
tPMortVegDetWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tPMortVegDetEpi;
tPMortVegDetSEpi = tPMortVegDetEpi - tPMortVegDetWEpi;
tPBedVeg = IF InclVeg EQ TRUE THEN tPMigrVeg + tPUptVegEpi + tPUptVegHyp - tPExcrVeg - tPMortVegEpi - tPMortVegHyp - tPGrazVegBird - tPManVeg ELSE 0.0 ENDIF;
tNMortVegNH4WEpi = tNMortVegNH4Epi - tNMortVegNH4SEpi;
tNMortVegDetEpi = tNMortVegEpi - tNMortVegNH4Epi;
tNMortVegDetWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tNMortVegDetEpi;
tNMortVegDetSEpi = tNMortVegDetEpi - tNMortVegDetWEpi;
tNBedVeg = IF InclVeg EQ TRUE THEN tNMigrVeg + tNUptVeg - tNExcrVeg - tNMortVegEpi - tNMortVegHyp - tNGrazVegBird - tNManVeg ELSE 0.0 ENDIF;
wDBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tDMortVegWEpi + tDEgesBird) / sDepthWEpi ELSE 0.0 ENDIF;
tDBedDetSEpi = IF ( InclVeg EQ TRUE) THEN tDMortVegSEpi ELSE 0.0 ENDIF;
wPBedPO4WEpi = IF (InclVeg EQ FALSE) THEN 0.0 ELSE (- tPUptVegWEpi + tPExcrVegW * uVegHeightEpi / uVegHeight + tPMortVegPO4WEpi + tPEgesBirdPO4) /sDepthWEpi ENDIF;
wPBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tPMortVegDetWEpi + tPEgesBirdDet) / sDepthWEpi ELSE 0.0 ENDIF;
tPBedPO4S = IF ( InclVeg EQ TRUE) THEN - tPUptVegS + tPExcrVegS + tPMortVegPO4SEpi + tPMortVegPO4SHyp ELSE 0.0 ENDIF;
tPBedDetS = IF (InclVeg EQ TRUE) THEN tPMortVegDetSEpi + tPMortVegDetSHyp ELSE 0.0 ENDIF;
wNBedNH4WEpi = IF ( InclVeg EQ TRUE ) THEN (- tNUptNH4VegWEpi + tNExcrVegW * (uVegHeightEpi /uVegHeight ) + tNMortVegNH4WEpi + tNEgesBirdNH4) / sDepthWEpi ELSE 0.0 ENDIF;
wNBedNO3WEpi = IF ( InclVeg EQ TRUE) THEN - tNUptNO3VegWEpi / sDepthWEpi ELSE 0.0 ENDIF;
wNBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tNMortVegDetWEpi + tNEgesBirdDet) / sDepthWEpi ELSE 0.0 ENDIF;
tNBedNH4S = IF ( InclVeg EQ TRUE) THEN - tNUptNH4VegS + tNExcrVegS + tNMortVegNH4SEpi + tNMortVegNH4SHyp ELSE 0.0 ENDIF;
tNBedNO3S = IF ( InclVeg EQ TRUE ) THEN - tNUptNO3VegS ELSE 0.0 ENDIF;
tNBedDetS = IF ( InclVeg EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ TRUE) THEN tNMortVegDetSEpi + tNMortVegDetSHyp ELSE tNMortVegDetSEpi ENDIF;
tO2BedWEpi = IF ( InclVeg EQ TRUE ) THEN tO2ProdVegWEpi - tO2RespVegWEpi + tO2UptNO3VegWEpi ELSE 0.0 ENDIF;
aVPUptMaxCrBlueEpi = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueEpi *(cPDBlueMax - rPDBlueWEpi) /(cPDBlueMax - cPDBlueMin));
aVPUptBlueEpi = oPO4WEpi * aVPUptMaxCrBlueEpi /(aVPUptMaxCrBlueEpi / cAffPUptBlue + oPO4WEpi);
wPUptBlueEpi = aVPUptBlueEpi * oDBlueWEpi;
aVNUptMaxCrBlueEpi = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueEpi * (cNDBlueMax - rNDBlueWEpi) /(cNDBlueMax - cNDBlueMin));
ahNUptBlueEpi = aVNUptMaxCrBlueEpi / cAffNUptBlue;
aVNUptBlueEpi = oNDissWEpi * aVNUptMaxCrBlueEpi /(ahNUptBlueEpi + oNDissWEpi);
wNUptBlueEpi = aVNUptBlueEpi * oDBlueWEpi;
tNUptBlueEpi = wNUptBlueEpi * sDepthWEpi;
aNfixBlueEpi = rNfixBlueEpi *aChlaBlueEpi /ugPerg;
tNUptBlueAirEpi = IF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueEpi ENDIF;
tNUptBlueWEpi = IF (InclNfix EQ FALSE) THEN tNUptBlueEpi ELSE tNUptBlueEpi - tNUptBlueAirEpi ENDIF;
wNUptBlueWEpi = tNUptBlueWEpi / sDepthWEpi;
afNH4UptBlueEpi = oNH4WEpi * oNO3WEpi /((ahNUptBlueEpi + oNH4WEpi) *(ahNUptBlueEpi + oNO3WEpi)) + oNH4WEpi * ahNUptBlueEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptBlueEpi + oNO3WEpi));
wNUptNH4BlueEpi = afNH4UptBlueEpi * wNUptBlueWEpi;
wNUptNO3BlueEpi = wNUptBlueWEpi - wNUptNH4BlueEpi;
aPLimBlueEpi = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueWEpi) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueEpi = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueWEpi) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueEpi = oSiO2WEpi /(hSiAssBlue + oSiO2WEpi);
aMuTmLBlueEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimBlueEpi * uMuMaxTmBlueEpi;
aNutLimBlueEpi = MIN(aPLimBlueEpi , (MIN(aNLimBlueEpi,aSiLimBlueEpi)));
aMuBlueEpi = aNutLimBlueEpi * aMuTmLBlueEpi;
wDAssBlueEpi = aMuBlueEpi*oDBlueWEpi;
aExtChBlueEpi = cExtSpBlue / rChDBlueEpi;
wDRespBlueWEpi = ukDRespTmBlueEpi * oDBlueWEpi;
wDLossBlueEpi = ukLossTmBlueEpi * oDBlueWEpi;
wDMortBlueWEpi = kMortBlueW * oDBlueWEpi;
ukDDecBlueEpi = ukDRespTmBlueEpi + ukLossTmBlueEpi + kMortBlueW +(uCorVSetBlueEpi * uFunTmSetEpi) / sDepthWEpi;
wPExcrBlueWEpi = (rPDBlueWEpi * 2.0 )/(cPDBlueMax + rPDBlueWEpi) * rPDBlueWEpi * wDRespBlueWEpi ;
wPLossBlueEpi = rPDBlueWEpi * wDLossBlueEpi;
wPMortBlueWEpi = kMortBlueW * oPBlueWEpi;
wNExcrBlueWEpi = (rNDBlueWEpi *2.0)/(cNDBlueMax + rNDBlueWEpi) * rNDBlueWEpi * wDRespBlueWEpi ;
wNLossBlueEpi = rNDBlueWEpi * wDLossBlueEpi;
wNMortBlueWEpi = kMortBlueW * oNBlueWEpi;
wDPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssBlueEpi - wDRespBlueWEpi - wDLossBlueEpi - wDMortBlueWEpi + (tDSetBlueSurf-tDFloBlueEpi + tDFloBlueHyp- tDSetBlueEpi ) / sDepthWEpi ELSE wDAssBlueEpi - wDRespBlueWEpi - wDLossBlueEpi - wDMortBlueWEpi + (tDResusBlue + tDSetBlueSurf - tDSetBlueEpi -  tDFloBlueEpi) / sDepthWEpi ENDIF;
wPPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wPUptBlueEpi - wPExcrBlueWEpi - wPLossBlueEpi - wPMortBlueWEpi+ (tPSetBlueSurf-tPFloBlueEpi + tPFloBlueHyp- tPSetBlueEpi ) / sDepthWEpi ELSE wPUptBlueEpi - wPExcrBlueWEpi - wPLossBlueEpi - wPMortBlueWEpi+ (tPResusBlue + tPSetBlueSurf - tPSetBlueEpi -  tPFloBlueEpi) / sDepthWEpi ENDIF;
wNPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptBlueEpi - wNExcrBlueWEpi - wNLossBlueEpi - wNMortBlueWEpi + (tNSetBlueSurf-tNFloBlueEpi + tNFloBlueHyp- tNSetBlueEpi ) / sDepthWEpi ELSE wNUptBlueEpi - wNExcrBlueWEpi - wNLossBlueEpi - wNMortBlueWEpi+ (tNResusBlue + tNSetBlueSurf - tNSetBlueEpi -  tNFloBlueEpi) / sDepthWEpi ENDIF;
ukDilSurf = ukDilEpi;
tDDilBlueSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * sDBlueSurf ENDIF;
tNDilBlueSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * sNBlueSurf ENDIF;
tPDilBlueSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * sPBlueSurf ENDIF;
tDLoadBlueSurf = 0.0;
tPLoadBlueSurf = 0.0;
tNLoadBlueSurf = 0.0;
tDTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE tDLoadBlueSurf - tDDilBlueSurf ENDIF;
tPTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE tPLoadBlueSurf - tPDilBlueSurf ENDIF;
tNTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE tNLoadBlueSurf - tNDilBlueSurf ENDIF;
uMuMaxTmBlueSurf = cMuMaxBlue * uFunTmProdBlueSurf;
aMuTmLBlueSurf = ufDay * aLLimBlueSurf * uMuMaxTmBlueSurf;
aPLimBlueSurf = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueSurf) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueSurf = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueSurf) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueSurf = oSiO2WEpi /(hSiAssBlue + oSiO2WEpi);
aNutLimBlueSurf = MIN(aPLimBlueSurf,MIN(aNLimBlueSurf,aSiLimBlueSurf));
aRepPLimBlue = (aPLimBlueSurf* sDBlueSurf + aPLimBlueEpi* sDBlueWEpi) / (sDBlueSurf + sDBlueWEpi);
aRepNLimBlue = (aNLimBlueSurf* sDBlueSurf + aNLimBlueEpi* sDBlueWEpi) / (sDBlueSurf + sDBlueWEpi);
aRepNutLimBlue = (aNutLimBlueSurf* sDBlueSurf + aNutLimBlueEpi* sDBlueWEpi) / (sDBlueSurf + sDBlueWEpi);
aMuBlueSurf = aNutLimBlueSurf * aMuTmLBlueSurf;
tDAssBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aMuBlueSurf * sDBlueSurf ENDIF;
aVNUptMaxCrBlueSurf = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueSurf * (cNDBlueMax - rNDBlueSurf) /(cNDBlueMax - cNDBlueMin));
aVPUptMaxCrBlueSurf = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueSurf *(cPDBlueMax - rPDBlueSurf) /(cPDBlueMax - cPDBlueMin));
ahNUptBlueSurf = aVNUptMaxCrBlueSurf / cAffNUptBlue;
aVNUptBlueSurf = oNDissWEpi * aVNUptMaxCrBlueSurf /(ahNUptBlueSurf + oNDissWEpi);
aVPUptBlueSurf = oPO4WEpi * aVPUptMaxCrBlueSurf /(aVPUptMaxCrBlueSurf / cAffPUptBlue + oPO4WEpi);
tNUptBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aVNUptBlueSurf * sDBlueSurf ENDIF;
aNfixBlueSurf = rNfixBlueSurf *aChlaBlueSurf /ugPerg;
tNUptBlueAirSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueSurf ENDIF;
tNUptBlueWSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclNfix EQ FALSE) THEN tNUptBlueSurf ELSE tNUptBlueSurf - tNUptBlueAirSurf ENDIF;
afNH4UptBlueSurf = oNH4WEpi * oNO3WEpi /((ahNUptBlueSurf + oNH4WEpi) *(ahNUptBlueSurf + oNO3WEpi)) + oNH4WEpi * ahNUptBlueSurf /((oNH4WEpi + oNO3WEpi) *(ahNUptBlueSurf + oNO3WEpi));
tNUptNH4BlueSurf = afNH4UptBlueSurf * tNUptBlueWSurf;
tNUptNO3BlueSurf = tNUptBlueWSurf - tNUptNH4BlueSurf;
tPUptBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aVPUptBlueSurf * sDBlueSurf ENDIF;
tDRespBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDRespTmBlueSurf *sDBlueSurf ENDIF;
tNExcrBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (rNDBlueSurf * 2.0 )/(cNDBlueMax + rNDBlueSurf) * rNDBlueSurf * tDRespBlueSurf ENDIF;
tPExcrBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (rPDBlueSurf * 2.0 )/(cPDBlueMax + rPDBlueSurf) * rPDBlueSurf * tDRespBlueSurf ENDIF;
tDMortBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * sDBlueSurf ENDIF;
tNMortBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * sNBlueSurf ENDIF;
wNMortBlueNH4WSurf = fDissMortPhyt * tNMortBlueSurf / sDepthWEpi;
wNMortBlueDetSurf = ( 1 -fDissMortPhyt) * tNMortBlueSurf / sDepthWEpi;
tPMortBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * sPBlueSurf ENDIF;
uFunTmLossSurf = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmSurf-cTmOptLoss)*(uTmSurf-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
ukLossTmBlueSurf = UseLoss * kLossBlue * uFunTmLossSurf;
tDLossBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukLossTmBlueSurf * sDBlueSurf ENDIF;
tPLossBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE rPDBlueSurf * tDLossBlueSurf ENDIF;
tNLossBlueSurf = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE rNDBlueSurf * tDLossBlueSurf ENDIF;
tDPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tDAssBlueSurf - tDRespBlueSurf + tDFloBlueEpi - tDSetBlueSurf- tDMortBlueSurf ENDIF;
tNPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tNUptBlueSurf - tNExcrBlueSurf  + tNFloBlueEpi - tNSetBlueSurf - tNMortBlueSurf ENDIF;
tPPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tPUptBlueSurf - tPExcrBlueSurf + tPFloBlueEpi - tPSetBlueSurf- tPMortBlueSurf ENDIF;
tDPrimBlueS = IF ( aInclStrat EQ FALSE) THEN tDSetBlueEpi - tDResusBlue - tDMortBlueS - tDRespBlueS ELSE tDSetBlueHyp - tDResusBlue - tDMortBlueS - tDRespBlueS ENDIF;
tPPrimBlueS = IF ( aInclStrat EQ FALSE) THEN tPSetBlueEpi - tPResusBlue - tPMortBlueS - tPExcrBlueS ELSE tPSetBlueHyp - tPResusBlue - tPMortBlueS - tPExcrBlueS ENDIF;
tNPrimBlueS = IF (aInclStrat EQ FALSE) THEN tNSetBlueEpi - tNResusBlue - tNMortBlueS - tNExcrBlueS ELSE tNSetBlueHyp - tNResusBlue - tNMortBlueS - tNExcrBlueS ENDIF;
aVPUptMaxCrGrenEpi = MAX(0.0,cVPUptMaxGren * uFunTmProdGrenEpi *(cPDGrenMax - rPDGrenWEpi) /(cPDGrenMax - cPDGrenMin));
aVPUptGrenEpi = oPO4WEpi * aVPUptMaxCrGrenEpi /(aVPUptMaxCrGrenEpi / cAffPUptGren + oPO4WEpi);
wPUptGrenEpi = aVPUptGrenEpi * oDGrenWEpi;
aVNUptMaxCrGrenEpi = MAX(0.0,cVNUptMaxGren * uFunTmProdGrenEpi * (cNDGrenMax - rNDGrenWEpi) /(cNDGrenMax - cNDGrenMin));
ahNUptGrenEpi = aVNUptMaxCrGrenEpi / cAffNUptGren;
aVNUptGrenEpi = oNDissWEpi * aVNUptMaxCrGrenEpi /(ahNUptGrenEpi + oNDissWEpi);
wNUptGrenEpi = aVNUptGrenEpi * oDGrenWEpi;
afNH4UptGrenEpi = oNH4WEpi * oNO3WEpi /((ahNUptGrenEpi + oNH4WEpi) *(ahNUptGrenEpi + oNO3WEpi)) + oNH4WEpi * ahNUptGrenEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptGrenEpi + oNO3WEpi));
wNUptNH4GrenEpi = afNH4UptGrenEpi * wNUptGrenEpi;
wNUptNO3GrenEpi = wNUptGrenEpi - wNUptNH4GrenEpi;
aPLimGrenEpi = MAX(0.0,(1.0 - cPDGrenMin / rPDGrenWEpi) * cPDGrenMax /(cPDGrenMax - cPDGrenMin));
aNLimGrenEpi = MAX(0.0,(1.0 - cNDGrenMin / rNDGrenWEpi) * cNDGrenMax /(cNDGrenMax - cNDGrenMin));
aSiLimGrenEpi = oSiO2WEpi /(hSiAssGren + oSiO2WEpi);
aLLimGrenEpi = UseSteeleGren *(EXP(1.0) /(aExtCoefEpi * sDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefGren * uFunTmProdGrenEpi)) - EXP(- aLPARBotSurf /(cLOptRefGren * uFunTmProdGrenEpi)))) +(1.0 - UseSteeleGren) *(1.0 /(aExtCoefEpi * sDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefGren * uFunTmProdGrenEpi)) / (1.0 + aLPARBotEpi /(hLRefGren * uFunTmProdGrenEpi))));
aMuTmLGrenEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimGrenEpi * uMuMaxTmGrenEpi;
aNutLimGrenEpi = MIN(aPLimGrenEpi , (MIN(aNLimGrenEpi,aSiLimGrenEpi)));
aMuGrenEpi = aNutLimGrenEpi * aMuTmLGrenEpi;
wDAssGrenEpi = aMuGrenEpi*oDGrenWEpi;
rChDGrenEpi = cChDGrenMax -(cChDGrenMax - cChDGrenMin) * aLLimGrenEpi;
oChlaGrenEpi = mgPerg * rChDGrenEpi * oDGrenWEpi;
aExtChGrenEpi = cExtSpGren / rChDGrenEpi;
wDRespGrenWEpi = ukDRespTmGrenEpi * oDGrenWEpi;
wDLossGrenEpi = ukLossTmGrenEpi * oDGrenWEpi;
wDMortGrenWEpi = kMortGrenW * oDGrenWEpi;
ukDDecGrenEpi = ukDRespTmGrenEpi + ukLossTmGrenEpi + kMortGrenW +(uCorVSetGrenEpi * uFunTmSetEpi) / sDepthWEpi;
wPExcrGrenWEpi = (2.0 *rPDGrenWEpi) /(cPDGrenMax + rPDGrenWEpi) * rPDGrenWEpi * wDRespGrenWEpi ;
wPLossGrenEpi = rPDGrenWEpi * wDLossGrenEpi;
wPMortGrenWEpi = kMortGrenW * oPGrenWEpi;
wNExcrGrenWEpi = (2.0 * rNDGrenWEpi) /(cNDGrenMax + rNDGrenWEpi) * rNDGrenWEpi * wDRespGrenWEpi;
wNLossGrenEpi = rNDGrenWEpi * wDLossGrenEpi;
wNMortGrenWEpi = kMortGrenW * oNGrenWEpi;
wDPrimGrenWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssGrenEpi - wDRespGrenWEpi - wDLossGrenEpi - wDMortGrenWEpi -(tDSetGrenEpi ) / sDepthWEpi ELSE wDAssGrenEpi - wDRespGrenWEpi - wDLossGrenEpi - wDMortGrenWEpi -(tDSetGrenEpi - tDResusGren) / sDepthWEpi ENDIF;
wPPrimGrenWEpi =IF (aInclStrat EQ TRUE ) THEN wPUptGrenEpi - wPExcrGrenWEpi - wPLossGrenEpi - wPMortGrenWEpi -(tPSetGrenEpi ) / sDepthWEpi ELSE wPUptGrenEpi - wPExcrGrenWEpi - wPLossGrenEpi - wPMortGrenWEpi -(tPSetGrenEpi - tPResusGren) / sDepthWEpi ENDIF;
wNPrimGrenWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptGrenEpi - wNExcrGrenWEpi - wNLossGrenEpi - wNMortGrenWEpi -(tNSetGrenEpi ) / sDepthWEpi ELSE wNUptGrenEpi - wNExcrGrenWEpi - wNLossGrenEpi - wNMortGrenWEpi -(tNSetGrenEpi - tNResusGren) / sDepthWEpi ENDIF;
tDPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tDSetGrenEpi - tDResusGren - tDMortGrenS - tDRespGrenS ELSE tDSetGrenHyp - tDResusGren - tDMortGrenS - tDRespGrenS ENDIF;
tPPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tPSetGrenEpi - tPResusGren - tPMortGrenS - tPExcrGrenS ELSE tPSetGrenHyp - tPResusGren - tPMortGrenS - tPExcrGrenS ENDIF;
tNPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tNSetGrenEpi - tNResusGren - tNMortGrenS - tNExcrGrenS ELSE tNSetGrenHyp - tNResusGren - tNMortGrenS - tNExcrGrenS ENDIF;
aVPUptMaxCrDiatEpi = MAX(0.0,cVPUptMaxDiat * uFunTmProdDiatEpi *(cPDDiatMax - rPDDiatWEpi) /(cPDDiatMax - cPDDiatMin));
aVPUptDiatEpi = oPO4WEpi * aVPUptMaxCrDiatEpi /(aVPUptMaxCrDiatEpi / cAffPUptDiat + oPO4WEpi);
wPUptDiatEpi = aVPUptDiatEpi * oDDiatWEpi;
aVNUptMaxCrDiatEpi = MAX(0.0,cVNUptMaxDiat * uFunTmProdDiatEpi * (cNDDiatMax - rNDDiatWEpi) /(cNDDiatMax - cNDDiatMin));
ahNUptDiatEpi = aVNUptMaxCrDiatEpi / cAffNUptDiat;
aVNUptDiatEpi = oNDissWEpi * aVNUptMaxCrDiatEpi /(ahNUptDiatEpi + oNDissWEpi);
wNUptDiatEpi = aVNUptDiatEpi * oDDiatWEpi;
afNH4UptDiatEpi = oNH4WEpi * oNO3WEpi /((ahNUptDiatEpi + oNH4WEpi) *(ahNUptDiatEpi + oNO3WEpi)) + oNH4WEpi * ahNUptDiatEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptDiatEpi + oNO3WEpi));
wNUptNH4DiatEpi = afNH4UptDiatEpi * wNUptDiatEpi;
wNUptNO3DiatEpi = wNUptDiatEpi - wNUptNH4DiatEpi;
aPLimDiatEpi = MAX(0.0,(1.0 - cPDDiatMin / rPDDiatWEpi) * cPDDiatMax /(cPDDiatMax - cPDDiatMin));
aNLimDiatEpi = MAX(0.0,(1.0 - cNDDiatMin / rNDDiatWEpi) * cNDDiatMax /(cNDDiatMax - cNDDiatMin));
aSiLimDiatEpi = oSiO2WEpi /(hSiAssDiat + oSiO2WEpi);
aLLimDiatEpi = UseSteeleDiat *(EXP(1.0) /(aExtCoefEpi * sDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefDiat * uFunTmProdDiatEpi)) - EXP(- aLPARBotSurf /(cLOptRefDiat * uFunTmProdDiatEpi)))) +(1.0 - UseSteeleDiat) *(1.0 /(aExtCoefEpi * sDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefDiat * uFunTmProdDiatEpi)) / (1.0 + aLPARBotEpi /(hLRefDiat * uFunTmProdDiatEpi))));
aMuTmLDiatEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimDiatEpi * uMuMaxTmDiatEpi;
aNutLimDiatEpi = MIN(aPLimDiatEpi , (MIN(aNLimDiatEpi,aSiLimDiatEpi)));
aMuDiatEpi = aNutLimDiatEpi * aMuTmLDiatEpi;
wDAssDiatEpi = aMuDiatEpi*oDDiatWEpi;
rChDDiatEpi = cChDDiatMax -(cChDDiatMax - cChDDiatMin) * aLLimDiatEpi;
oChlaDiatEpi = mgPerg * rChDDiatEpi * oDDiatWEpi;
aExtChDiatEpi = cExtSpDiat / rChDDiatEpi;
wDRespDiatWEpi = ukDRespTmDiatEpi * oDDiatWEpi;
wDLossDiatEpi = ukLossTmDiatEpi * oDDiatWEpi;
wDMortDiatWEpi = kMortDiatW * oDDiatWEpi;
ukDDecDiatEpi = ukDRespTmDiatEpi + ukLossTmDiatEpi + kMortDiatW +(uCorVSetDiatEpi * uFunTmSetEpi) / sDepthWEpi;
wPExcrDiatWEpi = (2.0 * rPDDiatWEpi) /(cPDDiatMax + rPDDiatWEpi) * rPDDiatWEpi * wDRespDiatWEpi ;
wPLossDiatEpi = rPDDiatWEpi * wDLossDiatEpi;
wPMortDiatWEpi = kMortDiatW * oPDiatWEpi;
wNExcrDiatWEpi = (2.0 * rNDDiatWEpi) /(cNDDiatMax + rNDDiatWEpi) * rNDDiatWEpi * wDRespDiatWEpi ;
wNLossDiatEpi = rNDDiatWEpi * wDLossDiatEpi;
wNMortDiatWEpi = kMortDiatW * oNDiatWEpi;
wDPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssDiatEpi - wDRespDiatWEpi - wDLossDiatEpi - wDMortDiatWEpi -(tDSetDiatEpi ) / sDepthWEpi ELSE wDAssDiatEpi - wDRespDiatWEpi - wDLossDiatEpi - wDMortDiatWEpi -(tDSetDiatEpi - tDResusDiat) / sDepthWEpi ENDIF;
wPPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wPUptDiatEpi - wPExcrDiatWEpi - wPLossDiatEpi - wPMortDiatWEpi -(tPSetDiatEpi ) / sDepthWEpi ELSE wPUptDiatEpi - wPExcrDiatWEpi - wPLossDiatEpi - wPMortDiatWEpi -(tPSetDiatEpi - tPResusDiat) / sDepthWEpi ENDIF;
wNPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptDiatEpi - wNExcrDiatWEpi - wNLossDiatEpi - wNMortDiatWEpi -(tNSetDiatEpi ) / sDepthWEpi ELSE wNUptDiatEpi - wNExcrDiatWEpi - wNLossDiatEpi - wNMortDiatWEpi -(tNSetDiatEpi - tNResusDiat) / sDepthWEpi ENDIF;
tDPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tDSetDiatEpi - tDResusDiat - tDMortDiatS - tDRespDiatS ELSE tDSetDiatHyp - tDResusDiat - tDMortDiatS - tDRespDiatS ENDIF;
tPPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tPSetDiatEpi - tPResusDiat - tPMortDiatS - tPExcrDiatS ELSE tPSetDiatHyp - tPResusDiat - tPMortDiatS - tPExcrDiatS ENDIF;
tNPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tNSetDiatEpi - tNResusDiat - tNMortDiatS - tNExcrDiatS ELSE tNSetDiatHyp - tNResusDiat - tNMortDiatS - tNExcrDiatS ENDIF;
oChlaEpi = oChlaDiatEpi + oChlaGrenEpi + oChlaBlueEpi;
oChla = IF ( aInclStrat EQ TRUE ) THEN (oChlaEpi * sDepthWEpi + oChlaHyp * sDepthWHyp + aChlaBlueSurf) / uDepthW ELSE (oChlaEpi * sDepthWEpi+ aChlaBlueSurf ) / uDepthW ENDIF;
oChlaW = IF ( aInclStrat EQ TRUE ) THEN (oChlaEpi * sDepthWEpi + oChlaHyp * sDepthWHyp) / uDepthW ELSE (oChlaEpi * sDepthWEpi) / uDepthW ENDIF;
aChlaH = oChla * uDepthW;
aLPIEpi =  (aLPARBotSurf- aLPARBotEpiOpen + uhLVeg* LN((1.0 +aLPARBotEpiOpen/ uhLVeg)  /(1.0 + aLPARBotSurf  / uhLVeg) + NearZero  ) ) / sDepthWEpi;
aLPIHyp =  (aLPARBotEpi- aLPARBotHypOpen + uhLVeg* LN((1.0 +aLPARBotHypOpen/ uhLVeg)  /(1.0 + aLPARBotEpi  / uhLVeg) + NearZero  ) ) / sDepthWHyp;
aLMeasEpi = aLPARBotSurf * EXP(- aExtCoefOpenEpi *cDepthMeasoChl);
aLMeasHyp = aLPARBotEpi * EXP(- aExtCoefOpenHyp * (cDepthMeasoChl -  sDepthWEpi));
aLPAREupho = PerCent * uLPARSurf;
oChlaMeasEpi = (aLMeasEpi  )/ aLPIEpi *oChlaEpi;
oChlaMeasHyp =  (aLMeasHyp  )/ aLPIHyp *oChlaHyp;
oChlaMeasW = IF (aLPARBotSurf LT aLPAREupho) THEN (IF (cDepthMeasoChl LT sDepthWEpi) THEN oChlaEpi ELSE oChlaHyp ENDIF) ELSE (IF (cDepthMeasoChl LT sDepthWEpi) THEN oChlaMeasEpi ELSE oChlaMeasHyp ENDIF) ENDIF;
wDAssPhytEpi = wDAssDiatEpi + wDAssGrenEpi + wDAssBlueEpi;
wDRespPhytWEpi = wDRespDiatWEpi + wDRespGrenWEpi + wDRespBlueWEpi;
wDMortPhytWEpi = wDMortDiatWEpi + wDMortGrenWEpi + wDMortBlueWEpi;
tDSetPhytEpi = tDSetDiatEpi + tDSetGrenEpi + tDSetBlueEpi;
wDLossPhytEpi = wDLossDiatEpi + wDLossGrenEpi + wDLossBlueEpi + tDLossBlueSurf / sDepthWEpi;
wDPrimPhytWEpi = wDPrimDiatWEpi + wDPrimGrenWEpi + wDPrimBlueWEpi;
wPUptPhytEpi = wPUptDiatEpi + wPUptGrenEpi + wPUptBlueEpi;
wPExcrPhytWEpi = wPExcrDiatWEpi + wPExcrGrenWEpi + wPExcrBlueWEpi;
wPMortPhytWEpi = wPMortDiatWEpi + wPMortGrenWEpi + wPMortBlueWEpi;
tPSetPhytEpi = tPSetDiatEpi + tPSetGrenEpi + tPSetBlueEpi;
wPLossPhytEpi = wPLossDiatEpi + wPLossGrenEpi + wPLossBlueEpi + tPLossBlueSurf / sDepthWEpi;
wPPrimPhytWEpi = wPPrimDiatWEpi + wPPrimGrenWEpi + wPPrimBlueWEpi;
wNUptPhytEpi = wNUptDiatEpi + wNUptGrenEpi + wNUptBlueEpi;
wNUptNH4PhytEpi = wNUptNH4DiatEpi + wNUptNH4GrenEpi + wNUptNH4BlueEpi;
wNUptNO3PhytEpi = wNUptNO3DiatEpi + wNUptNO3GrenEpi + wNUptNO3BlueEpi;
wNExcrPhytWEpi = wNExcrDiatWEpi + wNExcrGrenWEpi + wNExcrBlueWEpi;
wNMortPhytWEpi = wNMortDiatWEpi + wNMortGrenWEpi + wNMortBlueWEpi;
tNSetPhytEpi = tNSetDiatEpi + tNSetGrenEpi + tNSetBlueEpi;
wNLossPhytEpi = wNLossDiatEpi + wNLossGrenEpi + wNLossBlueEpi + tNLossBlueSurf / sDepthWEpi;
wNPrimPhytWEpi = wNPrimDiatWEpi + wNPrimGrenWEpi + wNPrimBlueWEpi;
tDPrimPhytS = tDPrimDiatS + tDPrimGrenS + tDPrimBlueS;
tPPrimPhytS = tPPrimDiatS + tPPrimGrenS + tPPrimBlueS;
tNPrimPhytS = tNPrimDiatS + tNPrimGrenS + tNPrimBlueS;
wSiUptDiatEpi = cSiDDiat * wDAssDiatEpi;
wSiExcrDiatWEpi = cSiDDiat * wDRespDiatWEpi ;
wSiLossDiatEpi = cSiDDiat * wDLossDiatEpi;
wSiMortDiatWEpi = cSiDDiat * wDMortDiatWEpi;
tSiSetDiatEpi = cSiDDiat * tDSetDiatEpi;
wSiPrimDiatWHyp = IF (aInclStrat EQ TRUE ) THEN wSiUptDiatHyp - tSiSetDiatHyp / sDepthWHyp - wSiExcrDiatWHyp - wSiMortDiatWHyp - wSiLossDiatHyp ELSE 0.0 ENDIF;
wSiPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wSiUptDiatEpi - tSiSetDiatEpi / sDepthWEpi - wSiExcrDiatWEpi - wSiMortDiatWEpi - wSiLossDiatEpi ELSE wSiUptDiatEpi - tSiSetDiatEpi / sDepthWEpi - wSiExcrDiatWEpi - wSiMortDiatWEpi - wSiLossDiatEpi + tSiResusDiat / sDepthWEpi ENDIF;
rCyDBlueEpi = cCyDBlueMax -(cCyDBlueMax - cCyDBlueMin) * aLLimBlueEpi;
oCyanEpi = rCyDBlueEpi * oDBlueWEpi * mgPerg;
fDDiatEpi = oDDiatWEpi /(oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + NearZero);
wDPrimDetWEpi = IF (InclSurf EQ TRUE) THEN wDMortPhytWEpi + wDLossPhytEpi + tDMortBlueSurf / sDepthWEpi ELSE wDMortPhytWEpi + wDLossPhytEpi ENDIF;
tDPrimDetS = tDMortPhytS;
tDPrimTotW = (wDPrimDetWHyp + wDPrimDiatWHyp + wDPrimGrenWHyp+ wDPrimBlueWHyp) * sDepthWHyp+ (wDPrimDetWEpi + wDPrimDiatWEpi + wDPrimGrenWEpi+ wDPrimBlueWEpi) * sDepthWEpi;
tDPrimTotWEpi = (wDPrimDetWEpi + wDPrimDiatWEpi + wDPrimGrenWEpi + wDPrimBlueWEpi) * sDepthWEpi;
tDPrimTotWHyp = (wDPrimDetWHyp + wDPrimDiatWHyp + wDPrimGrenWHyp + wDPrimBlueWHyp) * sDepthWHyp;
tDPrimTotS = tDPrimDetS + tDPrimDiatS + tDPrimGrenS + tDPrimBlueS;
tDPrimTotSurf = IF (InclSurf EQ TRUE) THEN tDAssBlueSurf - tDRespBlueSurf ELSE 0.0 ENDIF;
tDPrimTotT = IF (aInclStrat EQ FALSE ) THEN(wDAssPhytEpi - wDRespPhytWEpi) * sDepthWEpi - tDRespPhytS + tDPrimTotSurf ELSE (wDAssPhytEpi - wDRespPhytWEpi) * sDepthWEpi + (wDAssPhytHyp - wDRespPhytWHyp) * sDepthWHyp - tDRespPhytS + tDPrimTotSurf ENDIF;
wO2ProdPhytEpi = molO2molC * cCPerDW * wDAssPhytEpi;
wO2RespPhytWEpi = molO2molC * cCPerDW * wDRespPhytWEpi * aCorO2BODEpi;
wO2UptNO3PhytEpi = O2PerNO3 * molO2molN * wNUptNO3PhytEpi;
wO2PrimWEpi = wO2ProdPhytEpi - wO2RespPhytWEpi + wO2UptNO3PhytEpi;
tO2RespPhytS = molO2molC * cCPerDW * tDRespPhytS * afOxySed;
tO2PrimS = tO2RespPhytS;
tO2PrimSHyp = IF aInclStrat EQ TRUE THEN tO2PrimS / sDepthWHyp ELSE 0.0 ENDIF;
tO2PrimSEpi = IF aInclStrat EQ FALSE THEN tO2PrimS / sDepthWEpi ELSE 0.0 ENDIF;
wPMortBluePO4WSurf = fDissMortPhyt * tPMortBlueSurf / sDepthWEpi;
wPMortBlueDetSurf = ( 1 -fDissMortPhyt) * tPMortBlueSurf / sDepthWEpi;
wPMortPhytPO4WEpi = fDissMortPhyt * wPMortPhytWEpi;
wPMortPhytDetWEpi = wPMortPhytWEpi - wPMortPhytPO4WEpi + wPMortBlueDetSurf;
wPLossPhytPO4Epi = fDissLoss * wPLossPhytEpi;
wPLossPhytDetEpi = wPLossPhytEpi - wPLossPhytPO4Epi;
wPPrimPO4WEpi = - wPUptPhytEpi + wPExcrPhytWEpi + wPLossPhytPO4Epi + wPMortPhytPO4WEpi - tPUptBlueSurf / sDepthWEpi + tPExcrBlueSurf / sDepthWEpi + wPMortBluePO4WSurf;
wPPrimDetWEpi = wPLossPhytDetEpi + wPMortPhytDetWEpi;
tPPrimDetS = tPMortPhytDetS ;
wNMortPhytNH4WEpi = fDissMortPhyt * wNMortPhytWEpi;
wNMortPhytDetWEpi = wNMortPhytWEpi - wNMortPhytNH4WEpi+ wNMortBlueDetSurf;
wNLossPhytNH4Epi = fDissLoss * wNLossPhytEpi;
wNLossPhytDetEpi = wNLossPhytEpi - wNLossPhytNH4Epi;
wNPrimNH4WEpi = - wNUptNH4PhytEpi + wNExcrPhytWEpi + wNLossPhytNH4Epi + wNMortPhytNH4WEpi- tNUptNH4BlueSurf / sDepthWEpi + tNExcrBlueSurf / sDepthWEpi + wNMortBlueNH4WSurf;
wNPrimNO3WEpi = - wNUptNO3PhytEpi - tNUptNO3BlueSurf / sDepthWEpi;
wNPrimDetWEpi = wNLossPhytDetEpi + wNMortPhytDetWEpi;
tNPrimDetS = tNMortPhytDetS ;
tNPrimTotW = (wNPrimNH4WHyp + wNPrimNO3WHyp + wNPrimDetWHyp +  wNPrimDiatWHyp + wNPrimGrenWHyp + wNPrimBlueWHyp)* sDepthWHyp + (wNPrimNH4WEpi + wNPrimNO3WEpi + wNPrimDetWEpi+ wNPrimDiatWEpi + wNPrimGrenWEpi + wNPrimBlueWEpi) * sDepthWEpi;
tNPrimTotS = tNPrimNH4S + tNPrimNO3S + tNPrimDetS + tNPrimDiatS + tNPrimGrenS + tNPrimBlueS;
wSiPrimSiO2WEpi = IF (aInclStrat EQ FALSE) THEN wSiExcrDiatWEpi - wSiUptDiatEpi + tSiExcrDiatS / sDepthWEpi ELSE wSiExcrDiatWEpi - wSiUptDiatEpi ENDIF;
wSiPrimDetWEpi = wSiMortDiatWEpi + wSiLossDiatEpi;
tSiPrimDiatS = IF (aInclStrat EQ FALSE) THEN tSiSetDiatEpi - tSiResusDiat - tSiExcrDiatS - tSiMortDiatS ELSE tSiSetDiatHyp - tSiResusDiat - tSiExcrDiatS - tSiMortDiatS ENDIF;
tSiPrimDetS = tSiMortDiatS ;
aDepthEuphEpi = cEuph * aSecchiEpi;
aRelDepthEuphEpi = aDepthEuphEpi / sDepthWEpi;
aChlaHEpi = oChlaEpi * sDepthWEpi;
aCovPhytWEpi = cCovSpPhyt *(oDPhytWEpi * sDepthWEpi);
rExtChPhytEpi = aExtPhytEpi /(oChlaEpi / mgPerg + NearZero);
rPDZooEpi = oPZooEpi /(oDZooEpi+NearZero);
rNDZooEpi = oNZooEpi/(oDZooEpi+NearZero);
aDFoodZooEpi =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat * sDDiatWEpi + cPrefGren * sDGrenWEpi + cPrefBlue * sDBlueWEpi + cPrefDet * sDDetWEpi ELSE cPrefDiat * sDDiatWEpi + cPrefGren * sDGrenWEpi + cPrefBlue * sDBlueWEpi + cPrefBlueSurf * sDBlueSurf + cPrefDet * sDDetWEpi ENDIF;
oDFoodZooEpi = aDFoodZooEpi / sDepthWEpi;
aFiltEpi = cFiltMax * uFunTmZooEpi * hFilt /(hFilt + oDOMWEpi);
aDSatZooEpi = oDFoodZooEpi /(hFilt + oDOMWEpi);
wDEnvZooEpi = MAX(0.0,ukDIncrZooEpi / cDCarrZoo * oDZooEpi*oDZooEpi);
wDAssZooEpi = aDSatZooEpi *(ukDAssTmZooEpi * oDZooEpi - wDEnvZooEpi);
wDConsZooEpi = wDAssZooEpi / fDAssZoo;
wDConsDetZooEpi = cPrefDet*oDDetWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsDiatZooEpi = cPrefDiat*oDDiatWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsGrenZooEpi = cPrefGren*oDGrenWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsBlueZooEpi = cPrefBlue*oDBlueWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsBlueZooSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE cPrefBlueSurf *sDBlueSurf / aDFoodZooEpi * wDConsZooEpi ENDIF;
tDConsBlueZooSurf =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE wDConsBlueZooSurf *sDepthWEpi ENDIF;
wDConsPhytZooEpi = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN wDConsDiatZooEpi + wDConsGrenZooEpi + wDConsBlueZooEpi ELSE wDConsDiatZooEpi + wDConsGrenZooEpi + wDConsBlueZooEpi + wDConsBlueZooSurf ENDIF;
wDEgesZooEpi = wDConsZooEpi - wDAssZooEpi;
aCorDRespZooEpi = MAX(cPDZooRef / rPDZooEpi,cNDZooRef / rNDZooEpi);
wDRespZooEpi = aCorDRespZooEpi * ukDRespTmZooEpi * oDZooEpi;
wDMortZooEpi = kMortZoo * oDZooEpi +(1.0 - aDSatZooEpi) * wDEnvZooEpi;
aPFoodZooEpi = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat*sPDiatWEpi + cPrefGren*sPGrenWEpi + cPrefBlue * sPBlueWEpi  + cPrefDet * sPDetWEpi ELSE cPrefDiat*sPDiatWEpi + cPrefGren*sPGrenWEpi + cPrefBlue*sPBlueWEpi + cPrefBlueSurf *sPBlueSurf + cPrefDet * sPDetWEpi ENDIF;
oPFoodZooEpi = aPFoodZooEpi / MassEpi;
rPDFoodZooEpi = oPFoodZooEpi /(oDFoodZooEpi+NearZero);
wPConsDiatZooEpi = rPDDiatWEpi * wDConsDiatZooEpi;
wPConsGrenZooEpi = rPDGrenWEpi * wDConsGrenZooEpi;
wPConsBlueZooEpi = rPDBlueWEpi * wDConsBlueZooEpi;
wPConsBlueZooSurf = rPDBlueSurf * wDConsBlueZooSurf;
tPConsBlueZooSurf = wPConsBlueZooSurf *sDepthWEpi;
wPConsPhytZooEpi = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN wPConsDiatZooEpi + wPConsGrenZooEpi + wPConsBlueZooEpi ELSE wPConsDiatZooEpi + wPConsGrenZooEpi + wPConsBlueZooEpi + wPConsBlueZooSurf ENDIF;
wPConsDetZooEpi = rPDDetWEpi * wDConsDetZooEpi;
wPConsZooEpi = wPConsPhytZooEpi + wPConsDetZooEpi;
afPAssZooEpi = MIN(1.0,cPDZooRef / rPDFoodZooEpi * fDAssZoo);
wPAssZooEpi = afPAssZooEpi * wPConsZooEpi;
wPEgesZooEpi = wPConsZooEpi - wPAssZooEpi;
wPEgesZooPO4Epi = fDissEgesZoo*wPEgesZooEpi;
wPEgesZooDetEpi = wPEgesZooEpi - wPEgesZooPO4Epi;
akPExcrZooEpi = rPDZooEpi / cPDZooRef * kDRespZoo * uFunTmZooEpi;
wPExcrZooEpi = akPExcrZooEpi*oPZooEpi ;
wPMortZooEpi = rPDZooEpi * wDMortZooEpi;
wPMortZooPO4Epi = fDissMortZoo * wPMortZooEpi;
wPMortZooDetEpi = wPMortZooEpi - wPMortZooPO4Epi;
aNFoodZooEpi =  IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat*sNDiatWEpi + cPrefGren*sNGrenWEpi + cPrefBlue*sNBlueWEpi + cPrefDet * sNDetWEpi ELSE cPrefDiat*sNDiatWEpi + cPrefGren*sNGrenWEpi + cPrefBlue*sNBlueWEpi + cPrefBlueSurf*sNBlueSurf + cPrefDet * sNDetWEpi ENDIF;
oNFoodZooEpi = aNFoodZooEpi / MassEpi;
rNDFoodZooEpi = oNFoodZooEpi /(oDFoodZooEpi+NearZero);
wNConsDiatZooEpi = rNDDiatWEpi*wDConsDiatZooEpi;
wNConsGrenZooEpi = rNDGrenWEpi*wDConsGrenZooEpi;
wNConsBlueZooEpi = rNDBlueWEpi*wDConsBlueZooEpi;
wNConsBlueZooSurf = rNDBlueSurf * wDConsBlueZooSurf;
tNConsBlueZooSurf = wNConsBlueZooSurf *sDepthWEpi;
wNConsPhytZooEpi = IF (InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN  wNConsDiatZooEpi + wNConsGrenZooEpi + wNConsBlueZooEpi ELSE wNConsDiatZooEpi + wNConsGrenZooEpi + wNConsBlueZooEpi + wNConsBlueZooSurf ENDIF;
wNConsDetZooEpi = rNDDetWEpi*wDConsDetZooEpi;
wNConsZooEpi = wNConsPhytZooEpi + wNConsDetZooEpi;
afNAssZooEpi = MIN(1.0,cNDZooRef / rNDFoodZooEpi * fDAssZoo);
wNAssZooEpi = afNAssZooEpi*wNConsZooEpi;
wNEgesZooEpi = wNConsZooEpi - wNAssZooEpi;
wNEgesZooNH4Epi = fDissEgesZoo*wNEgesZooEpi;
wNEgesZooDetEpi = wNEgesZooEpi - wNEgesZooNH4Epi;
kNExcrZooEpi = rNDZooEpi / cNDZooRef * kDRespZoo * uFunTmZooEpi;
wNExcrZooEpi = kNExcrZooEpi*oNZooEpi ;
wNMortZooEpi = rNDZooEpi*wDMortZooEpi;
wNMortZooNH4Epi = fDissMortZoo*wNMortZooEpi;
wNMortZooDetEpi = wNMortZooEpi - wNMortZooNH4Epi;
wSiConsDiatZooEpi = cSiDDiat * wDConsDiatZooEpi;
rPDFiJv = sPFiJv /(sDFiJv+NearZero);
rPDFiAd = sPFiAd /(sDFiAd+NearZero);
rNDFiJv = sNFiJv /(sDFiJv+NearZero);
rNDFiAd = sNFiAd /(sDFiAd+NearZero);
tDReprFish = IF (FALSE EQ InclSeason) THEN ((1/DaysInYear)*fReprFish) * sDFiAd ELSEIF (Day GE cDayReprFish AND Day LT cDayReprFish + 1.0) THEN fReprFish * sDFiAd * PerDay ELSE 0.0 ENDIF;
tDAgeFish = IF (FALSE EQ InclSeason) THEN ((1/DaysInYear)*fAgeFish) * sDFiJv ELSEIF (Day GE 364.0) THEN fAgeFish * sDFiJv *PerDay ELSE 0.0 ENDIF;
aDTotZoo = IF (aInclStrat EQ FALSE) THEN oDZooEpi * sDepthWEpi ELSE oDZooEpi * sDepthWEpi + oDZooHyp * sDepthWHyp ENDIF;
aPTotZoo = IF (aInclStrat EQ FALSE) THEN oPZooEpi * sDepthWEpi ELSE oPZooEpi * sDepthWEpi + oPZooHyp * sDepthWHyp ENDIF;
aNTotZoo = IF (aInclStrat EQ FALSE) THEN oNZooEpi * sDepthWEpi ELSE oNZooEpi * sDepthWEpi + oNZooHyp * sDepthWHyp ENDIF;
aDSatFiJv = aDTotZoo * aDTotZoo /(hDZooFiJv * hDZooFiJv + aDTotZoo * aDTotZoo);
tDEnvFiJv = MAX(0.0,ukDIncrFiJv /(cDCarrFish - sDFiAd) * sDFiJv*sDFiJv);
tDAssFiJv = aDSatFiJv *(kDAssFiJv * uFunTmFish * sDFiJv - tDEnvFiJv);
tDConsFiJv = tDAssFiJv / fDAssFiJv;
tDEgesFiJv = tDConsFiJv - tDAssFiJv;
tDRespFiJv = (cPDFishRef / rPDFiJv) * kDRespFiJv * uFunTmFish * sDFiJv;
tDMortFiJv = kMortFiJv * sDFiJv +(1.0 - aDSatFiJv) * tDEnvFiJv;
tDMigrFiJv = kMigrFish *(cDFiJvIn - sDFiJv);
tDEnvFiAd = MAX(0.0,ukDIncrFiAd /(cDCarrFish - sDFiJv) * sDFiAd*sDFiAd);
tDAssFiAd = aDSatFiAd *(kDAssFiAd * uFunTmFish * sDFiAd - tDEnvFiAd);
tDConsFiAd = tDAssFiAd / fDAssFiAd;
tDEgesFiAd = tDConsFiAd - tDAssFiAd;
tDRespFiAd = (cPDFishRef / rPDFiAd) * kDRespFiAd * uFunTmFish * sDFiAd;
tDMortFiAd = kMortFiAd * sDFiAd +(1.0 - aDSatFiAd) * tDEnvFiAd;
tDHarvFish = ukHarvFish * sDFiAd;
tDMigrFiAd = kMigrFish *(cDFiAdIn - sDFiAd);
tDMortFiJvBot = fDBone * tDMortFiJv;
tDMortFiJvDet = tDMortFiJv - tDMortFiJvBot;
tDMortFiAdBot = fDBone * tDMortFiAd;
tDMortFiAdDet = tDMortFiAd - tDMortFiAdBot;
tPReprFish = rPDFiAd * tDReprFish;
tPAgeFish = rPDFiJv * tDAgeFish;
tPMigrFiJv = kMigrFish *(cPDFishRef * cDFiJvIn - sPFiJv);
tPConsFiJv = rPDZooEpi * tDConsFiJv;
afPAssFiJv = MIN(1.0,cPDFishRef / rPDZooEpi * fDAssFiJv);
tPAssFiJv = afPAssFiJv * tPConsFiJv;
tPEgesFiJv = tPConsFiJv - tPAssFiJv;
tPExcrFiJv = (rPDFiJv / cPDFishRef) * kDRespFiJv * uFunTmFish * sPFiJv;
tPMortFiJv = rPDFiJv * tDMortFiJv;
tPMigrFiAd = kMigrFish *(cPDFishRef * cDFiAdIn - sPFiAd);
tPConsFiAd = rPDBent * tDConsFiAd;
tPAssFiAd = afPAssFiAd * tPConsFiAd;
tPEgesFiAd = tPConsFiAd - tPAssFiAd;
tPExcrFiAd = (rPDFiAd / cPDFishRef) * kDRespFiAd * uFunTmFish * sPFiAd;
tPMortFiAd = rPDFiAd * tDMortFiAd;
tPHarvFish = rPDFiAd * tDHarvFish;
tPMortFiJvBot = fPBone * tPMortFiJv;
tPMortFiJvPO4 = fDissMortFish *(tPMortFiJv - tPMortFiJvBot);
tPMortFiJvDet = tPMortFiJv - tPMortFiJvBot - tPMortFiJvPO4;
tPMortFiAdBot = fPBone * tPMortFiAd;
tPMortFiAdPO4 = fDissMortFish *(tPMortFiAd - tPMortFiAdBot);
tPMortFiAdDet = tPMortFiAd - tPMortFiAdBot - tPMortFiAdPO4;
tPEgesFiJvPO4 = fDissEgesFish * tPEgesFiJv;
tPEgesFiJvDet = tPEgesFiJv - tPEgesFiJvPO4;
tPEgesFiAdPO4 = fDissEgesFish * tPEgesFiAd;
tPEgesFiAdDet = tPEgesFiAd - tPEgesFiAdPO4;
tNReprFish = rNDFiAd * tDReprFish;
tNAgeFish = rNDFiJv * tDAgeFish;
tNMigrFiJv = kMigrFish *(cNDFishRef * cDFiJvIn - sNFiJv);
tNConsFiJv = rNDZooEpi * tDConsFiJv;
afNAssFiJv = MIN(1.0,cNDFishRef / rNDZooEpi * fDAssFiJv);
tNAssFiJv = afNAssFiJv * tNConsFiJv;
tNEgesFiJv = tNConsFiJv - tNAssFiJv;
tNExcrFiJv = (rNDFiJv / cNDFishRef) * kDRespFiJv * uFunTmFish * sNFiJv;
tNMortFiJv = rNDFiJv * tDMortFiJv;
tNMigrFiAd = kMigrFish *(cNDFishRef * cDFiAdIn - sNFiAd);
tNConsFiAd = rNDBent * tDConsFiAd;
tNAssFiAd = afNAssFiAd * tNConsFiAd;
tNEgesFiAd = tNConsFiAd - tNAssFiAd;
tNExcrFiAd = (rNDFiAd / cNDFishRef) * kDRespFiAd * uFunTmFish * sNFiAd;
tNMortFiAd = rNDFiAd * tDMortFiAd;
tNHarvFish = rNDFiAd * tDHarvFish;
tNMortFiAdBot = fDBone * tNMortFiAd;
tNMortFiAdNH4 = fDissMortFish *(tNMortFiAd - tNMortFiAdBot);
tNMortFiAdDet = tNMortFiAd - tNMortFiAdBot - tNMortFiAdNH4;
tNMortFiJvBot = fDBone * tNMortFiJv;
tNMortFiJvNH4 = fDissMortFish *(tNMortFiJv - tNMortFiJvBot);
tNMortFiJvDet = tNMortFiJv - tNMortFiJvBot - tNMortFiJvNH4;
tNEgesFiJvNH4 = fDissEgesFish * tNEgesFiJv;
tNEgesFiJvDet = tNEgesFiJv - tNEgesFiJvNH4;
tDMigrPisc = kMigrPisc *(cDPiscIn - sDPisc);
aDFish = sDFiJv + sDFiAd;
aDSatPisc = aDFish*aDFish /(hDFishPisc*hDFishPisc + aDFish*aDFish);
tDEnvPisc = MAX(0.0,akDIncrPisc / aDCarrPisc * sDPisc*sDPisc);
tDAssPisc = aDSatPisc *(kDAssPisc * aFunVegPisc * uFunTmPisc * sDPisc - tDEnvPisc);
tDConsPisc = tDAssPisc / fDAssPisc;
tDEgesPisc = tDConsPisc - tDAssPisc;
tDConsFiJvPisc = sDFiJv / aDFish * tDConsPisc;
tDConsFiAdPisc = tDConsPisc - tDConsFiJvPisc;
tDRespPisc = kDRespPisc * uFunTmPisc * sDPisc;
tDMortPisc = kMortPisc * sDPisc +(1.0 - aDSatPisc) * tDEnvPisc;
tDMortPiscBot = fDBone * tDMortPisc;
tDMortPiscDet = tDMortPisc - tDMortPiscBot;
tDHarvPisc = ukHarvPisc * sDPisc;
aPPisc = cPDPisc * sDPisc;
tPConsFiJvPisc = rPDFiJv * tDConsFiJvPisc;
tPConsFiAdPisc = rPDFiAd * tDConsFiAdPisc;
tPConsPisc = tPConsFiJvPisc + tPConsFiAdPisc;
rPDFoodPisc = tPConsPisc / tDConsPisc;
afPAssPisc = MIN(1.0,cPDPisc / rPDFoodPisc * fDAssPisc);
tPAssPisc = afPAssPisc * tPConsPisc;
tPEgesPisc = tPConsPisc - tPAssPisc;
tPEgesPiscPO4 = fDissEgesPisc * tPEgesPisc;
tPEgesPiscDet = tPEgesPisc - tPEgesPiscPO4;
tPExcrPisc = cPDPisc * tDRespPisc;
tPMortPisc = cPDPisc * tDMortPisc;
tPMortPiscBot = fPBone * tPMortPisc;
tPMortPiscPO4 = fDissMortPisc *(tPMortPisc - tPMortPiscBot);
tPMortPiscDet = tPMortPisc - tPMortPiscBot - tPMortPiscPO4;
tPMigrPisc = kMigrPisc *(cPDPisc * cDPiscIn - aPPisc);
tPHarvPisc = cPDPisc * tDHarvPisc;
aNPisc = cNDPisc * sDPisc;
tNConsFiJvPisc = rNDFiJv * tDConsFiJvPisc;
tNConsFiAdPisc = rNDFiAd * tDConsFiAdPisc;
tNConsPisc = tNConsFiJvPisc + tNConsFiAdPisc;
rNDFoodPisc = tNConsPisc / tDConsPisc;
afNAssPisc = MIN(1.0,cNDPisc / rNDFoodPisc * fDAssPisc);
tNAssPisc = afNAssPisc * tNConsPisc;
tNEgesPisc = tNConsPisc - tNAssPisc;
tNEgesPiscNH4 = fDissEgesPisc * tNEgesPisc;
tNEgesPiscDet = tNEgesPisc - tNEgesPiscNH4;
tNExcrPisc = cNDPisc * tDRespPisc;
tNMortPisc = cNDPisc * tDMortPisc;
tNMortPiscBot = fDBone * tNMortPisc;
tNMortPiscNH4 = fDissMortPisc *(tNMortPisc - tNMortPiscBot);
tNMortPiscDet = tNMortPisc - tNMortPiscBot - tNMortPiscNH4;
tNMigrPisc = kMigrPisc *(cNDPisc * cDPiscIn - aNPisc);
tNHarvPisc = cNDPisc * tDHarvPisc;
tDWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrBent + tDAssBent - tDConsFiAd - tDRespBent - tDMortBent ENDIF;
tPWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrBent + tPAssBent - tPConsFiAd - tPExcrBent - tPMortBent ENDIF;
tNWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrBent + tNAssBent - tNConsFiAd - tNExcrBent - tNMortBent ENDIF;
tNWebTotS = tNWebNH4S + tNWebNO3S + tNWebDetS + tNWebDiatS + tNWebGrenS + tNWebBlueS + tNWebBent ;
tDWebFiJv = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrFiJv + tDReprFish - tDAgeFish + tDAssFiJv - tDRespFiJv - tDMortFiJv - tDConsFiJvPisc ENDIF;
tPWebFiJv = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiJv + tPReprFish - tPAgeFish + tPAssFiJv - tPExcrFiJv - tPMortFiJv - tPConsFiJvPisc ENDIF;
tNWebFiJv =IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiJv + tNReprFish - tNAgeFish + tNAssFiJv - tNExcrFiJv - tNMortFiJv - tNConsFiJvPisc ENDIF;
tDWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrFiAd + tDAssFiAd - tDRespFiAd - tDMortFiAd - tDReprFish + tDAgeFish - tDConsFiAdPisc - tDHarvFish ENDIF;
tPWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiAd + tPAssFiAd - tPExcrFiAd - tPMortFiAd - tPReprFish + tPAgeFish - tPConsFiAdPisc - tPHarvFish ENDIF;
tNWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiAd + tNAssFiAd - tNExcrFiAd - tNMortFiAd - tNReprFish + tNAgeFish - tNConsFiAdPisc - tNHarvFish ENDIF;
tDWebPisc = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrPisc + tDAssPisc - tDRespPisc - tDMortPisc - tDHarvPisc ENDIF;
wDWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssZooHyp - wDRespZooHyp - wDMortZooHyp - tDConsFiJv * (( aDTotZoo - oDZooEpi * sDepthWEpi) / (aDTotZoo + NearZero)) / sDepthWHyp ENDIF;
wDWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDetZooHyp + wDEgesZooHyp + wDMortZooHyp +(tDEgesFiJv * uFiJvEgesHyp + tDEgesFiAd * uFiAdEgesHyp + tDMortFiJvDet * uFiJvMortHyp + tDMortFiAdDet * uFiAdMortHyp + tDEgesPisc * uPiscEgesHyp + tDMortPiscDet * uPiscMortHyp) / sDepthWHyp ENDIF;
wDWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDiatZooHyp ENDIF;
wDWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsGrenZooHyp ENDIF;
wDWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsBlueZooHyp ENDIF;
wDWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wDAssZooEpi - wDRespZooEpi - wDMortZooEpi - tDConsFiJv * (oDZooEpi * sDepthWEpi / (aDTotZoo + NearZero) ) / sDepthWEpi ENDIF;
wDWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDetZooEpi + wDEgesZooEpi + wDMortZooEpi +(tDEgesFiJv * ( 1.0 - uFiJvEgesHyp ) + tDEgesFiAd * ( 1.0 - uFiAdEgesHyp ) + tDMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tDMortFiAdDet * ( 1.0 - uFiAdMortHyp ) + tDEgesPisc * ( 1.0 - uPiscEgesHyp ) + tDMortPiscDet * ( 1.0 - uPiscMortHyp)) / sDepthWEpi ENDIF;
wDWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDiatZooEpi ENDIF;
wDWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsGrenZooEpi ENDIF;
wDWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsBlueZooEpi ENDIF;
tDWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tDConsBlueZooSurf ENDIF;
tDWebTotW = (wDWebDetWHyp + wDWebDiatWHyp + wDWebGrenWHyp + wDWebBlueWHyp + wDWebZooHyp) *sDepthWHyp + (wDWebDetWEpi + wDWebDiatWEpi + wDWebGrenWEpi + wDWebBlueWEpi + wDWebZooEpi) *sDepthWEpi + tDWebFiAd + tDWebFiJv + tDWebPisc ;
tDWebTotWEpi = (wDWebDetWEpi + wDWebDiatWEpi + wDWebGrenWEpi + wDWebBlueWEpi + wDWebZooEpi) * sDepthWEpi;
tDWebTotWHyp = (wDWebDetWHyp + wDWebDiatWHyp + wDWebGrenWHyp + wDWebBlueWHyp + wDWebZooHyp) * sDepthWHyp;
tDWebTotS = tDWebDetS + tDWebDiatS + tDWebGrenS + tDWebBlueS + tDWebBent;
tDWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDRespZooEpi * sDepthWEpi + - wDRespZooHyp * sDepthWHyp + tDMigrFiJv + tDMigrFiAd + tDMigrPisc + tDMigrBent - tDRespFiJv - tDRespFiAd - tDRespPisc - tDRespBent - tDMortFiJvBot - tDMortFiAdBot- tDMortPiscBot - tDHarvFish - tDHarvPisc ENDIF;
wPWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wPAssZooHyp - wPExcrZooHyp - wPMortZooHyp - tPConsFiJv * (( aPTotZoo - oPZooEpi * sDepthWEpi ) / (aPTotZoo + NearZero) ) / sDepthWHyp ENDIF;
wPWebPO4WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPExcrZooHyp + wPEgesZooPO4Hyp + wPMortZooPO4Hyp +(tPExcrFiJv *uFiJvExcrHyp + tPExcrFiAd * uFiAdExcrHyp + tPEgesFiJvPO4 * uFiJvEgesHyp + tPEgesFiAdPO4 * uFiAdEgesHyp + tPMortFiJvPO4 * uFiJvMortHyp + tPMortFiAdPO4 * uFiAdMortHyp+ tPExcrPisc * uPiscExcrHyp + tPEgesPiscPO4 * uPiscEgesHyp + tPMortPiscPO4 * uPiscMortHyp ) / sDepthWHyp ENDIF;
wPWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDetZooHyp + wPEgesZooDetHyp + wPMortZooDetHyp +(tPEgesFiJvDet * uFiJvEgesHyp + tPEgesFiAdDet * uFiAdEgesHyp+ tPMortFiJvDet * uFiJvMortHyp + tPMortFiAdDet * uFiAdMortHyp+ tPEgesPiscDet * uPiscEgesHyp+ tPMortPiscDet * uPiscMortHyp) / sDepthWHyp ENDIF;
wPWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDiatZooHyp ENDIF;
wPWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsGrenZooHyp ENDIF;
wPWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsBlueZooHyp ENDIF;
wPWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPAssZooEpi - wPExcrZooEpi - wPMortZooEpi - tPConsFiJv * (oPZooEpi * sDepthWEpi / (aPTotZoo + NearZero)) / sDepthWEpi ENDIF;
wPWebPO4WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPExcrZooEpi + wPEgesZooPO4Epi + wPMortZooPO4Epi +(tPExcrFiJv * ( 1.0 -uFiJvExcrHyp ) + tPExcrFiAd * ( 1.0 - uFiAdExcrHyp )+ tPEgesFiJvPO4 * ( 1.0 - uFiJvEgesHyp ) + tPEgesFiAdPO4 * ( 1.0 - uFiAdEgesHyp ) + tPMortFiJvPO4 * ( 1.0 - uFiJvMortHyp ) + tPMortFiAdPO4 * ( 1.0 - uFiAdMortHyp )+ tPExcrPisc * ( 1.0 - uPiscExcrHyp ) + tPEgesPiscPO4 * ( 1.0 - uPiscEgesHyp ) + tPMortPiscPO4 * ( 1.0 - uPiscMortHyp)) / sDepthWEpi ENDIF;
wPWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDetZooEpi + wPEgesZooDetEpi + wPMortZooDetEpi +(tPEgesFiJvDet * ( 1.0 - uFiJvEgesHyp ) + tPEgesFiAdDet * ( 1.0 - uFiAdEgesHyp )+ tPMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tPMortFiAdDet * ( 1.0 - uFiAdMortHyp )+ tPEgesPiscDet * ( 1.0 - uPiscEgesHyp )+ tPMortPiscDet * ( 1.0 - uPiscMortHyp )) / sDepthWEpi ENDIF;
wPWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDiatZooEpi ENDIF;
wPWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsGrenZooEpi ENDIF;
wPWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsBlueZooEpi ENDIF;
tPWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tPConsBlueZooSurf ENDIF;
tPWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiJv + tPMigrFiAd + tPMigrPisc + tPMigrBent - tPMortFiJvBot - tPMortFiAdBot- tPMortPiscBot - tPHarvFish - tPHarvPisc ENDIF;
tNEgesFiAdNH4 = fDissEgesFish * tNEgesFiAd;
tNEgesFiAdDet = tNEgesFiAd - tNEgesFiAdNH4;
wNWebNO3WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
wNWebNO3WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
wNWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wNAssZooHyp - wNExcrZooHyp - wNMortZooHyp - tNConsFiJv * (( aNTotZoo -oNZooEpi * sDepthWEpi ) / (aNTotZoo + NearZero) ) / sDepthWHyp ENDIF;
wNWebNH4WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNExcrZooHyp + wNEgesZooNH4Hyp + wNMortZooNH4Hyp +(tNExcrFiJv * uFiJvExcrHyp + tNExcrFiAd * uFiAdExcrHyp + tNEgesFiJvNH4 * uFiJvEgesHyp+ tNEgesFiAdNH4 * uFiAdEgesHyp + tNMortFiAdNH4 *uFiAdMortHyp+ tNMortFiJvNH4*uFiJvMortHyp + tNExcrPisc *uPiscExcrHyp + tNEgesPiscNH4 *uPiscEgesHyp + tNMortPiscNH4 *uPiscMortHyp) / sDepthWHyp ENDIF;
wNWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDetZooHyp + wNEgesZooDetHyp + wNMortZooDetHyp +(tNEgesFiJvDet * uFiJvEgesHyp +tNEgesFiAdDet * uFiAdEgesHyp+ tNMortFiJvDet * uFiJvMortHyp + tNMortFiAdDet * uFiAdMortHyp + tNEgesPiscDet * uPiscEgesHyp + tNMortPiscDet * uPiscMortHyp) / sDepthWHyp ENDIF;
wNWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDiatZooHyp ENDIF;
wNWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsGrenZooHyp ENDIF;
wNWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsBlueZooHyp ENDIF;
wNWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNAssZooEpi - wNExcrZooEpi - wNMortZooEpi - tNConsFiJv * (oNZooEpi * sDepthWEpi / (aNTotZoo + NearZero) ) / sDepthWEpi ENDIF;
wNWebNH4WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNExcrZooEpi + wNEgesZooNH4Epi + wNMortZooNH4Epi +(tNExcrFiJv * ( 1.0 - uFiJvExcrHyp) + tNExcrFiAd * ( 1.0 - uFiAdExcrHyp) + tNEgesFiJvNH4 * ( 1.0 - uFiJvEgesHyp ) + tNEgesFiAdNH4 * ( 1.0 - uFiAdEgesHyp ) + tNMortFiAdNH4 * ( 1.0 -uFiAdMortHyp ) + tNMortFiJvNH4* ( 1.0 -uFiJvMortHyp) + tNExcrPisc * ( 1.0 -uPiscExcrHyp ) + tNEgesPiscNH4 * ( 1.0 -uPiscEgesHyp ) + tNMortPiscNH4 * ( 1.0 -uPiscMortHyp)) / sDepthWEpi ENDIF;
wNWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDetZooEpi + wNEgesZooDetEpi + wNMortZooDetEpi +(tNEgesFiJvDet * ( 1.0 - uFiJvEgesHyp ) +tNEgesFiAdDet * ( 1.0 - uFiAdEgesHyp ) + tNMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tNMortFiAdDet * ( 1.0 - uFiAdMortHyp ) + tNEgesPiscDet * ( 1.0 - uPiscEgesHyp ) + tNMortPiscDet * ( 1.0 - uPiscMortHyp )) / sDepthWEpi ENDIF;
wNWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDiatZooEpi ENDIF;
wNWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsGrenZooEpi ENDIF;
wNWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsBlueZooEpi ENDIF;
tNWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR sDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tNConsBlueZooSurf ENDIF;
tNWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiJv + tNMigrFiAd + tNMigrPisc + tNMigrBent - tNMortFiJvBot- tNMortFiAdBot - tNMortPiscBot - tNHarvFish - tNHarvPisc ENDIF;
tNWebTotW = (wNWebNH4WHyp + wNWebNO3WHyp + wNWebDetWHyp + wNWebDiatWHyp + wNWebGrenWHyp + wNWebBlueWHyp + wNWebZooHyp) * sDepthWHyp + (wNWebNH4WEpi  + wNWebNO3WEpi + wNWebDetWEpi + wNWebDiatWEpi + wNWebGrenWEpi + wNWebBlueWEpi + wNWebZooEpi) * sDepthWEpi + tNWebFiAd + tNWebFiJv;
wSiWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wSiConsDiatZooEpi ENDIF;
aPrefAveEpi = (cPrefDiat * oDDiatWEpi + cPrefGren * oDGrenWEpi + cPrefBlue * oDBlueWEpi + cPrefDet * oDDetWEpi) / oDOMWEpi;
wDConsZoo2Epi = aFiltEpi * aPrefAveEpi * oDOMWEpi * oDZooEpi;
aDConsZooSpEpi = wDConsZooEpi / oDZooEpi;
aDAssZooSpEpi = wDAssZooEpi / oDZooEpi;
aDGrazSpEpi = wDConsZooEpi / oDOMWEpi;
aPConsZooSpEpi = wPConsZooEpi / oPZooEpi;
aPGrazSpEpi = wPConsZooEpi / oPOMWEpi;
aNConsZooSpEpi = wNConsZooEpi / oNZooEpi;
aNGrazSpEpi = wNConsZooEpi / oNOMWEpi;
tDSetTotEpi = tDSetIMEpi + tDSetDetEpi + tDSetPhytEpi;
tPSetTotEpi = tPSetAIMEpi + tPSetDetEpi + tPSetPhytEpi;
tNSetTotEpi = tNSetDetEpi + tNSetPhytEpi;
tDResusTot = tDResusDead + tDResusPhytTot;
tPResusTot = tPResusDet + tPResusAIM + tPResusPhyt + tPResusPO4;
tNResusTot = tNResusDet + tNResusNH4 + tNResusNO3 + tNResusPhyt;
aDepthStart = IF (sTime EQ bTimeDred) THEN uDepthW ELSE aDepthStart ENDIF;
akDredDepth = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (LN(cDepthRef / aDepthStart)) / cLengDred ELSE 0.0 ENDIF;
akDred = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (- LN(1.0 - fEffDred)) / cLengDred ELSE 0.0 ENDIF;
akDredBent = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (- LN(1.0 - fEffDredBent)) / cLengDred ELSE 0.0 ENDIF;
vDredDepthW =IF (aInclStrat EQ TRUE) THEN 0.0 ELSE akDredDepth * uDepthW ENDIF;
tDDredDetS = akDred * sDDetS;
tPDredDetS = akDred * sPDetS;
tNDredDetS = akDred * sNDetS;
tSiDredDetS = akDred * sSiDetS;
tPDredAIMS = akDred * sPAIMS;
tDDredNetSoil = -(tDDredDetS / cRhoOM) * bRhoSolidSoil;
tDDredNetIMS = (1.0 - fDOrgSoil) * tDDredNetSoil;
tDDredNetHumS = fDOrgSoil * tDDredNetSoil;
tPDredNetHumS = cPDSoilOM * tDDredNetHumS;
tNDredNetHumS = cNDSoilOM * tDDredNetHumS;
tDDredDiatS = akDred * sDDiatS;
tPDredDiatS = akDred * sPDiatS;
tNDredDiatS = akDred * sNDiatS;
tDDredGrenS = akDred * sDGrenS;
tPDredGrenS = akDred * sPGrenS;
tNDredGrenS = akDred * sNGrenS;
tDDredBlueS = akDred * sDBlueS;
tPDredBlueS = akDred * sPBlueS;
tNDredBlueS = akDred * sNBlueS;
tDDredPhytS = tDDredDiatS+tDDredGrenS+tDDredBlueS;
tPDredPhytS = tPDredDiatS+tPDredGrenS+tPDredBlueS;
tNDredPhytS = tNDredDiatS+tNDredGrenS+tNDredBlueS;
tDDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * sDBent ELSE 0.0 ENDIF;
tPDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * sPBent ELSE 0.0 ENDIF;
tNDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * sNBent ELSE 0.0 ENDIF;
tDDredVeg = akDred * sDVeg;
tPDredVeg = akDred * sPVeg;
tNDredVeg = akDred * sNVeg;
tDDredNetTotW =tDDredVeg;
tNDredNetTotW = tNDredVeg;
tDDredNetTotS = tDDredNetIMS + tDDredNetHumS + tDDredDetS + tDDredDiatS + tDDredGrenS + tDDredBlueS + tDDredBent;
tNDredNetTotS =  tNDredDetS + tNDredNetHumS + tNDredDiatS + tPDredGrenS + tNDredBlueS + tNDredBent;
tDDredNetTot = tDDredDetS - tDDredNetSoil + tDDredPhytS + tDDredBent + tDDredVeg;
tPDredNetTot = tPDredDetS - tPDredNetHumS + tPDredAIMS + tPDredPhytS + tPDredBent + tPDredVeg;
tNDredNetTot = tNDredDetS - tNDredNetHumS + tNDredPhytS + tNDredBent + tNDredVeg;
tSiDredTot = tSiDredDetS + cSiDDiat * tDDredDiatS;
tDIMS = tDAbioIMS;
tDHumS = tDAbioHumS;
tDDetS = tDAbioDetS + tDPrimDetS + tDWebDetS + tDBedDetSEpi + tDBedDetSHyp;
vDeltaS = (tDIMS / cRhoIM +(tDHumS + tDDetS) / cRhoOM)/(1.0 - bPorS);
vDeltaW = IF (ConstDepth EQ TRUE ) THEN 0.0 ELSE - vDeltaS ENDIF;
tDBurIM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / ((sDHumS + sDDetS) / sDIMS + cRhoOM / cRhoIM) ELSE ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) ENDIF;
tDBurOM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN (sDHumS + sDDetS) / sDIMS * tDBurIM ELSE fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIM ENDIF;
tDBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN sDDetS /(sDHumS + sDDetS) * tDBurOM ELSE 0.0 ENDIF;
tDBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tDBurOM - tDBurDet ELSE tDBurOM ENDIF;
tDBurTot =IF (InclBur EQ FALSE) THEN 0.0 ELSEIF(vDeltaS GE 0.0) THEN tDBurIM + tDBurOM ELSE tDBurIM + tDBurOM ENDIF;
tPBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rPDHumS * tDBurHum ELSE cPDSoilOM * tDBurHum ENDIF;
tPBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF(vDeltaS GE 0.0) THEN rPDDetS * tDBurDet ELSE 0.0 ENDIF;
tPBurAIM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN sPAIMS / sDIMS * tDBurIM ELSE 0.0 ENDIF;
tPBurPO4 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN sPO4S *(vDeltaS / cDepthS) ELSE cPO4Ground *(bPorS * vDeltaS) ENDIF;
tPBurTot = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tPBurDet + tPBurHum + tPBurAIM + tPBurPO4 ELSE tPBurHum + tPBurAIM + tPBurPO4 ENDIF;
tNBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rNDHumS * tDBurHum ELSE cNDSoilOM * tDBurHum ENDIF;
tNBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rNDDetS * tDBurDet ELSE 0.0 ENDIF;
tNBurNH4 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN sNH4S *(vDeltaS / cDepthS) ELSE cNH4Ground *(bPorS * vDeltaS) ENDIF;
tNBurNO3 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN sNO3S *(vDeltaS / cDepthS) ELSE cNO3Ground *(bPorS * vDeltaS) ENDIF;
tNBurTot = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tNBurDet + tNBurHum + tNBurNH4 + tNBurNO3 ELSE tNBurHum + tNBurNH4 + tNBurNO3 ENDIF;
tSiBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rSiDDetS * tDBurDet ELSE 0.0 ENDIF;
tSiBurTot =IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tSiBurDet ELSE 0.0 ENDIF;
aRelDeltaWEpi = IF ( aInclStrat EQ TRUE ) THEN (vDeltaW ) / sDepthWEpi ELSE (vDeltaW + vDredDepthW) / sDepthWEpi ENDIF;
aRelDeltaWHyp = IF ( aInclStrat EQ FALSE ) THEN 0.0 ELSE (vDredDepthW) / sDepthWHyp ENDIF ;
aPFish = sPFiJv + sPFiAd;
aNFish = sNFiJv + sNFiAd;
aDRelTotW = - (sDepthWHyp * aRelDeltaWHyp * ( oDDetWHyp + oDIMWHyp + oDDiatWHyp + oDGrenWHyp + oDBlueWHyp + oDZooHyp ) + sDepthWEpi * aRelDeltaWEpi * (oDDetWEpi + oDIMWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + oDZooEpi ));
aDRelTotWEpi = aRelDeltaWEpi * (oDIMWEpi + oDDetWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi+ oDZooEpi) * sDepthWEpi;
aDRelTotWHyp = aRelDeltaWHyp * (oDIMWHyp + oDDetWHyp + oDDiatWHyp + oDGrenWHyp + oDBlueWHyp+ oDZooHyp) * sDepthWHyp;
aNRelTotW= aRelDeltaWHyp * (oNH4WHyp + oNO3WHyp + oNDetWHyp +  oNDiatWHyp + oNGrenWHyp + oNBlueWHyp + oNZooHyp) * sDepthWHyp + aRelDeltaWEpi * (oNH4WEpi + oNO3WEpi + oNDetWEpi + oNDiatWEpi + oNGrenWEpi + oNBlueWEpi + oNZooEpi) * sDepthWEpi;
aDRelTotT = sDepthWHyp * aRelDeltaWHyp * ( oDDetWHyp + oDIMWHyp + oDDiatWHyp + oDGrenWHyp + oDBlueWHyp + oDZooHyp ) + fMarsh * sDepthWM * aRelDeltaWM * ( oDDetWM + oDIMWM + oDDiatWM + oDGrenWM + oDBlueWM + oDZooM) + sDepthWEpi * aRelDeltaWEpi * (oDDetWEpi + oDIMWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + oDZooEpi );
aNRelTotT = sDepthWHyp * aRelDeltaWHyp * ( oNH4WHyp + oNO3WHyp + oNDetWHyp + oNDiatWHyp + oNGrenWHyp + oNBlueWHyp + oNZooHyp ) + fMarsh * sDepthWM * aRelDeltaWM * ( oNH4WM + oNO3WM + oNDetWM + oNDiatWM + oNGrenWM + oNBlueWM + oNZooM ) + sDepthWEpi * aRelDeltaWEpi * ( oNH4WEpi + oNO3WEpi + oNDetWEpi + oNDiatWEpi + oNGrenWEpi + oNBlueWEpi + oNZooEpi );
aPRelTotT = sDepthWHyp * aRelDeltaWHyp * ( oPO4WHyp + oPAIMWHyp + oPDetWHyp + oPDiatWHyp + oPGrenWHyp + oPBlueWHyp + oPZooHyp ) + fMarsh * sDepthWM * aRelDeltaWM * (oPO4WM + oPAIMWM + oPDetWM + oPDiatWM + oPGrenWM + oPBlueWM + oPZooM ) + sDepthWEpi * aRelDeltaWEpi * (oPO4WEpi + oPAIMWEpi + oPDetWEpi + oPDiatWEpi + oPGrenWEpi + oPBlueWEpi + oPZooEpi );
aSiRelTotT = sDepthWHyp * aRelDeltaWHyp * ( oSiO2WHyp + oSiDetWHyp + cSiDDiat*oDDiatWHyp) + fMarsh * sDepthWM * aRelDeltaWM * ( oSiO2WM + oSiDetWM + cSiDDiat*oDDiatWM) + sDepthWEpi * aRelDeltaWEpi * ( oSiO2WEpi + oSiDetWEpi + cSiDDiat*oDDiatWEpi);
aO2RelTotT = sDepthWHyp * aRelDeltaWHyp* oO2WHyp + fMarsh * sDepthWM * aRelDeltaWM * oO2WM + sDepthWEpi * aRelDeltaWEpi * oO2WEpi ;
aDTotTHyp = IF (aInclStrat EQ TRUE) THEN (oDIMWHyp+oDDetWHyp+oDDiatWHyp+oDGrenWHyp+oDBlueWHyp+oDZooHyp) * sDepthWHyp ELSE 0.0 ENDIF;
aNTotTHyp = IF (aInclStrat EQ TRUE) THEN (oNH4WHyp+oNO3WHyp+oNDetWHyp+oNDiatWHyp+oNGrenWHyp+oNBlueWHyp +oNZooHyp)*sDepthWHyp ELSE 0.0 ENDIF;
aPTotTHyp = IF (aInclStrat EQ TRUE) THEN (oPO4WHyp+oPDetWHyp+oPDiatWHyp+oPGrenWHyp+oPBlueWHyp +oPZooHyp+oPAIMWHyp) * sDepthWHyp ELSE 0.0 ENDIF;
aSiTotTHyp = IF (aInclStrat EQ TRUE) THEN (oSiO2WHyp + oSiDetWHyp + cSiDDiat*oDDiatWHyp) *sDepthWHyp ELSE 0.0 ENDIF;
aO2TotTHyp = IF (aInclStrat EQ TRUE) THEN (oO2WHyp ) *sDepthWHyp ELSE 0.0 ENDIF;
aDTotW = aDTotTHyp +  (oDIMWEpi + oDDetWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + oDZooEpi) * sDepthWEpi + aDFish + sDPisc + aDVeg;
aDTotWEpi = (oDIMWEpi + oDDetWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + oDZooEpi) * sDepthWEpi ;
aDTotWHyp = aDTotTHyp ;
aNTotW = aNTotTHyp+ (oNH4WEpi+oNO3WEpi+oNDetWEpi+oNDiatWEpi+oNGrenWEpi+oNBlueWEpi +oNZooEpi)*sDepthWEpi + aNFish + aNVeg;
aDTotTS = sDIMS+sDHumS+sDDetS+sDDiatS+sDGrenS+sDBlueS+sDBent;
aNTotTS = sNH4S+sNO3S+sNDetS+sNHumS+sNDiatS+sNGrenS+sNBlueS +sNBent;
aDTotT = aDTotTHyp + (oDIMWEpi+oDDetWEpi+oDDiatWEpi+oDGrenWEpi+oDBlueWEpi+oDZooEpi) * sDepthWEpi +aDFish+sDPisc+aDVeg +sDIMS+sDHumS+sDDetS+sDDiatS+sDGrenS+sDBlueS+sDBent + aDTotM + sDBlueSurf;
aNTotT = aNTotTHyp+ (oNH4WEpi+oNO3WEpi+oNDetWEpi+oNDiatWEpi+oNGrenWEpi+oNBlueWEpi +oNZooEpi)*sDepthWEpi +aNFish+aNPisc+aNVeg +sNH4S+sNO3S+sNDetS+sNHumS+sNDiatS+sNGrenS+sNBlueS +sNBent + aNTotM + sNBlueSurf;
aPTotT = aPTotTHyp + (oPO4WEpi+oPDetWEpi+oPDiatWEpi+oPGrenWEpi+oPBlueWEpi +oPZooEpi+oPAIMWEpi) * sDepthWEpi +aPFish+aPPisc+aPVeg +sPO4S+sPDetS+sPHumS+sPDiatS+sPGrenS+sPBlueS +sPAIMS+sPBent + aPTotM +sPBlueSurf;
aSiTotT = aSiTotTHyp + (oSiO2WEpi + oSiDetWEpi + cSiDDiat*oDDiatWEpi) *sDepthWEpi + sSiDetS + cSiDDiat*sDDiatS + aSiTotM;
aO2TotT = aO2TotTHyp + ( oO2WEpi) *sDepthWEpi + aO2TotM;
tDBedTotW = tDBedVeg ;
tNBedTotW  = (wNBedNH4WHyp + wNBedNO3WHyp + wNBedDetWHyp) * sDepthWHyp + (wNBedNH4WEpi + wNBedNO3WEpi + wNBedDetWEpi) * sDepthWEpi + tNBedVeg ;
tDBedTotS =  tDBedDetSEpi + tDBedDetSHyp;
tNBedTotS = tNBedNH4S + tNBedNO3S + tNBedDetS;
tDBedTotT = IF InclVeg EQ TRUE THEN tDMigrVeg + tDProdVegHyp+ tDProdVegEpi - tDRespVeg - tDManVeg - tDAssVegBird ELSE 0.0 ENDIF;
tPBedTotT = IF InclVeg EQ TRUE THEN tPMigrVeg - tPManVeg - tPAssVegBird ELSE 0.0 ENDIF;
tNBedTotT = IF InclVeg EQ TRUE THEN tNMigrVeg - tNManVeg - tNAssVegBird ELSE 0.0 ENDIF ;
aDErrorW = aDTotW - sDExtTotW;
aDErrorWEpi = aDTotWEpi - sDExtTotWEpi;
aDErrorWHyp = aDTotWHyp - sDExtTotWHyp;
aNErrorW = aNTotW - sNExtTotW;
aDErrorS = aDTotTS - sDExtTotS;
aNErrorS = aNTotTS - sNExtTotS;
aDError = aDTotT - sDExtTotT;
aNError = aNTotT - sNExtTotT;
aPError = aPTotT - sPExtTotT;
aSiError = aSiTotT - sSiExtTotT;
aO2Error = aO2TotT - sO2ExtTotT;
